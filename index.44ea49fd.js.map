{"mappings":"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","sources":["<anon>","src/index.js","src/info.js","src/acordes.js","node_modules/@tonaljs/chord/dist/index.mjs","node_modules/@tonaljs/chord/index.ts","node_modules/@tonaljs/chord-detect/dist/index.mjs","node_modules/@tonaljs/chord-detect/index.ts","node_modules/@tonaljs/chord-type/dist/index.mjs","node_modules/@tonaljs/chord-type/index.ts","node_modules/@tonaljs/chord-type/data.ts","node_modules/@tonaljs/core/dist/index.mjs","node_modules/@tonaljs/core/index.ts","node_modules/@tonaljs/pitch/dist/index.mjs","node_modules/@tonaljs/pitch/index.ts","node_modules/@tonaljs/pitch-distance/dist/index.mjs","node_modules/@tonaljs/pitch-distance/index.ts","node_modules/@tonaljs/pitch-interval/dist/index.mjs","node_modules/@tonaljs/pitch-interval/index.ts","node_modules/@tonaljs/pitch-distance/node_modules/@tonaljs/pitch-note/dist/index.mjs","node_modules/@tonaljs/pitch-distance/node_modules/@tonaljs/pitch-note/index.ts","node_modules/@tonaljs/core/node_modules/@tonaljs/pitch-note/dist/index.mjs","node_modules/@tonaljs/core/node_modules/@tonaljs/pitch-note/index.ts","node_modules/@tonaljs/pcset/dist/index.mjs","node_modules/@tonaljs/pcset/index.ts","node_modules/@tonaljs/collection/dist/index.mjs","node_modules/@tonaljs/collection/index.ts","node_modules/@tonaljs/chord/node_modules/@tonaljs/pitch-note/dist/index.mjs","node_modules/@tonaljs/chord/node_modules/@tonaljs/pitch-note/index.ts","node_modules/@tonaljs/scale-type/dist/index.mjs","node_modules/@tonaljs/scale-type/index.ts","node_modules/@tonaljs/scale-type/data.ts"],"sourcesContent":["function $31fcbff186f504bd$export$7b1762f2253f172b() {\n    let p = document.createElement(\"p\");\n    let p2 = document.createElement(\"p\");\n    let h2 = document.createElement(\"h2\");\n    let h2_contato = document.createElement(\"h2\");\n    let sec = document.createElement(\"section\");\n    let linkedin = document.createElement(\"a\");\n    let git = document.createElement(\"a\");\n    let email = document.createElement(\"a\");\n    let linkholder = document.createElement(\"div\");\n    linkholder.classList.add(\"link-holder\");\n    sec.classList.add(\"sec-info\");\n    h2_contato.append(\"Informa\\xe7\\xf5es de contato\");\n    h2.append(\"Sobre o site\");\n    p.append(\"Nesse projeto pessoal de minha autoria voc\\xea pode escolher as posi\\xe7\\xf5es das notas no bra\\xe7o do viol\\xe3o, em formato de cifra, e ent\\xe3o achar o nome do acorde digitado.\");\n    p2.append(\"Foi utilizado o empacotador web Parcel junto com Javascript, CSS, HTML e a biblioteca javascript de teoria musical 'tonal'.\");\n    linkedin.append(\"Linkedin\");\n    git.append(\"Github\");\n    email.append(\"arthurlacerda206@gmail.com\");\n    linkedin.href = \"https://www.linkedin.com/in/arthurfl0\";\n    git.href = \"https://github.com/arthurFL0\";\n    email.href = \"mailto:arthurlacerda206@gmail.com\";\n    linkholder.append(linkedin, git, email);\n    sec.append(h2, p, p2, h2_contato, linkholder);\n    document.querySelector(\".builder-container\").replaceChildren(sec);\n}\n\n\n\nfunction $536c869b7829f0c2$export$11cdf119b9ba7752() {\n    let divContainer = document.createElement(\"div\");\n    divContainer.classList.add(\"container-acordes\");\n    document.querySelector(\".builder-container\").replaceChildren(divContainer);\n    let arrAcordes = localStorage.getItem(\"acordes\") ? JSON.parse(localStorage.getItem(\"acordes\")) : [];\n    if (arrAcordes.length > 0) arrAcordes.forEach((acorde, index)=>{\n        let div = document.createElement(\"div\");\n        let btn = document.createElement(\"button\");\n        btn.append(acorde.nome);\n        btn.classList.add(\"btn-acorde\", \"pointer\");\n        div.classList.add(\"div-acorde\");\n        div.append(btn);\n        divContainer.append(div);\n        btn.addEventListener(\"click\", ()=>{\n            $536c869b7829f0c2$var$renderAcorde(acorde, index);\n        });\n    });\n    else {\n        let div = document.createElement(\"div\");\n        div.classList.add(\"acordes-placeholder\", \"c-default\");\n        let span = document.createElement(\"span\");\n        span.append(\"Crie acordes na tela do construtor e eles aparecer\\xe3o aqui!\");\n        div.append(span);\n        divContainer.append(div);\n    }\n}\nfunction $536c869b7829f0c2$var$renderAcorde(acorde, index) {\n    let divAcorde = document.createElement(\"div\");\n    divAcorde.classList.add(\"acorde-container\");\n    let divInformation = document.createElement(\"div\");\n    divInformation.classList.add(\"div-info\");\n    let divDisplay = document.createElement(\"div\");\n    divDisplay.classList.add(\"div-display\");\n    let divInferior = document.createElement(\"div\");\n    divInferior.classList.add(\"infoAcorde-container\", \"c-default\");\n    divInferior.append(divInformation, divDisplay);\n    let divSuperior = document.createElement(\"div\");\n    divSuperior.classList.add(\"btnAcorde-container\");\n    let btnVoltar = document.createElement(\"button\");\n    btnVoltar.append(\"Voltar\");\n    let btnRemover = document.createElement(\"button\");\n    btnRemover.append(\"Remover Acorde\");\n    btnRemover.classList.add(\"btnRemover\");\n    btnRemover.addEventListener(\"click\", ()=>{\n        $536c869b7829f0c2$var$removerAcorde(index);\n        $536c869b7829f0c2$export$11cdf119b9ba7752();\n    });\n    let divVoltar = document.createElement(\"div\");\n    let tagI = document.createElement(\"i\");\n    divVoltar.classList.add(\"voltar-container\", \"pointer\");\n    tagI.classList.add(\"fa-solid\", \"fa-right-long\", \"fa-rotate-180\");\n    divVoltar.append(tagI, btnVoltar);\n    divVoltar.addEventListener(\"click\", ()=>{\n        $536c869b7829f0c2$export$11cdf119b9ba7752();\n    });\n    divSuperior.append(divVoltar, btnRemover);\n    divAcorde.append(divSuperior);\n    divAcorde.append(divInferior);\n    let nomeAcorde = document.createElement(\"h2\");\n    nomeAcorde.append(acorde.nome);\n    nomeAcorde.classList.add(\"white\");\n    divInformation.append(nomeAcorde);\n    let h3 = document.createElement(\"h3\");\n    h3.append(\"Notas:\");\n    h3.classList.add(\"white\");\n    divInformation.append(h3);\n    acorde.notas.forEach((el, i)=>{\n        let p = document.createElement(\"p\");\n        let txt = `Corda ${i + 1}: ` + (el.nota != undefined ? el.nota : \"Sem nota\");\n        p.classList.add(\"white\");\n        p.append(txt);\n        divInformation.append(p);\n    });\n    $536c869b7829f0c2$var$construirAcorde(divDisplay, acorde);\n    document.querySelector(\".builder-container\").replaceChildren(divAcorde);\n}\nfunction $536c869b7829f0c2$var$construirAcorde(pai, acorde) {\n    let divCasas = document.createElement(\"div\");\n    divCasas.classList.add(\"numeroCasas-container\", \"c-default\", \"padding-t\");\n    let i = 0;\n    while(i < 5){\n        let span = document.createElement(\"span\");\n        span.append(acorde.range + i);\n        divCasas.append(span);\n        i = i + 1;\n    }\n    let div = document.createElement(\"div\");\n    let openNoteContainer = document.createElement(\"div\");\n    openNoteContainer.classList.add(\"openNote-container\");\n    let braco = document.createElement(\"div\");\n    braco.classList.add(\"braco\");\n    acorde.notas.forEach((nota, i)=>{\n        let divOpen = document.createElement(\"div\");\n        divOpen.classList.add(\"openNote-holder\");\n        let span = document.createElement(\"span\");\n        if (nota.casa === 6) span.classList.add(\"openNote-bola\", \"dis-block\");\n        else if (nota.casa === undefined) {\n            span.classList.add(\"openNote-span\");\n            span.append(\"X\");\n        }\n        divOpen.append(span);\n        openNoteContainer.append(divOpen);\n    });\n    (0, $35da740d59af89ba$export$3b0f3781aa3ef7a4)(braco, true, acorde.notas);\n    div.append(braco);\n    div.append(openNoteContainer);\n    pai.append(divCasas, div);\n}\nfunction $536c869b7829f0c2$var$removerAcorde(index) {\n    let arrNovo = JSON.parse(localStorage.getItem(\"acordes\"));\n    arrNovo.splice(index, 1);\n    console.log(arrNovo, \" \", index);\n    localStorage.setItem(\"acordes\", JSON.stringify(arrNovo));\n}\n\n\n// index.ts\n// index.ts\n// index.ts\n// index.ts\n// index.ts\nfunction $c1fc50133d2a8115$export$70ce4c42ed4560f3(src) {\n    return src !== null && typeof src === \"object\" && \"name\" in src && typeof src.name === \"string\" ? true : false;\n}\nvar $c1fc50133d2a8115$var$SIZES = [\n    0,\n    2,\n    4,\n    5,\n    7,\n    9,\n    11\n];\nvar $c1fc50133d2a8115$export$65e376726ced75b1 = ({ step: step, alt: alt })=>($c1fc50133d2a8115$var$SIZES[step] + alt + 120) % 12;\nvar $c1fc50133d2a8115$export$ac607276a8fe9f0a = ({ step: step, alt: alt, oct: oct, dir: dir = 1 })=>dir * ($c1fc50133d2a8115$var$SIZES[step] + alt + 12 * (oct === void 0 ? -100 : oct));\nvar $c1fc50133d2a8115$export$f4b3135d43fb03d5 = (pitch2)=>{\n    const h = $c1fc50133d2a8115$export$ac607276a8fe9f0a(pitch2);\n    return pitch2.oct !== void 0 && h >= -12 && h <= 115 ? h + 12 : null;\n};\nfunction $c1fc50133d2a8115$export$3a746b746d570840(pitch2) {\n    return pitch2 !== null && typeof pitch2 === \"object\" && \"step\" in pitch2 && typeof pitch2.step === \"number\" && \"alt\" in pitch2 && typeof pitch2.alt === \"number\" ? true : false;\n}\nvar $c1fc50133d2a8115$var$FIFTHS = [\n    0,\n    2,\n    4,\n    -1,\n    1,\n    3,\n    5\n];\nvar $c1fc50133d2a8115$var$STEPS_TO_OCTS = $c1fc50133d2a8115$var$FIFTHS.map((fifths)=>Math.floor(fifths * 7 / 12));\nfunction $c1fc50133d2a8115$export$741858880c96b18c(pitch2) {\n    const { step: step, alt: alt, oct: oct, dir: dir = 1 } = pitch2;\n    const f = $c1fc50133d2a8115$var$FIFTHS[step] + 7 * alt;\n    if (oct === void 0) return [\n        dir * f\n    ];\n    const o = oct - $c1fc50133d2a8115$var$STEPS_TO_OCTS[step] - 4 * alt;\n    return [\n        dir * f,\n        dir * o\n    ];\n}\nvar $c1fc50133d2a8115$var$FIFTHS_TO_STEPS = [\n    3,\n    0,\n    4,\n    1,\n    5,\n    2,\n    6\n];\nfunction $c1fc50133d2a8115$export$6c9e2d66dea2a302(coord) {\n    const [f, o, dir] = coord;\n    const step = $c1fc50133d2a8115$var$FIFTHS_TO_STEPS[$c1fc50133d2a8115$var$unaltered(f)];\n    const alt = Math.floor((f + 1) / 7);\n    if (o === void 0) return {\n        step: step,\n        alt: alt,\n        dir: dir\n    };\n    const oct = o + 4 * alt + $c1fc50133d2a8115$var$STEPS_TO_OCTS[step];\n    return {\n        step: step,\n        alt: alt,\n        oct: oct,\n        dir: dir\n    };\n}\nfunction $c1fc50133d2a8115$var$unaltered(f) {\n    const i = (f + 1) % 7;\n    return i < 0 ? 7 + i : i;\n}\n\n\n// index.ts\n// index.ts\n\nvar $4e01aabfc377cdb3$var$fillStr = (s, n)=>Array(Math.abs(n) + 1).join(s);\nvar $4e01aabfc377cdb3$var$NoInterval = {\n    empty: true,\n    name: \"\",\n    acc: \"\"\n};\nvar $4e01aabfc377cdb3$var$INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\nvar $4e01aabfc377cdb3$var$INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar $4e01aabfc377cdb3$var$REGEX = new RegExp(\"^\" + $4e01aabfc377cdb3$var$INTERVAL_TONAL_REGEX + \"|\" + $4e01aabfc377cdb3$var$INTERVAL_SHORTHAND_REGEX + \"$\");\nfunction $4e01aabfc377cdb3$export$4eeb042b94fbf5c0(str) {\n    const m = $4e01aabfc377cdb3$var$REGEX.exec(`${str}`);\n    if (m === null) return [\n        \"\",\n        \"\"\n    ];\n    return m[1] ? [\n        m[1],\n        m[2]\n    ] : [\n        m[4],\n        m[3]\n    ];\n}\nvar $4e01aabfc377cdb3$var$cache = {};\nfunction $4e01aabfc377cdb3$export$3174cdbf0a0cbc84(src) {\n    return typeof src === \"string\" ? $4e01aabfc377cdb3$var$cache[src] || ($4e01aabfc377cdb3$var$cache[src] = $4e01aabfc377cdb3$var$parse(src)) : (0, $c1fc50133d2a8115$export$3a746b746d570840)(src) ? $4e01aabfc377cdb3$export$3174cdbf0a0cbc84($4e01aabfc377cdb3$var$pitchName(src)) : (0, $c1fc50133d2a8115$export$70ce4c42ed4560f3)(src) ? $4e01aabfc377cdb3$export$3174cdbf0a0cbc84(src.name) : $4e01aabfc377cdb3$var$NoInterval;\n}\nvar $4e01aabfc377cdb3$var$SIZES = [\n    0,\n    2,\n    4,\n    5,\n    7,\n    9,\n    11\n];\nvar $4e01aabfc377cdb3$var$TYPES = \"PMMPPMM\";\nfunction $4e01aabfc377cdb3$var$parse(str) {\n    const tokens = $4e01aabfc377cdb3$export$4eeb042b94fbf5c0(str);\n    if (tokens[0] === \"\") return $4e01aabfc377cdb3$var$NoInterval;\n    const num = +tokens[0];\n    const q = tokens[1];\n    const step = (Math.abs(num) - 1) % 7;\n    const t = $4e01aabfc377cdb3$var$TYPES[step];\n    if (t === \"M\" && q === \"P\") return $4e01aabfc377cdb3$var$NoInterval;\n    const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n    const name = \"\" + num + q;\n    const dir = num < 0 ? -1 : 1;\n    const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n    const alt = $4e01aabfc377cdb3$var$qToAlt(type, q);\n    const oct = Math.floor((Math.abs(num) - 1) / 7);\n    const semitones = dir * ($4e01aabfc377cdb3$var$SIZES[step] + alt + 12 * oct);\n    const chroma = (dir * ($4e01aabfc377cdb3$var$SIZES[step] + alt) % 12 + 12) % 12;\n    const coord = (0, $c1fc50133d2a8115$export$741858880c96b18c)({\n        step: step,\n        alt: alt,\n        oct: oct,\n        dir: dir\n    });\n    return {\n        empty: false,\n        name: name,\n        num: num,\n        q: q,\n        step: step,\n        alt: alt,\n        dir: dir,\n        type: type,\n        simple: simple,\n        semitones: semitones,\n        chroma: chroma,\n        coord: coord,\n        oct: oct\n    };\n}\nfunction $4e01aabfc377cdb3$export$41be0c142b835bde(coord, forceDescending) {\n    const [f, o = 0] = coord;\n    const isDescending = f * 7 + o * 12 < 0;\n    const ivl = forceDescending || isDescending ? [\n        -f,\n        -o,\n        -1\n    ] : [\n        f,\n        o,\n        1\n    ];\n    return $4e01aabfc377cdb3$export$3174cdbf0a0cbc84((0, $c1fc50133d2a8115$export$6c9e2d66dea2a302)(ivl));\n}\nfunction $4e01aabfc377cdb3$var$qToAlt(type, q) {\n    return q === \"M\" && type === \"majorable\" || q === \"P\" && type === \"perfectable\" ? 0 : q === \"m\" && type === \"majorable\" ? -1 : /^A+$/.test(q) ? q.length : /^d+$/.test(q) ? -1 * (type === \"perfectable\" ? q.length : q.length + 1) : 0;\n}\nfunction $4e01aabfc377cdb3$var$pitchName(props) {\n    const { step: step, alt: alt, oct: oct = 0, dir: dir } = props;\n    if (!dir) return \"\";\n    const calcNum = step + 1 + 7 * oct;\n    const num = calcNum === 0 ? step + 1 : calcNum;\n    const d = dir < 0 ? \"-\" : \"\";\n    const type = $4e01aabfc377cdb3$var$TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n    const name = d + num + $4e01aabfc377cdb3$var$altToQ(type, alt);\n    return name;\n}\nfunction $4e01aabfc377cdb3$var$altToQ(type, alt) {\n    if (alt === 0) return type === \"majorable\" ? \"M\" : \"P\";\n    else if (alt === -1 && type === \"majorable\") return \"m\";\n    else if (alt > 0) return $4e01aabfc377cdb3$var$fillStr(\"A\", alt);\n    else return $4e01aabfc377cdb3$var$fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\n}\n\n\n// index.ts\n\nvar $202e805395000e0c$var$fillStr = (s, n)=>Array(Math.abs(n) + 1).join(s);\nvar $202e805395000e0c$var$NoNote = {\n    empty: true,\n    name: \"\",\n    pc: \"\",\n    acc: \"\"\n};\nvar $202e805395000e0c$var$cache = /* @__PURE__ */ new Map();\nvar $202e805395000e0c$export$4fed1eaee6342c12 = (step)=>\"CDEFGAB\".charAt(step);\nvar $202e805395000e0c$export$fe2c2edbd7417985 = (alt)=>alt < 0 ? $202e805395000e0c$var$fillStr(\"b\", -alt) : $202e805395000e0c$var$fillStr(\"#\", alt);\nvar $202e805395000e0c$export$8f7077a2780017bf = (acc)=>acc[0] === \"b\" ? -acc.length : acc.length;\nfunction $202e805395000e0c$export$a92e4c44d367d0af(src) {\n    const stringSrc = JSON.stringify(src);\n    const cached = $202e805395000e0c$var$cache.get(stringSrc);\n    if (cached) return cached;\n    const value = typeof src === \"string\" ? $202e805395000e0c$var$parse(src) : (0, $c1fc50133d2a8115$export$3a746b746d570840)(src) ? $202e805395000e0c$export$a92e4c44d367d0af($202e805395000e0c$var$pitchName(src)) : (0, $c1fc50133d2a8115$export$70ce4c42ed4560f3)(src) ? $202e805395000e0c$export$a92e4c44d367d0af(src.name) : $202e805395000e0c$var$NoNote;\n    $202e805395000e0c$var$cache.set(stringSrc, value);\n    return value;\n}\nvar $202e805395000e0c$var$REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction $202e805395000e0c$export$e13422ef2dcdcd5d(str) {\n    const m = $202e805395000e0c$var$REGEX.exec(str);\n    return m ? [\n        m[1].toUpperCase(),\n        m[2].replace(/x/g, \"##\"),\n        m[3],\n        m[4]\n    ] : [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ];\n}\nfunction $202e805395000e0c$export$d4bbcd58d1a5389d(noteCoord) {\n    return $202e805395000e0c$export$a92e4c44d367d0af((0, $c1fc50133d2a8115$export$6c9e2d66dea2a302)(noteCoord));\n}\nvar $202e805395000e0c$var$mod = (n, m)=>(n % m + m) % m;\nvar $202e805395000e0c$var$SEMI = [\n    0,\n    2,\n    4,\n    5,\n    7,\n    9,\n    11\n];\nfunction $202e805395000e0c$var$parse(noteName) {\n    const tokens = $202e805395000e0c$export$e13422ef2dcdcd5d(noteName);\n    if (tokens[0] === \"\" || tokens[3] !== \"\") return $202e805395000e0c$var$NoNote;\n    const letter = tokens[0];\n    const acc = tokens[1];\n    const octStr = tokens[2];\n    const step = (letter.charCodeAt(0) + 3) % 7;\n    const alt = $202e805395000e0c$export$8f7077a2780017bf(acc);\n    const oct = octStr.length ? +octStr : void 0;\n    const coord = (0, $c1fc50133d2a8115$export$741858880c96b18c)({\n        step: step,\n        alt: alt,\n        oct: oct\n    });\n    const name = letter + acc + octStr;\n    const pc = letter + acc;\n    const chroma = ($202e805395000e0c$var$SEMI[step] + alt + 120) % 12;\n    const height = oct === void 0 ? $202e805395000e0c$var$mod($202e805395000e0c$var$SEMI[step] + alt, 12) - 1188 : $202e805395000e0c$var$SEMI[step] + alt + 12 * (oct + 1);\n    const midi = height >= 0 && height <= 127 ? height : null;\n    const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n    return {\n        empty: false,\n        acc: acc,\n        alt: alt,\n        chroma: chroma,\n        coord: coord,\n        freq: freq,\n        height: height,\n        letter: letter,\n        midi: midi,\n        name: name,\n        oct: oct,\n        pc: pc,\n        step: step\n    };\n}\nfunction $202e805395000e0c$var$pitchName(props) {\n    const { step: step, alt: alt, oct: oct } = props;\n    const letter = $202e805395000e0c$export$4fed1eaee6342c12(step);\n    if (!letter) return \"\";\n    const pc = letter + $202e805395000e0c$export$fe2c2edbd7417985(alt);\n    return oct || oct === 0 ? pc + oct : pc;\n}\n\n\nfunction $498eab776f7de6b3$export$9cb09a71b7d66923(noteName, intervalName) {\n    const note = (0, $202e805395000e0c$export$a92e4c44d367d0af)(noteName);\n    const intervalCoord = Array.isArray(intervalName) ? intervalName : (0, $4e01aabfc377cdb3$export$3174cdbf0a0cbc84)(intervalName).coord;\n    if (note.empty || !intervalCoord || intervalCoord.length < 2) return \"\";\n    const noteCoord = note.coord;\n    const tr = noteCoord.length === 1 ? [\n        noteCoord[0] + intervalCoord[0]\n    ] : [\n        noteCoord[0] + intervalCoord[0],\n        noteCoord[1] + intervalCoord[1]\n    ];\n    return (0, $202e805395000e0c$export$d4bbcd58d1a5389d)(tr).name;\n}\nfunction $498eab776f7de6b3$export$96bb437d3e6675d(intervals, tonic) {\n    const len = intervals.length;\n    return (normalized)=>{\n        if (!tonic) return \"\";\n        const index = normalized < 0 ? (len - -normalized % len) % len : normalized % len;\n        const octaves = Math.floor(normalized / len);\n        const root = $498eab776f7de6b3$export$9cb09a71b7d66923(tonic, [\n            0,\n            octaves\n        ]);\n        return $498eab776f7de6b3$export$9cb09a71b7d66923(root, intervals[index]);\n    };\n}\nfunction $498eab776f7de6b3$export$9f17032d917177de(fromNote, toNote) {\n    const from = (0, $202e805395000e0c$export$a92e4c44d367d0af)(fromNote);\n    const to = (0, $202e805395000e0c$export$a92e4c44d367d0af)(toNote);\n    if (from.empty || to.empty) return \"\";\n    const fcoord = from.coord;\n    const tcoord = to.coord;\n    const fifths = tcoord[0] - fcoord[0];\n    const octs = fcoord.length === 2 && tcoord.length === 2 ? tcoord[1] - fcoord[1] : -Math.floor(fifths * 7 / 12);\n    const forceDescending = to.height === from.height && to.midi !== null && from.midi !== null && from.step > to.step;\n    return (0, $4e01aabfc377cdb3$export$41be0c142b835bde)([\n        fifths,\n        octs\n    ], forceDescending).name;\n}\n\n\n\n// index.ts\n\nvar $641169bf7b3af196$var$fillStr = (s, n)=>Array(Math.abs(n) + 1).join(s);\nvar $641169bf7b3af196$var$NoNote = {\n    empty: true,\n    name: \"\",\n    pc: \"\",\n    acc: \"\"\n};\nvar $641169bf7b3af196$var$cache = /* @__PURE__ */ new Map();\nvar $641169bf7b3af196$export$4fed1eaee6342c12 = (step)=>\"CDEFGAB\".charAt(step);\nvar $641169bf7b3af196$export$fe2c2edbd7417985 = (alt)=>alt < 0 ? $641169bf7b3af196$var$fillStr(\"b\", -alt) : $641169bf7b3af196$var$fillStr(\"#\", alt);\nvar $641169bf7b3af196$export$8f7077a2780017bf = (acc)=>acc[0] === \"b\" ? -acc.length : acc.length;\nfunction $641169bf7b3af196$export$a92e4c44d367d0af(src) {\n    const stringSrc = JSON.stringify(src);\n    const cached = $641169bf7b3af196$var$cache.get(stringSrc);\n    if (cached) return cached;\n    const value = typeof src === \"string\" ? $641169bf7b3af196$var$parse(src) : (0, $c1fc50133d2a8115$export$3a746b746d570840)(src) ? $641169bf7b3af196$export$a92e4c44d367d0af($641169bf7b3af196$var$pitchName(src)) : (0, $c1fc50133d2a8115$export$70ce4c42ed4560f3)(src) ? $641169bf7b3af196$export$a92e4c44d367d0af(src.name) : $641169bf7b3af196$var$NoNote;\n    $641169bf7b3af196$var$cache.set(stringSrc, value);\n    return value;\n}\nvar $641169bf7b3af196$var$REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction $641169bf7b3af196$export$e13422ef2dcdcd5d(str) {\n    const m = $641169bf7b3af196$var$REGEX.exec(str);\n    return m ? [\n        m[1].toUpperCase(),\n        m[2].replace(/x/g, \"##\"),\n        m[3],\n        m[4]\n    ] : [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ];\n}\nfunction $641169bf7b3af196$export$d4bbcd58d1a5389d(noteCoord) {\n    return $641169bf7b3af196$export$a92e4c44d367d0af((0, $c1fc50133d2a8115$export$6c9e2d66dea2a302)(noteCoord));\n}\nvar $641169bf7b3af196$var$mod = (n, m)=>(n % m + m) % m;\nvar $641169bf7b3af196$var$SEMI = [\n    0,\n    2,\n    4,\n    5,\n    7,\n    9,\n    11\n];\nfunction $641169bf7b3af196$var$parse(noteName) {\n    const tokens = $641169bf7b3af196$export$e13422ef2dcdcd5d(noteName);\n    if (tokens[0] === \"\" || tokens[3] !== \"\") return $641169bf7b3af196$var$NoNote;\n    const letter = tokens[0];\n    const acc = tokens[1];\n    const octStr = tokens[2];\n    const step = (letter.charCodeAt(0) + 3) % 7;\n    const alt = $641169bf7b3af196$export$8f7077a2780017bf(acc);\n    const oct = octStr.length ? +octStr : void 0;\n    const coord = (0, $c1fc50133d2a8115$export$741858880c96b18c)({\n        step: step,\n        alt: alt,\n        oct: oct\n    });\n    const name = letter + acc + octStr;\n    const pc = letter + acc;\n    const chroma = ($641169bf7b3af196$var$SEMI[step] + alt + 120) % 12;\n    const height = oct === void 0 ? $641169bf7b3af196$var$mod($641169bf7b3af196$var$SEMI[step] + alt, 12) - 1188 : $641169bf7b3af196$var$SEMI[step] + alt + 12 * (oct + 1);\n    const midi = height >= 0 && height <= 127 ? height : null;\n    const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n    return {\n        empty: false,\n        acc: acc,\n        alt: alt,\n        chroma: chroma,\n        coord: coord,\n        freq: freq,\n        height: height,\n        letter: letter,\n        midi: midi,\n        name: name,\n        oct: oct,\n        pc: pc,\n        step: step\n    };\n}\nfunction $641169bf7b3af196$var$pitchName(props) {\n    const { step: step, alt: alt, oct: oct } = props;\n    const letter = $641169bf7b3af196$export$4fed1eaee6342c12(step);\n    if (!letter) return \"\";\n    const pc = letter + $641169bf7b3af196$export$fe2c2edbd7417985(alt);\n    return oct || oct === 0 ? pc + oct : pc;\n}\n\n\nvar $6afb6a04609a1abf$export$e27d9bf39c74b076 = (s, n)=>Array(Math.abs(n) + 1).join(s);\nfunction $6afb6a04609a1abf$export$b680e6b2c82f8c2f(original, alternative, fn) {\n    return function(...args) {\n        console.warn(`${original} is deprecated. Use ${alternative}.`);\n        return fn.apply(this, args);\n    };\n}\nvar $6afb6a04609a1abf$export$745137f0b0c9a0b3 = $6afb6a04609a1abf$export$b680e6b2c82f8c2f(\"isNamed\", \"isNamedPitch\", (0, $c1fc50133d2a8115$export$70ce4c42ed4560f3));\n\n\n// index.ts\n// index.ts\nfunction $0d7cd0cdab616457$var$ascR(b, n) {\n    const a = [];\n    for(; n--; a[n] = n + b);\n    return a;\n}\nfunction $0d7cd0cdab616457$var$descR(b, n) {\n    const a = [];\n    for(; n--; a[n] = b - n);\n    return a;\n}\nfunction $0d7cd0cdab616457$export$d02631cccf789723(from, to) {\n    return from < to ? $0d7cd0cdab616457$var$ascR(from, to - from + 1) : $0d7cd0cdab616457$var$descR(from, from - to + 1);\n}\nfunction $0d7cd0cdab616457$export$bb628a54ab399bc9(times, arr) {\n    const len = arr.length;\n    const n = (times % len + len) % len;\n    return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction $0d7cd0cdab616457$export$8e16b83750b44988(arr) {\n    return arr.filter((n)=>n === 0 || n);\n}\nfunction $0d7cd0cdab616457$export$448332262467e042(arr, rnd = Math.random) {\n    let i;\n    let t;\n    let m = arr.length;\n    while(m){\n        i = Math.floor(rnd() * m--);\n        t = arr[m];\n        arr[m] = arr[i];\n        arr[i] = t;\n    }\n    return arr;\n}\nfunction $0d7cd0cdab616457$export$4567adbe5dd91621(arr) {\n    if (arr.length === 0) return [\n        []\n    ];\n    return $0d7cd0cdab616457$export$4567adbe5dd91621(arr.slice(1)).reduce((acc, perm)=>{\n        return acc.concat(arr.map((e, pos)=>{\n            const newPerm = perm.slice();\n            newPerm.splice(pos, 0, arr[0]);\n            return newPerm;\n        }));\n    }, []);\n}\nvar $0d7cd0cdab616457$export$2e2bcd8739ae039 = {\n    compact: $0d7cd0cdab616457$export$8e16b83750b44988,\n    permutations: $0d7cd0cdab616457$export$4567adbe5dd91621,\n    range: $0d7cd0cdab616457$export$d02631cccf789723,\n    rotate: $0d7cd0cdab616457$export$bb628a54ab399bc9,\n    shuffle: $0d7cd0cdab616457$export$448332262467e042\n};\n\n\n\nvar $37ea67a5744539d1$export$b31835771c1cc4b0 = {\n    empty: true,\n    name: \"\",\n    setNum: 0,\n    chroma: \"000000000000\",\n    normalized: \"000000000000\",\n    intervals: []\n};\nvar $37ea67a5744539d1$var$setNumToChroma = (num2)=>Number(num2).toString(2).padStart(12, \"0\");\nvar $37ea67a5744539d1$var$chromaToNumber = (chroma2)=>parseInt(chroma2, 2);\nvar $37ea67a5744539d1$var$REGEX = /^[01]{12}$/;\nfunction $37ea67a5744539d1$export$607555f22891e149(set) {\n    return $37ea67a5744539d1$var$REGEX.test(set);\n}\nvar $37ea67a5744539d1$var$isPcsetNum = (set)=>typeof set === \"number\" && set >= 0 && set <= 4095;\nvar $37ea67a5744539d1$var$isPcset = (set)=>set && $37ea67a5744539d1$export$607555f22891e149(set.chroma);\nvar $37ea67a5744539d1$var$cache = {\n    [$37ea67a5744539d1$export$b31835771c1cc4b0.chroma]: $37ea67a5744539d1$export$b31835771c1cc4b0\n};\nfunction $37ea67a5744539d1$export$3988ae62b71be9a3(src) {\n    const chroma2 = $37ea67a5744539d1$export$607555f22891e149(src) ? src : $37ea67a5744539d1$var$isPcsetNum(src) ? $37ea67a5744539d1$var$setNumToChroma(src) : Array.isArray(src) ? $37ea67a5744539d1$var$listToChroma(src) : $37ea67a5744539d1$var$isPcset(src) ? src.chroma : $37ea67a5744539d1$export$b31835771c1cc4b0.chroma;\n    return $37ea67a5744539d1$var$cache[chroma2] = $37ea67a5744539d1$var$cache[chroma2] || $37ea67a5744539d1$var$chromaToPcset(chroma2);\n}\nvar $37ea67a5744539d1$export$34757280087519e4 = (0, $6afb6a04609a1abf$export$b680e6b2c82f8c2f)(\"Pcset.pcset\", \"Pcset.get\", $37ea67a5744539d1$export$3988ae62b71be9a3);\nvar $37ea67a5744539d1$export$65e376726ced75b1 = (set)=>$37ea67a5744539d1$export$3988ae62b71be9a3(set).chroma;\nvar $37ea67a5744539d1$var$intervals = (set)=>$37ea67a5744539d1$export$3988ae62b71be9a3(set).intervals;\nvar $37ea67a5744539d1$var$num = (set)=>$37ea67a5744539d1$export$3988ae62b71be9a3(set).setNum;\nvar $37ea67a5744539d1$var$IVLS = [\n    \"1P\",\n    \"2m\",\n    \"2M\",\n    \"3m\",\n    \"3M\",\n    \"4P\",\n    \"5d\",\n    \"5P\",\n    \"6m\",\n    \"6M\",\n    \"7m\",\n    \"7M\"\n];\nfunction $37ea67a5744539d1$export$d2c8ed5314ca8436(chroma2) {\n    const intervals2 = [];\n    for(let i = 0; i < 12; i++)if (chroma2.charAt(i) === \"1\") intervals2.push($37ea67a5744539d1$var$IVLS[i]);\n    return intervals2;\n}\nfunction $37ea67a5744539d1$export$fff9cb9cb797a870(set) {\n    return $37ea67a5744539d1$export$3988ae62b71be9a3(set).intervals.map((ivl)=>(0, $498eab776f7de6b3$export$9cb09a71b7d66923)(\"C\", ivl));\n}\nfunction $37ea67a5744539d1$export$633e11f887c2fdc0() {\n    return (0, $0d7cd0cdab616457$export$d02631cccf789723)(2048, 4095).map($37ea67a5744539d1$var$setNumToChroma);\n}\nfunction $37ea67a5744539d1$export$4a6bdc0a840be00(set, normalize = true) {\n    const pcs = $37ea67a5744539d1$export$3988ae62b71be9a3(set);\n    const binary = pcs.chroma.split(\"\");\n    return (0, $0d7cd0cdab616457$export$8e16b83750b44988)(binary.map((_, i)=>{\n        const r = (0, $0d7cd0cdab616457$export$bb628a54ab399bc9)(i, binary);\n        return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    }));\n}\nfunction $37ea67a5744539d1$export$248d38f6296296c5(s1, s2) {\n    return $37ea67a5744539d1$export$3988ae62b71be9a3(s1).setNum === $37ea67a5744539d1$export$3988ae62b71be9a3(s2).setNum;\n}\nfunction $37ea67a5744539d1$export$2b09cdc61b8a3240(set) {\n    const s = $37ea67a5744539d1$export$3988ae62b71be9a3(set).setNum;\n    return (notes2)=>{\n        const o = $37ea67a5744539d1$export$3988ae62b71be9a3(notes2).setNum;\n        return s && s !== o && (o & s) === o;\n    };\n}\nfunction $37ea67a5744539d1$export$22c04563e192ea02(set) {\n    const s = $37ea67a5744539d1$export$3988ae62b71be9a3(set).setNum;\n    return (notes2)=>{\n        const o = $37ea67a5744539d1$export$3988ae62b71be9a3(notes2).setNum;\n        return s && s !== o && (o | s) === o;\n    };\n}\nfunction $37ea67a5744539d1$export$acd3ad1acd1348bc(set) {\n    const s = $37ea67a5744539d1$export$3988ae62b71be9a3(set);\n    return (noteName)=>{\n        const n = (0, $641169bf7b3af196$export$a92e4c44d367d0af)(noteName);\n        return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n    };\n}\nvar $37ea67a5744539d1$export$ee2e0f811dca1807 = $37ea67a5744539d1$export$acd3ad1acd1348bc;\nfunction $37ea67a5744539d1$export$3dea766d36a8935f(set) {\n    const isIncluded = $37ea67a5744539d1$export$acd3ad1acd1348bc(set);\n    return (notes2)=>{\n        return notes2.filter(isIncluded);\n    };\n}\nvar $37ea67a5744539d1$export$2e2bcd8739ae039 = {\n    get: $37ea67a5744539d1$export$3988ae62b71be9a3,\n    chroma: $37ea67a5744539d1$export$65e376726ced75b1,\n    num: $37ea67a5744539d1$var$num,\n    intervals: $37ea67a5744539d1$var$intervals,\n    chromas: $37ea67a5744539d1$export$633e11f887c2fdc0,\n    isSupersetOf: $37ea67a5744539d1$export$22c04563e192ea02,\n    isSubsetOf: $37ea67a5744539d1$export$2b09cdc61b8a3240,\n    isNoteIncludedIn: $37ea67a5744539d1$export$acd3ad1acd1348bc,\n    isEqual: $37ea67a5744539d1$export$248d38f6296296c5,\n    filter: $37ea67a5744539d1$export$3dea766d36a8935f,\n    modes: $37ea67a5744539d1$export$4a6bdc0a840be00,\n    notes: $37ea67a5744539d1$export$fff9cb9cb797a870,\n    pcset: // deprecated\n    $37ea67a5744539d1$export$34757280087519e4\n};\nfunction $37ea67a5744539d1$var$chromaRotations(chroma2) {\n    const binary = chroma2.split(\"\");\n    return binary.map((_, i)=>(0, $0d7cd0cdab616457$export$bb628a54ab399bc9)(i, binary).join(\"\"));\n}\nfunction $37ea67a5744539d1$var$chromaToPcset(chroma2) {\n    const setNum = $37ea67a5744539d1$var$chromaToNumber(chroma2);\n    const normalizedNum = $37ea67a5744539d1$var$chromaRotations(chroma2).map($37ea67a5744539d1$var$chromaToNumber).filter((n)=>n >= 2048).sort()[0];\n    const normalized = $37ea67a5744539d1$var$setNumToChroma(normalizedNum);\n    const intervals2 = $37ea67a5744539d1$export$d2c8ed5314ca8436(chroma2);\n    return {\n        empty: false,\n        name: \"\",\n        setNum: setNum,\n        chroma: chroma2,\n        normalized: normalized,\n        intervals: intervals2\n    };\n}\nfunction $37ea67a5744539d1$var$listToChroma(set) {\n    if (set.length === 0) return $37ea67a5744539d1$export$b31835771c1cc4b0.chroma;\n    let pitch;\n    const binary = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ];\n    for(let i = 0; i < set.length; i++){\n        pitch = (0, $641169bf7b3af196$export$a92e4c44d367d0af)(set[i]);\n        if (pitch.empty) pitch = (0, $4e01aabfc377cdb3$export$3174cdbf0a0cbc84)(set[i]);\n        if (!pitch.empty) binary[pitch.chroma] = 1;\n    }\n    return binary.join(\"\");\n}\n\n\n// data.ts\nvar $5facd99e7fcea85e$var$CHORDS = [\n    // ==Major==\n    [\n        \"1P 3M 5P\",\n        \"major\",\n        \"M ^  maj\"\n    ],\n    [\n        \"1P 3M 5P 7M\",\n        \"major seventh\",\n        \"maj7 \\u0394 ma7 M7 Maj7 ^7\"\n    ],\n    [\n        \"1P 3M 5P 7M 9M\",\n        \"major ninth\",\n        \"maj9 \\u03949 ^9\"\n    ],\n    [\n        \"1P 3M 5P 7M 9M 13M\",\n        \"major thirteenth\",\n        \"maj13 Maj13 ^13\"\n    ],\n    [\n        \"1P 3M 5P 6M\",\n        \"sixth\",\n        \"6 add6 add13 M6\"\n    ],\n    [\n        \"1P 3M 5P 6M 9M\",\n        \"sixth added ninth\",\n        \"6add9 6/9 69 M69\"\n    ],\n    [\n        \"1P 3M 6m 7M\",\n        \"major seventh flat sixth\",\n        \"M7b6 ^7b6\"\n    ],\n    [\n        \"1P 3M 5P 7M 11A\",\n        \"major seventh sharp eleventh\",\n        \"maj#4 \\u0394#4 \\u0394#11 M7#11 ^7#11 maj7#11\"\n    ],\n    // ==Minor==\n    // '''Normal'''\n    [\n        \"1P 3m 5P\",\n        \"minor\",\n        \"m min -\"\n    ],\n    [\n        \"1P 3m 5P 7m\",\n        \"minor seventh\",\n        \"m7 min7 mi7 -7\"\n    ],\n    [\n        \"1P 3m 5P 7M\",\n        \"minor/major seventh\",\n        \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\\u03947 m\\u0394 -^7 -maj7\"\n    ],\n    [\n        \"1P 3m 5P 6M\",\n        \"minor sixth\",\n        \"m6 -6\"\n    ],\n    [\n        \"1P 3m 5P 7m 9M\",\n        \"minor ninth\",\n        \"m9 -9\"\n    ],\n    [\n        \"1P 3m 5P 7M 9M\",\n        \"minor/major ninth\",\n        \"mM9 mMaj9 -^9\"\n    ],\n    [\n        \"1P 3m 5P 7m 9M 11P\",\n        \"minor eleventh\",\n        \"m11 -11\"\n    ],\n    [\n        \"1P 3m 5P 7m 9M 13M\",\n        \"minor thirteenth\",\n        \"m13 -13\"\n    ],\n    // '''Diminished'''\n    [\n        \"1P 3m 5d\",\n        \"diminished\",\n        \"dim \\xb0 o\"\n    ],\n    [\n        \"1P 3m 5d 7d\",\n        \"diminished seventh\",\n        \"dim7 \\xb07 o7\"\n    ],\n    [\n        \"1P 3m 5d 7m\",\n        \"half-diminished\",\n        \"m7b5 \\xf8 -7b5 h7 h\"\n    ],\n    // ==Dominant/Seventh==\n    // '''Normal'''\n    [\n        \"1P 3M 5P 7m\",\n        \"dominant seventh\",\n        \"7 dom\"\n    ],\n    [\n        \"1P 3M 5P 7m 9M\",\n        \"dominant ninth\",\n        \"9\"\n    ],\n    [\n        \"1P 3M 5P 7m 9M 13M\",\n        \"dominant thirteenth\",\n        \"13\"\n    ],\n    [\n        \"1P 3M 5P 7m 11A\",\n        \"lydian dominant seventh\",\n        \"7#11 7#4\"\n    ],\n    // '''Altered'''\n    [\n        \"1P 3M 5P 7m 9m\",\n        \"dominant flat ninth\",\n        \"7b9\"\n    ],\n    [\n        \"1P 3M 5P 7m 9A\",\n        \"dominant sharp ninth\",\n        \"7#9\"\n    ],\n    [\n        \"1P 3M 7m 9m\",\n        \"altered\",\n        \"alt7\"\n    ],\n    // '''Suspended'''\n    [\n        \"1P 4P 5P\",\n        \"suspended fourth\",\n        \"sus4 sus\"\n    ],\n    [\n        \"1P 2M 5P\",\n        \"suspended second\",\n        \"sus2\"\n    ],\n    [\n        \"1P 4P 5P 7m\",\n        \"suspended fourth seventh\",\n        \"7sus4 7sus\"\n    ],\n    [\n        \"1P 5P 7m 9M 11P\",\n        \"eleventh\",\n        \"11\"\n    ],\n    [\n        \"1P 4P 5P 7m 9m\",\n        \"suspended fourth flat ninth\",\n        \"b9sus phryg 7b9sus 7b9sus4\"\n    ],\n    // ==Other==\n    [\n        \"1P 5P\",\n        \"fifth\",\n        \"5\"\n    ],\n    [\n        \"1P 3M 5A\",\n        \"augmented\",\n        \"aug + +5 ^#5\"\n    ],\n    [\n        \"1P 3m 5A\",\n        \"minor augmented\",\n        \"m#5 -#5 m+\"\n    ],\n    [\n        \"1P 3M 5A 7M\",\n        \"augmented seventh\",\n        \"maj7#5 maj7+5 +maj7 ^7#5\"\n    ],\n    [\n        \"1P 3M 5P 7M 9M 11A\",\n        \"major sharp eleventh (lydian)\",\n        \"maj9#11 \\u03949#11 ^9#11\"\n    ],\n    // ==Legacy==\n    [\n        \"1P 2M 4P 5P\",\n        \"\",\n        \"sus24 sus4add9\"\n    ],\n    [\n        \"1P 3M 5A 7M 9M\",\n        \"\",\n        \"maj9#5 Maj9#5\"\n    ],\n    [\n        \"1P 3M 5A 7m\",\n        \"\",\n        \"7#5 +7 7+ 7aug aug7\"\n    ],\n    [\n        \"1P 3M 5A 7m 9A\",\n        \"\",\n        \"7#5#9 7#9#5 7alt\"\n    ],\n    [\n        \"1P 3M 5A 7m 9M\",\n        \"\",\n        \"9#5 9+\"\n    ],\n    [\n        \"1P 3M 5A 7m 9M 11A\",\n        \"\",\n        \"9#5#11\"\n    ],\n    [\n        \"1P 3M 5A 7m 9m\",\n        \"\",\n        \"7#5b9 7b9#5\"\n    ],\n    [\n        \"1P 3M 5A 7m 9m 11A\",\n        \"\",\n        \"7#5b9#11\"\n    ],\n    [\n        \"1P 3M 5A 9A\",\n        \"\",\n        \"+add#9\"\n    ],\n    [\n        \"1P 3M 5A 9M\",\n        \"\",\n        \"M#5add9 +add9\"\n    ],\n    [\n        \"1P 3M 5P 6M 11A\",\n        \"\",\n        \"M6#11 M6b5 6#11 6b5\"\n    ],\n    [\n        \"1P 3M 5P 6M 7M 9M\",\n        \"\",\n        \"M7add13\"\n    ],\n    [\n        \"1P 3M 5P 6M 9M 11A\",\n        \"\",\n        \"69#11\"\n    ],\n    [\n        \"1P 3m 5P 6M 9M\",\n        \"\",\n        \"m69 -69\"\n    ],\n    [\n        \"1P 3M 5P 6m 7m\",\n        \"\",\n        \"7b6\"\n    ],\n    [\n        \"1P 3M 5P 7M 9A 11A\",\n        \"\",\n        \"maj7#9#11\"\n    ],\n    [\n        \"1P 3M 5P 7M 9M 11A 13M\",\n        \"\",\n        \"M13#11 maj13#11 M13+4 M13#4\"\n    ],\n    [\n        \"1P 3M 5P 7M 9m\",\n        \"\",\n        \"M7b9\"\n    ],\n    [\n        \"1P 3M 5P 7m 11A 13m\",\n        \"\",\n        \"7#11b13 7b5b13\"\n    ],\n    [\n        \"1P 3M 5P 7m 13M\",\n        \"\",\n        \"7add6 67 7add13\"\n    ],\n    [\n        \"1P 3M 5P 7m 9A 11A\",\n        \"\",\n        \"7#9#11 7b5#9 7#9b5\"\n    ],\n    [\n        \"1P 3M 5P 7m 9A 11A 13M\",\n        \"\",\n        \"13#9#11\"\n    ],\n    [\n        \"1P 3M 5P 7m 9A 11A 13m\",\n        \"\",\n        \"7#9#11b13\"\n    ],\n    [\n        \"1P 3M 5P 7m 9A 13M\",\n        \"\",\n        \"13#9\"\n    ],\n    [\n        \"1P 3M 5P 7m 9A 13m\",\n        \"\",\n        \"7#9b13\"\n    ],\n    [\n        \"1P 3M 5P 7m 9M 11A\",\n        \"\",\n        \"9#11 9+4 9#4\"\n    ],\n    [\n        \"1P 3M 5P 7m 9M 11A 13M\",\n        \"\",\n        \"13#11 13+4 13#4\"\n    ],\n    [\n        \"1P 3M 5P 7m 9M 11A 13m\",\n        \"\",\n        \"9#11b13 9b5b13\"\n    ],\n    [\n        \"1P 3M 5P 7m 9m 11A\",\n        \"\",\n        \"7b9#11 7b5b9 7b9b5\"\n    ],\n    [\n        \"1P 3M 5P 7m 9m 11A 13M\",\n        \"\",\n        \"13b9#11\"\n    ],\n    [\n        \"1P 3M 5P 7m 9m 11A 13m\",\n        \"\",\n        \"7b9b13#11 7b9#11b13 7b5b9b13\"\n    ],\n    [\n        \"1P 3M 5P 7m 9m 13M\",\n        \"\",\n        \"13b9\"\n    ],\n    [\n        \"1P 3M 5P 7m 9m 13m\",\n        \"\",\n        \"7b9b13\"\n    ],\n    [\n        \"1P 3M 5P 7m 9m 9A\",\n        \"\",\n        \"7b9#9\"\n    ],\n    [\n        \"1P 3M 5P 9M\",\n        \"\",\n        \"Madd9 2 add9 add2\"\n    ],\n    [\n        \"1P 3M 5P 9m\",\n        \"\",\n        \"Maddb9\"\n    ],\n    [\n        \"1P 3M 5d\",\n        \"\",\n        \"Mb5\"\n    ],\n    [\n        \"1P 3M 5d 6M 7m 9M\",\n        \"\",\n        \"13b5\"\n    ],\n    [\n        \"1P 3M 5d 7M\",\n        \"\",\n        \"M7b5\"\n    ],\n    [\n        \"1P 3M 5d 7M 9M\",\n        \"\",\n        \"M9b5\"\n    ],\n    [\n        \"1P 3M 5d 7m\",\n        \"\",\n        \"7b5\"\n    ],\n    [\n        \"1P 3M 5d 7m 9M\",\n        \"\",\n        \"9b5\"\n    ],\n    [\n        \"1P 3M 7m\",\n        \"\",\n        \"7no5\"\n    ],\n    [\n        \"1P 3M 7m 13m\",\n        \"\",\n        \"7b13\"\n    ],\n    [\n        \"1P 3M 7m 9M\",\n        \"\",\n        \"9no5\"\n    ],\n    [\n        \"1P 3M 7m 9M 13M\",\n        \"\",\n        \"13no5\"\n    ],\n    [\n        \"1P 3M 7m 9M 13m\",\n        \"\",\n        \"9b13\"\n    ],\n    [\n        \"1P 3m 4P 5P\",\n        \"\",\n        \"madd4\"\n    ],\n    [\n        \"1P 3m 5P 6m 7M\",\n        \"\",\n        \"mMaj7b6\"\n    ],\n    [\n        \"1P 3m 5P 6m 7M 9M\",\n        \"\",\n        \"mMaj9b6\"\n    ],\n    [\n        \"1P 3m 5P 7m 11P\",\n        \"\",\n        \"m7add11 m7add4\"\n    ],\n    [\n        \"1P 3m 5P 9M\",\n        \"\",\n        \"madd9\"\n    ],\n    [\n        \"1P 3m 5d 6M 7M\",\n        \"\",\n        \"o7M7\"\n    ],\n    [\n        \"1P 3m 5d 7M\",\n        \"\",\n        \"oM7\"\n    ],\n    [\n        \"1P 3m 6m 7M\",\n        \"\",\n        \"mb6M7\"\n    ],\n    [\n        \"1P 3m 6m 7m\",\n        \"\",\n        \"m7#5\"\n    ],\n    [\n        \"1P 3m 6m 7m 9M\",\n        \"\",\n        \"m9#5\"\n    ],\n    [\n        \"1P 3m 5A 7m 9M 11P\",\n        \"\",\n        \"m11A\"\n    ],\n    [\n        \"1P 3m 6m 9m\",\n        \"\",\n        \"mb6b9\"\n    ],\n    [\n        \"1P 2M 3m 5d 7m\",\n        \"\",\n        \"m9b5\"\n    ],\n    [\n        \"1P 4P 5A 7M\",\n        \"\",\n        \"M7#5sus4\"\n    ],\n    [\n        \"1P 4P 5A 7M 9M\",\n        \"\",\n        \"M9#5sus4\"\n    ],\n    [\n        \"1P 4P 5A 7m\",\n        \"\",\n        \"7#5sus4\"\n    ],\n    [\n        \"1P 4P 5P 7M\",\n        \"\",\n        \"M7sus4\"\n    ],\n    [\n        \"1P 4P 5P 7M 9M\",\n        \"\",\n        \"M9sus4\"\n    ],\n    [\n        \"1P 4P 5P 7m 9M\",\n        \"\",\n        \"9sus4 9sus\"\n    ],\n    [\n        \"1P 4P 5P 7m 9M 13M\",\n        \"\",\n        \"13sus4 13sus\"\n    ],\n    [\n        \"1P 4P 5P 7m 9m 13m\",\n        \"\",\n        \"7sus4b9b13 7b9b13sus4\"\n    ],\n    [\n        \"1P 4P 7m 10m\",\n        \"\",\n        \"4 quartal\"\n    ],\n    [\n        \"1P 5P 7m 9m 11P\",\n        \"\",\n        \"11b9\"\n    ]\n];\nvar $5facd99e7fcea85e$var$data_default = $5facd99e7fcea85e$var$CHORDS;\n// index.ts\nvar $5facd99e7fcea85e$var$NoChordType = {\n    ...(0, $37ea67a5744539d1$export$b31835771c1cc4b0),\n    name: \"\",\n    quality: \"Unknown\",\n    intervals: [],\n    aliases: []\n};\nvar $5facd99e7fcea85e$var$dictionary = [];\nvar $5facd99e7fcea85e$var$index = {};\nfunction $5facd99e7fcea85e$export$3988ae62b71be9a3(type) {\n    return $5facd99e7fcea85e$var$index[type] || $5facd99e7fcea85e$var$NoChordType;\n}\nvar $5facd99e7fcea85e$export$17fc6add839315a9 = (0, $6afb6a04609a1abf$export$b680e6b2c82f8c2f)(\"ChordType.chordType\", \"ChordType.get\", $5facd99e7fcea85e$export$3988ae62b71be9a3);\nfunction $5facd99e7fcea85e$export$e4b2ac9215619f8d() {\n    return $5facd99e7fcea85e$var$dictionary.map((chord)=>chord.name).filter((x)=>x);\n}\nfunction $5facd99e7fcea85e$export$47616e9f7f5fe113() {\n    return $5facd99e7fcea85e$var$dictionary.map((chord)=>chord.aliases[0]).filter((x)=>x);\n}\nfunction $5facd99e7fcea85e$export$ed97f33186d4b816() {\n    return Object.keys($5facd99e7fcea85e$var$index);\n}\nfunction $5facd99e7fcea85e$export$84bf76cd7afc7469() {\n    return $5facd99e7fcea85e$var$dictionary.slice();\n}\nvar $5facd99e7fcea85e$export$3e9f948b41964866 = (0, $6afb6a04609a1abf$export$b680e6b2c82f8c2f)(\"ChordType.entries\", \"ChordType.all\", $5facd99e7fcea85e$export$84bf76cd7afc7469);\nfunction $5facd99e7fcea85e$export$1cfc7aad5cb1833b() {\n    $5facd99e7fcea85e$var$dictionary = [];\n    $5facd99e7fcea85e$var$index = {};\n}\nfunction $5facd99e7fcea85e$export$e16d8520af44a096(intervals, aliases, fullName) {\n    const quality = $5facd99e7fcea85e$var$getQuality(intervals);\n    const chord = {\n        ...(0, $37ea67a5744539d1$export$3988ae62b71be9a3)(intervals),\n        name: fullName || \"\",\n        quality: quality,\n        intervals: intervals,\n        aliases: aliases\n    };\n    $5facd99e7fcea85e$var$dictionary.push(chord);\n    if (chord.name) $5facd99e7fcea85e$var$index[chord.name] = chord;\n    $5facd99e7fcea85e$var$index[chord.setNum] = chord;\n    $5facd99e7fcea85e$var$index[chord.chroma] = chord;\n    chord.aliases.forEach((alias)=>$5facd99e7fcea85e$export$44968e33aef80f19(chord, alias));\n}\nfunction $5facd99e7fcea85e$export$44968e33aef80f19(chord, alias) {\n    $5facd99e7fcea85e$var$index[alias] = chord;\n}\nfunction $5facd99e7fcea85e$var$getQuality(intervals) {\n    const has = (interval)=>intervals.indexOf(interval) !== -1;\n    return has(\"5A\") ? \"Augmented\" : has(\"3M\") ? \"Major\" : has(\"5d\") ? \"Diminished\" : has(\"3m\") ? \"Minor\" : \"Unknown\";\n}\n$5facd99e7fcea85e$var$data_default.forEach(([ivls, fullName, names2])=>$5facd99e7fcea85e$export$e16d8520af44a096(ivls.split(\" \"), names2.split(\" \"), fullName));\n$5facd99e7fcea85e$var$dictionary.sort((a, b)=>a.setNum - b.setNum);\nvar $5facd99e7fcea85e$export$2e2bcd8739ae039 = {\n    names: $5facd99e7fcea85e$export$e4b2ac9215619f8d,\n    symbols: $5facd99e7fcea85e$export$47616e9f7f5fe113,\n    get: $5facd99e7fcea85e$export$3988ae62b71be9a3,\n    all: $5facd99e7fcea85e$export$84bf76cd7afc7469,\n    add: $5facd99e7fcea85e$export$e16d8520af44a096,\n    removeAll: $5facd99e7fcea85e$export$1cfc7aad5cb1833b,\n    keys: $5facd99e7fcea85e$export$ed97f33186d4b816,\n    entries: // deprecated\n    $5facd99e7fcea85e$export$3e9f948b41964866,\n    chordType: $5facd99e7fcea85e$export$17fc6add839315a9\n};\n\n\n\n\nvar $c8ac599462e7da5f$var$namedSet = (notes)=>{\n    const pcToName = notes.reduce((record, n)=>{\n        const chroma = (0, $641169bf7b3af196$export$a92e4c44d367d0af)(n).chroma;\n        if (chroma !== void 0) record[chroma] = record[chroma] || (0, $641169bf7b3af196$export$a92e4c44d367d0af)(n).name;\n        return record;\n    }, {});\n    return (chroma)=>pcToName[chroma];\n};\nfunction $c8ac599462e7da5f$export$17b446b869dad473(source, options = {}) {\n    const notes = source.map((n)=>(0, $641169bf7b3af196$export$a92e4c44d367d0af)(n).pc).filter((x)=>x);\n    if ((0, $641169bf7b3af196$export$a92e4c44d367d0af).length === 0) return [];\n    const found = $c8ac599462e7da5f$var$findMatches(notes, 1, options);\n    return found.filter((chord)=>chord.weight).sort((a, b)=>b.weight - a.weight).map((chord)=>chord.name);\n}\nvar $c8ac599462e7da5f$var$BITMASK = {\n    // 3m 000100000000\n    // 3M 000010000000\n    anyThirds: 384,\n    // 5P 000000010000\n    perfectFifth: 16,\n    // 5d 000000100000\n    // 5A 000000001000\n    nonPerfectFifths: 40,\n    anySeventh: 3\n};\nvar $c8ac599462e7da5f$var$testChromaNumber = (bitmask)=>(chromaNumber)=>Boolean(chromaNumber & bitmask);\nvar $c8ac599462e7da5f$var$hasAnyThird = $c8ac599462e7da5f$var$testChromaNumber($c8ac599462e7da5f$var$BITMASK.anyThirds);\nvar $c8ac599462e7da5f$var$hasPerfectFifth = $c8ac599462e7da5f$var$testChromaNumber($c8ac599462e7da5f$var$BITMASK.perfectFifth);\nvar $c8ac599462e7da5f$var$hasAnySeventh = $c8ac599462e7da5f$var$testChromaNumber($c8ac599462e7da5f$var$BITMASK.anySeventh);\nvar $c8ac599462e7da5f$var$hasNonPerfectFifth = $c8ac599462e7da5f$var$testChromaNumber($c8ac599462e7da5f$var$BITMASK.nonPerfectFifths);\nfunction $c8ac599462e7da5f$var$hasAnyThirdAndPerfectFifthAndAnySeventh(chordType) {\n    const chromaNumber = parseInt(chordType.chroma, 2);\n    return $c8ac599462e7da5f$var$hasAnyThird(chromaNumber) && $c8ac599462e7da5f$var$hasPerfectFifth(chromaNumber) && $c8ac599462e7da5f$var$hasAnySeventh(chromaNumber);\n}\nfunction $c8ac599462e7da5f$var$withPerfectFifth(chroma) {\n    const chromaNumber = parseInt(chroma, 2);\n    return $c8ac599462e7da5f$var$hasNonPerfectFifth(chromaNumber) ? chroma : (chromaNumber | 16).toString(2);\n}\nfunction $c8ac599462e7da5f$var$findMatches(notes, weight, options) {\n    const tonic = notes[0];\n    const tonicChroma = (0, $641169bf7b3af196$export$a92e4c44d367d0af)(tonic).chroma;\n    const noteName = $c8ac599462e7da5f$var$namedSet(notes);\n    const allModes = (0, $37ea67a5744539d1$export$4a6bdc0a840be00)(notes, false);\n    const found = [];\n    allModes.forEach((mode, index)=>{\n        const modeWithPerfectFifth = options.assumePerfectFifth && $c8ac599462e7da5f$var$withPerfectFifth(mode);\n        const chordTypes = (0, $5facd99e7fcea85e$export$84bf76cd7afc7469)().filter((chordType)=>{\n            if (options.assumePerfectFifth && $c8ac599462e7da5f$var$hasAnyThirdAndPerfectFifthAndAnySeventh(chordType)) return chordType.chroma === modeWithPerfectFifth;\n            return chordType.chroma === mode;\n        });\n        chordTypes.forEach((chordType)=>{\n            const chordName = chordType.aliases[0];\n            const baseNote = noteName(index);\n            const isInversion = index !== tonicChroma;\n            if (isInversion) found.push({\n                weight: 0.5 * weight,\n                name: `${baseNote}${chordName}/${tonic}`\n            });\n            else found.push({\n                weight: 1 * weight,\n                name: `${baseNote}${chordName}`\n            });\n        });\n    });\n    return found;\n}\nvar $c8ac599462e7da5f$export$2e2bcd8739ae039 = {\n    detect: $c8ac599462e7da5f$export$17b446b869dad473\n};\n\n\n\n\n\n// index.ts\n\nvar $79b02d31442dcba5$var$fillStr = (s, n)=>Array(Math.abs(n) + 1).join(s);\nvar $79b02d31442dcba5$var$NoNote = {\n    empty: true,\n    name: \"\",\n    pc: \"\",\n    acc: \"\"\n};\nvar $79b02d31442dcba5$var$cache = /* @__PURE__ */ new Map();\nvar $79b02d31442dcba5$export$4fed1eaee6342c12 = (step)=>\"CDEFGAB\".charAt(step);\nvar $79b02d31442dcba5$export$fe2c2edbd7417985 = (alt)=>alt < 0 ? $79b02d31442dcba5$var$fillStr(\"b\", -alt) : $79b02d31442dcba5$var$fillStr(\"#\", alt);\nvar $79b02d31442dcba5$export$8f7077a2780017bf = (acc)=>acc[0] === \"b\" ? -acc.length : acc.length;\nfunction $79b02d31442dcba5$export$a92e4c44d367d0af(src) {\n    const stringSrc = JSON.stringify(src);\n    const cached = $79b02d31442dcba5$var$cache.get(stringSrc);\n    if (cached) return cached;\n    const value = typeof src === \"string\" ? $79b02d31442dcba5$var$parse(src) : (0, $c1fc50133d2a8115$export$3a746b746d570840)(src) ? $79b02d31442dcba5$export$a92e4c44d367d0af($79b02d31442dcba5$var$pitchName(src)) : (0, $c1fc50133d2a8115$export$70ce4c42ed4560f3)(src) ? $79b02d31442dcba5$export$a92e4c44d367d0af(src.name) : $79b02d31442dcba5$var$NoNote;\n    $79b02d31442dcba5$var$cache.set(stringSrc, value);\n    return value;\n}\nvar $79b02d31442dcba5$var$REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction $79b02d31442dcba5$export$e13422ef2dcdcd5d(str) {\n    const m = $79b02d31442dcba5$var$REGEX.exec(str);\n    return m ? [\n        m[1].toUpperCase(),\n        m[2].replace(/x/g, \"##\"),\n        m[3],\n        m[4]\n    ] : [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ];\n}\nfunction $79b02d31442dcba5$export$d4bbcd58d1a5389d(noteCoord) {\n    return $79b02d31442dcba5$export$a92e4c44d367d0af((0, $c1fc50133d2a8115$export$6c9e2d66dea2a302)(noteCoord));\n}\nvar $79b02d31442dcba5$var$mod = (n, m)=>(n % m + m) % m;\nvar $79b02d31442dcba5$var$SEMI = [\n    0,\n    2,\n    4,\n    5,\n    7,\n    9,\n    11\n];\nfunction $79b02d31442dcba5$var$parse(noteName) {\n    const tokens = $79b02d31442dcba5$export$e13422ef2dcdcd5d(noteName);\n    if (tokens[0] === \"\" || tokens[3] !== \"\") return $79b02d31442dcba5$var$NoNote;\n    const letter = tokens[0];\n    const acc = tokens[1];\n    const octStr = tokens[2];\n    const step = (letter.charCodeAt(0) + 3) % 7;\n    const alt = $79b02d31442dcba5$export$8f7077a2780017bf(acc);\n    const oct = octStr.length ? +octStr : void 0;\n    const coord = (0, $c1fc50133d2a8115$export$741858880c96b18c)({\n        step: step,\n        alt: alt,\n        oct: oct\n    });\n    const name = letter + acc + octStr;\n    const pc = letter + acc;\n    const chroma = ($79b02d31442dcba5$var$SEMI[step] + alt + 120) % 12;\n    const height = oct === void 0 ? $79b02d31442dcba5$var$mod($79b02d31442dcba5$var$SEMI[step] + alt, 12) - 1188 : $79b02d31442dcba5$var$SEMI[step] + alt + 12 * (oct + 1);\n    const midi = height >= 0 && height <= 127 ? height : null;\n    const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n    return {\n        empty: false,\n        acc: acc,\n        alt: alt,\n        chroma: chroma,\n        coord: coord,\n        freq: freq,\n        height: height,\n        letter: letter,\n        midi: midi,\n        name: name,\n        oct: oct,\n        pc: pc,\n        step: step\n    };\n}\nfunction $79b02d31442dcba5$var$pitchName(props) {\n    const { step: step, alt: alt, oct: oct } = props;\n    const letter = $79b02d31442dcba5$export$4fed1eaee6342c12(step);\n    if (!letter) return \"\";\n    const pc = letter + $79b02d31442dcba5$export$fe2c2edbd7417985(alt);\n    return oct || oct === 0 ? pc + oct : pc;\n}\n\n\n// index.ts\n\n\n// data.ts\nvar $98c1e925844fb606$var$SCALES = [\n    // Basic scales\n    [\n        \"1P 2M 3M 5P 6M\",\n        \"major pentatonic\",\n        \"pentatonic\"\n    ],\n    [\n        \"1P 2M 3M 4P 5P 6M 7M\",\n        \"major\",\n        \"ionian\"\n    ],\n    [\n        \"1P 2M 3m 4P 5P 6m 7m\",\n        \"minor\",\n        \"aeolian\"\n    ],\n    // Jazz common scales\n    [\n        \"1P 2M 3m 3M 5P 6M\",\n        \"major blues\"\n    ],\n    [\n        \"1P 3m 4P 5d 5P 7m\",\n        \"minor blues\",\n        \"blues\"\n    ],\n    [\n        \"1P 2M 3m 4P 5P 6M 7M\",\n        \"melodic minor\"\n    ],\n    [\n        \"1P 2M 3m 4P 5P 6m 7M\",\n        \"harmonic minor\"\n    ],\n    [\n        \"1P 2M 3M 4P 5P 6M 7m 7M\",\n        \"bebop\"\n    ],\n    [\n        \"1P 2M 3m 4P 5d 6m 6M 7M\",\n        \"diminished\",\n        \"whole-half diminished\"\n    ],\n    // Modes\n    [\n        \"1P 2M 3m 4P 5P 6M 7m\",\n        \"dorian\"\n    ],\n    [\n        \"1P 2M 3M 4A 5P 6M 7M\",\n        \"lydian\"\n    ],\n    [\n        \"1P 2M 3M 4P 5P 6M 7m\",\n        \"mixolydian\",\n        \"dominant\"\n    ],\n    [\n        \"1P 2m 3m 4P 5P 6m 7m\",\n        \"phrygian\"\n    ],\n    [\n        \"1P 2m 3m 4P 5d 6m 7m\",\n        \"locrian\"\n    ],\n    // 5-note scales\n    [\n        \"1P 3M 4P 5P 7M\",\n        \"ionian pentatonic\"\n    ],\n    [\n        \"1P 3M 4P 5P 7m\",\n        \"mixolydian pentatonic\",\n        \"indian\"\n    ],\n    [\n        \"1P 2M 4P 5P 6M\",\n        \"ritusen\"\n    ],\n    [\n        \"1P 2M 4P 5P 7m\",\n        \"egyptian\"\n    ],\n    [\n        \"1P 3M 4P 5d 7m\",\n        \"neopolitan major pentatonic\"\n    ],\n    [\n        \"1P 3m 4P 5P 6m\",\n        \"vietnamese 1\"\n    ],\n    [\n        \"1P 2m 3m 5P 6m\",\n        \"pelog\"\n    ],\n    [\n        \"1P 2m 4P 5P 6m\",\n        \"kumoijoshi\"\n    ],\n    [\n        \"1P 2M 3m 5P 6m\",\n        \"hirajoshi\"\n    ],\n    [\n        \"1P 2m 4P 5d 7m\",\n        \"iwato\"\n    ],\n    [\n        \"1P 2m 4P 5P 7m\",\n        \"in-sen\"\n    ],\n    [\n        \"1P 3M 4A 5P 7M\",\n        \"lydian pentatonic\",\n        \"chinese\"\n    ],\n    [\n        \"1P 3m 4P 6m 7m\",\n        \"malkos raga\"\n    ],\n    [\n        \"1P 3m 4P 5d 7m\",\n        \"locrian pentatonic\",\n        \"minor seven flat five pentatonic\"\n    ],\n    [\n        \"1P 3m 4P 5P 7m\",\n        \"minor pentatonic\",\n        \"vietnamese 2\"\n    ],\n    [\n        \"1P 3m 4P 5P 6M\",\n        \"minor six pentatonic\"\n    ],\n    [\n        \"1P 2M 3m 5P 6M\",\n        \"flat three pentatonic\",\n        \"kumoi\"\n    ],\n    [\n        \"1P 2M 3M 5P 6m\",\n        \"flat six pentatonic\"\n    ],\n    [\n        \"1P 2m 3M 5P 6M\",\n        \"scriabin\"\n    ],\n    [\n        \"1P 3M 5d 6m 7m\",\n        \"whole tone pentatonic\"\n    ],\n    [\n        \"1P 3M 4A 5A 7M\",\n        \"lydian #5P pentatonic\"\n    ],\n    [\n        \"1P 3M 4A 5P 7m\",\n        \"lydian dominant pentatonic\"\n    ],\n    [\n        \"1P 3m 4P 5P 7M\",\n        \"minor #7M pentatonic\"\n    ],\n    [\n        \"1P 3m 4d 5d 7m\",\n        \"super locrian pentatonic\"\n    ],\n    // 6-note scales\n    [\n        \"1P 2M 3m 4P 5P 7M\",\n        \"minor hexatonic\"\n    ],\n    [\n        \"1P 2A 3M 5P 5A 7M\",\n        \"augmented\"\n    ],\n    [\n        \"1P 2M 4P 5P 6M 7m\",\n        \"piongio\"\n    ],\n    [\n        \"1P 2m 3M 4A 6M 7m\",\n        \"prometheus neopolitan\"\n    ],\n    [\n        \"1P 2M 3M 4A 6M 7m\",\n        \"prometheus\"\n    ],\n    [\n        \"1P 2m 3M 5d 6m 7m\",\n        \"mystery #1\"\n    ],\n    [\n        \"1P 2m 3M 4P 5A 6M\",\n        \"six tone symmetric\"\n    ],\n    [\n        \"1P 2M 3M 4A 5A 6A\",\n        \"whole tone\",\n        \"messiaen's mode #1\"\n    ],\n    [\n        \"1P 2m 4P 4A 5P 7M\",\n        \"messiaen's mode #5\"\n    ],\n    // 7-note scales\n    [\n        \"1P 2M 3M 4P 5d 6m 7m\",\n        \"locrian major\",\n        \"arabian\"\n    ],\n    [\n        \"1P 2m 3M 4A 5P 6m 7M\",\n        \"double harmonic lydian\"\n    ],\n    [\n        \"1P 2m 2A 3M 4A 6m 7m\",\n        \"altered\",\n        \"super locrian\",\n        \"diminished whole tone\",\n        \"pomeroy\"\n    ],\n    [\n        \"1P 2M 3m 4P 5d 6m 7m\",\n        \"locrian #2\",\n        \"half-diminished\",\n        \"aeolian b5\"\n    ],\n    [\n        \"1P 2M 3M 4P 5P 6m 7m\",\n        \"mixolydian b6\",\n        \"melodic minor fifth mode\",\n        \"hindu\"\n    ],\n    [\n        \"1P 2M 3M 4A 5P 6M 7m\",\n        \"lydian dominant\",\n        \"lydian b7\",\n        \"overtone\"\n    ],\n    [\n        \"1P 2M 3M 4A 5A 6M 7M\",\n        \"lydian augmented\"\n    ],\n    [\n        \"1P 2m 3m 4P 5P 6M 7m\",\n        \"dorian b2\",\n        \"phrygian #6\",\n        \"melodic minor second mode\"\n    ],\n    [\n        \"1P 2m 3m 4d 5d 6m 7d\",\n        \"ultralocrian\",\n        \"superlocrian bb7\",\n        \"superlocrian diminished\"\n    ],\n    [\n        \"1P 2m 3m 4P 5d 6M 7m\",\n        \"locrian 6\",\n        \"locrian natural 6\",\n        \"locrian sharp 6\"\n    ],\n    [\n        \"1P 2A 3M 4P 5P 5A 7M\",\n        \"augmented heptatonic\"\n    ],\n    // Source https://en.wikipedia.org/wiki/Ukrainian_Dorian_scale\n    [\n        \"1P 2M 3m 4A 5P 6M 7m\",\n        \"dorian #4\",\n        \"ukrainian dorian\",\n        \"romanian minor\",\n        \"altered dorian\"\n    ],\n    [\n        \"1P 2M 3m 4A 5P 6M 7M\",\n        \"lydian diminished\"\n    ],\n    [\n        \"1P 2M 3M 4A 5A 7m 7M\",\n        \"leading whole tone\"\n    ],\n    [\n        \"1P 2M 3M 4A 5P 6m 7m\",\n        \"lydian minor\"\n    ],\n    [\n        \"1P 2m 3M 4P 5P 6m 7m\",\n        \"phrygian dominant\",\n        \"spanish\",\n        \"phrygian major\"\n    ],\n    [\n        \"1P 2m 3m 4P 5P 6m 7M\",\n        \"balinese\"\n    ],\n    [\n        \"1P 2m 3m 4P 5P 6M 7M\",\n        \"neopolitan major\"\n    ],\n    [\n        \"1P 2M 3M 4P 5P 6m 7M\",\n        \"harmonic major\"\n    ],\n    [\n        \"1P 2m 3M 4P 5P 6m 7M\",\n        \"double harmonic major\",\n        \"gypsy\"\n    ],\n    [\n        \"1P 2M 3m 4A 5P 6m 7M\",\n        \"hungarian minor\"\n    ],\n    [\n        \"1P 2A 3M 4A 5P 6M 7m\",\n        \"hungarian major\"\n    ],\n    [\n        \"1P 2m 3M 4P 5d 6M 7m\",\n        \"oriental\"\n    ],\n    [\n        \"1P 2m 3m 3M 4A 5P 7m\",\n        \"flamenco\"\n    ],\n    [\n        \"1P 2m 3m 4A 5P 6m 7M\",\n        \"todi raga\"\n    ],\n    [\n        \"1P 2m 3M 4P 5d 6m 7M\",\n        \"persian\"\n    ],\n    [\n        \"1P 2m 3M 5d 6m 7m 7M\",\n        \"enigmatic\"\n    ],\n    [\n        \"1P 2M 3M 4P 5A 6M 7M\",\n        \"major augmented\",\n        \"major #5\",\n        \"ionian augmented\",\n        \"ionian #5\"\n    ],\n    [\n        \"1P 2A 3M 4A 5P 6M 7M\",\n        \"lydian #9\"\n    ],\n    // 8-note scales\n    [\n        \"1P 2m 2M 4P 4A 5P 6m 7M\",\n        \"messiaen's mode #4\"\n    ],\n    [\n        \"1P 2m 3M 4P 4A 5P 6m 7M\",\n        \"purvi raga\"\n    ],\n    [\n        \"1P 2m 3m 3M 4P 5P 6m 7m\",\n        \"spanish heptatonic\"\n    ],\n    [\n        \"1P 2M 3m 3M 4P 5P 6M 7m\",\n        \"bebop minor\"\n    ],\n    [\n        \"1P 2M 3M 4P 5P 5A 6M 7M\",\n        \"bebop major\"\n    ],\n    [\n        \"1P 2m 3m 4P 5d 5P 6m 7m\",\n        \"bebop locrian\"\n    ],\n    [\n        \"1P 2M 3m 4P 5P 6m 7m 7M\",\n        \"minor bebop\"\n    ],\n    [\n        \"1P 2M 3M 4P 5d 5P 6M 7M\",\n        \"ichikosucho\"\n    ],\n    [\n        \"1P 2M 3m 4P 5P 6m 6M 7M\",\n        \"minor six diminished\"\n    ],\n    [\n        \"1P 2m 3m 3M 4A 5P 6M 7m\",\n        \"half-whole diminished\",\n        \"dominant diminished\",\n        \"messiaen's mode #2\"\n    ],\n    [\n        \"1P 3m 3M 4P 5P 6M 7m 7M\",\n        \"kafi raga\"\n    ],\n    [\n        \"1P 2M 3M 4P 4A 5A 6A 7M\",\n        \"messiaen's mode #6\"\n    ],\n    // 9-note scales\n    [\n        \"1P 2M 3m 3M 4P 5d 5P 6M 7m\",\n        \"composite blues\"\n    ],\n    [\n        \"1P 2M 3m 3M 4A 5P 6m 7m 7M\",\n        \"messiaen's mode #3\"\n    ],\n    // 10-note scales\n    [\n        \"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\",\n        \"messiaen's mode #7\"\n    ],\n    // 12-note scales\n    [\n        \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\",\n        \"chromatic\"\n    ]\n];\nvar $98c1e925844fb606$var$data_default = $98c1e925844fb606$var$SCALES;\n// index.ts\nvar $98c1e925844fb606$export$799dbe5d40c297df = {\n    ...(0, $37ea67a5744539d1$export$b31835771c1cc4b0),\n    intervals: [],\n    aliases: []\n};\nvar $98c1e925844fb606$var$dictionary = [];\nvar $98c1e925844fb606$var$index = {};\nfunction $98c1e925844fb606$export$e4b2ac9215619f8d() {\n    return $98c1e925844fb606$var$dictionary.map((scale)=>scale.name);\n}\nfunction $98c1e925844fb606$export$3988ae62b71be9a3(type) {\n    return $98c1e925844fb606$var$index[type] || $98c1e925844fb606$export$799dbe5d40c297df;\n}\nvar $98c1e925844fb606$export$360f83db950721c5 = (0, $6afb6a04609a1abf$export$b680e6b2c82f8c2f)(\"ScaleDictionary.scaleType\", \"ScaleType.get\", $98c1e925844fb606$export$3988ae62b71be9a3);\nfunction $98c1e925844fb606$export$84bf76cd7afc7469() {\n    return $98c1e925844fb606$var$dictionary.slice();\n}\nvar $98c1e925844fb606$export$3e9f948b41964866 = (0, $6afb6a04609a1abf$export$b680e6b2c82f8c2f)(\"ScaleDictionary.entries\", \"ScaleType.all\", $98c1e925844fb606$export$84bf76cd7afc7469);\nfunction $98c1e925844fb606$export$ed97f33186d4b816() {\n    return Object.keys($98c1e925844fb606$var$index);\n}\nfunction $98c1e925844fb606$export$1cfc7aad5cb1833b() {\n    $98c1e925844fb606$var$dictionary = [];\n    $98c1e925844fb606$var$index = {};\n}\nfunction $98c1e925844fb606$export$e16d8520af44a096(intervals, name, aliases = []) {\n    const scale = {\n        ...(0, $37ea67a5744539d1$export$3988ae62b71be9a3)(intervals),\n        name: name,\n        intervals: intervals,\n        aliases: aliases\n    };\n    $98c1e925844fb606$var$dictionary.push(scale);\n    $98c1e925844fb606$var$index[scale.name] = scale;\n    $98c1e925844fb606$var$index[scale.setNum] = scale;\n    $98c1e925844fb606$var$index[scale.chroma] = scale;\n    scale.aliases.forEach((alias)=>$98c1e925844fb606$export$44968e33aef80f19(scale, alias));\n    return scale;\n}\nfunction $98c1e925844fb606$export$44968e33aef80f19(scale, alias) {\n    $98c1e925844fb606$var$index[alias] = scale;\n}\n$98c1e925844fb606$var$data_default.forEach(([ivls, name, ...aliases])=>$98c1e925844fb606$export$e16d8520af44a096(ivls.split(\" \"), name, aliases));\nvar $98c1e925844fb606$export$2e2bcd8739ae039 = {\n    names: $98c1e925844fb606$export$e4b2ac9215619f8d,\n    get: $98c1e925844fb606$export$3988ae62b71be9a3,\n    all: $98c1e925844fb606$export$84bf76cd7afc7469,\n    add: $98c1e925844fb606$export$e16d8520af44a096,\n    removeAll: $98c1e925844fb606$export$1cfc7aad5cb1833b,\n    keys: $98c1e925844fb606$export$ed97f33186d4b816,\n    entries: // deprecated\n    $98c1e925844fb606$export$3e9f948b41964866,\n    scaleType: $98c1e925844fb606$export$360f83db950721c5\n};\n\n\nfunction $f81c1a5b3e66f6db$export$b680e6b2c82f8c2f(original, alternative, fn) {\n    return function(...args) {\n        console.warn(`${original} is deprecated. Use ${alternative}.`);\n        return fn.apply(this, args);\n    };\n}\nvar $f81c1a5b3e66f6db$var$NoChord = {\n    empty: true,\n    name: \"\",\n    symbol: \"\",\n    root: \"\",\n    rootDegree: 0,\n    type: \"\",\n    tonic: null,\n    setNum: NaN,\n    quality: \"Unknown\",\n    chroma: \"\",\n    normalized: \"\",\n    aliases: [],\n    notes: [],\n    intervals: []\n};\nfunction $f81c1a5b3e66f6db$export$660b2ee2d4fb4eff(name) {\n    const [letter, acc, oct, type] = (0, $79b02d31442dcba5$export$e13422ef2dcdcd5d)(name);\n    if (letter === \"\") return [\n        \"\",\n        name\n    ];\n    if (letter === \"A\" && type === \"ug\") return [\n        \"\",\n        \"aug\"\n    ];\n    return [\n        letter + acc,\n        oct + type\n    ];\n}\nfunction $f81c1a5b3e66f6db$export$3988ae62b71be9a3(src) {\n    if (src === \"\") return $f81c1a5b3e66f6db$var$NoChord;\n    if (Array.isArray(src) && src.length === 2) return $f81c1a5b3e66f6db$export$300a0543e7b0d2ac(src[1], src[0]);\n    else {\n        const [tonic, type] = $f81c1a5b3e66f6db$export$660b2ee2d4fb4eff(src);\n        const chord2 = $f81c1a5b3e66f6db$export$300a0543e7b0d2ac(type, tonic);\n        return chord2.empty ? $f81c1a5b3e66f6db$export$300a0543e7b0d2ac(src) : chord2;\n    }\n}\nfunction $f81c1a5b3e66f6db$export$300a0543e7b0d2ac(typeName, optionalTonic, optionalRoot) {\n    const type = (0, $5facd99e7fcea85e$export$3988ae62b71be9a3)(typeName);\n    const tonic = (0, $79b02d31442dcba5$export$a92e4c44d367d0af)(optionalTonic || \"\");\n    const root = (0, $79b02d31442dcba5$export$a92e4c44d367d0af)(optionalRoot || \"\");\n    if (type.empty || optionalTonic && tonic.empty || optionalRoot && root.empty) return $f81c1a5b3e66f6db$var$NoChord;\n    const rootInterval = (0, $498eab776f7de6b3$export$9f17032d917177de)(tonic.pc, root.pc);\n    const rootDegree = type.intervals.indexOf(rootInterval) + 1;\n    if (!root.empty && !rootDegree) return $f81c1a5b3e66f6db$var$NoChord;\n    const intervals = Array.from(type.intervals);\n    for(let i = 1; i < rootDegree; i++){\n        const num = intervals[0][0];\n        const quality = intervals[0][1];\n        const newNum = parseInt(num, 10) + 7;\n        intervals.push(`${newNum}${quality}`);\n        intervals.shift();\n    }\n    const notes = tonic.empty ? [] : intervals.map((i)=>(0, $498eab776f7de6b3$export$9cb09a71b7d66923)(tonic, i));\n    typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n    const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc}`;\n    const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"}`;\n    return {\n        ...type,\n        name: name,\n        symbol: symbol,\n        type: type.name,\n        root: root.name,\n        intervals: intervals,\n        rootDegree: rootDegree,\n        tonic: tonic.name,\n        notes: notes\n    };\n}\nvar $f81c1a5b3e66f6db$export$2f59edec6dc7ae8d = $f81c1a5b3e66f6db$export$b680e6b2c82f8c2f(\"Chord.chord\", \"Chord.get\", $f81c1a5b3e66f6db$export$3988ae62b71be9a3);\nfunction $f81c1a5b3e66f6db$export$9cb09a71b7d66923(chordName, interval) {\n    const [tonic, type] = $f81c1a5b3e66f6db$export$660b2ee2d4fb4eff(chordName);\n    if (!tonic) return chordName;\n    return (0, $498eab776f7de6b3$export$9cb09a71b7d66923)(tonic, interval) + type;\n}\nfunction $f81c1a5b3e66f6db$export$8275719bd2e76c56(name) {\n    const s = $f81c1a5b3e66f6db$export$3988ae62b71be9a3(name);\n    const isChordIncluded = (0, $37ea67a5744539d1$export$22c04563e192ea02)(s.chroma);\n    return (0, $98c1e925844fb606$export$84bf76cd7afc7469)().filter((scale)=>isChordIncluded(scale.chroma)).map((scale)=>scale.name);\n}\nfunction $f81c1a5b3e66f6db$export$44d74886d11a5ca2(chordName) {\n    const s = $f81c1a5b3e66f6db$export$3988ae62b71be9a3(chordName);\n    const isSuperset = (0, $37ea67a5744539d1$export$22c04563e192ea02)(s.chroma);\n    return (0, $5facd99e7fcea85e$export$84bf76cd7afc7469)().filter((chord2)=>isSuperset(chord2.chroma)).map((chord2)=>s.tonic + chord2.aliases[0]);\n}\nfunction $f81c1a5b3e66f6db$export$447808b60b7559bd(chordName) {\n    const s = $f81c1a5b3e66f6db$export$3988ae62b71be9a3(chordName);\n    const isSubset = (0, $37ea67a5744539d1$export$2b09cdc61b8a3240)(s.chroma);\n    return (0, $5facd99e7fcea85e$export$84bf76cd7afc7469)().filter((chord2)=>isSubset(chord2.chroma)).map((chord2)=>s.tonic + chord2.aliases[0]);\n}\nfunction $f81c1a5b3e66f6db$export$41fc368e1a942b97(chordName) {\n    const { intervals: intervals, tonic: tonic } = $f81c1a5b3e66f6db$export$3988ae62b71be9a3(chordName);\n    const transpose2 = (0, $498eab776f7de6b3$export$96bb437d3e6675d)(intervals, tonic);\n    return (degree)=>degree ? transpose2(degree > 0 ? degree - 1 : degree) : \"\";\n}\nfunction $f81c1a5b3e66f6db$export$be3f796aed065412(chordName) {\n    const { intervals: intervals, tonic: tonic } = $f81c1a5b3e66f6db$export$3988ae62b71be9a3(chordName);\n    return (0, $498eab776f7de6b3$export$96bb437d3e6675d)(intervals, tonic);\n}\nvar $f81c1a5b3e66f6db$export$2e2bcd8739ae039 = {\n    getChord: $f81c1a5b3e66f6db$export$300a0543e7b0d2ac,\n    get: $f81c1a5b3e66f6db$export$3988ae62b71be9a3,\n    detect: $c8ac599462e7da5f$export$17b446b869dad473,\n    chordScales: $f81c1a5b3e66f6db$export$8275719bd2e76c56,\n    extended: $f81c1a5b3e66f6db$export$44d74886d11a5ca2,\n    reduced: $f81c1a5b3e66f6db$export$447808b60b7559bd,\n    tokenize: $f81c1a5b3e66f6db$export$660b2ee2d4fb4eff,\n    transpose: $f81c1a5b3e66f6db$export$9cb09a71b7d66923,\n    degrees: $f81c1a5b3e66f6db$export$41fc368e1a942b97,\n    steps: $f81c1a5b3e66f6db$export$be3f796aed065412,\n    chord: // deprecate\n    $f81c1a5b3e66f6db$export$2f59edec6dc7ae8d\n};\n\n\nconst $35da740d59af89ba$var$notas = [\n    \"C\",\n    \"C#\",\n    \"D\",\n    \"D#\",\n    \"E\",\n    \"F\",\n    \"F#\",\n    \"G\",\n    \"G#\",\n    \"A\",\n    \"A#\",\n    \"B\"\n];\nconst $35da740d59af89ba$var$afinacao = [\n    \"E\",\n    \"A\",\n    \"D\",\n    \"G\",\n    \"B\",\n    \"E\"\n];\nconst $35da740d59af89ba$var$braco = document.querySelector(\".braco\");\nconst $35da740d59af89ba$var$openNoteContainer = document.querySelector(\".openNote-container\");\nconst $35da740d59af89ba$var$rangeHTML = document.querySelectorAll(\".range-container > span\")[1];\nconst $35da740d59af89ba$var$rangeDiminui = document.querySelectorAll(\".range-container > span\")[0];\nconst $35da740d59af89ba$var$rangeAumenta = document.querySelectorAll(\".range-container > span\")[2];\nconst $35da740d59af89ba$var$acordeResultadoHTML = document.querySelector(\".acordeResultado\");\nconst $35da740d59af89ba$var$acordeBTN = document.querySelector(\".acordeBTN\");\nconst $35da740d59af89ba$var$infoBTN = document.querySelector(\".btn-info\");\nconst $35da740d59af89ba$var$construtorBTN = document.querySelector(\".btn-construtor\");\nconst $35da740d59af89ba$var$acordesBTN = document.querySelector(\".btn-acordes\");\nconst $35da740d59af89ba$var$nomeInput = document.getElementsByName(\"nomeAcorde\")[0];\nconst $35da740d59af89ba$var$btnInputNome = document.querySelector(\".btn-inputNome\");\nconst $35da740d59af89ba$var$btnSalva = document.querySelector(\".btn-salvaAcorde\");\nlet $35da740d59af89ba$var$arrayNotas = [\n    [],\n    [],\n    [],\n    [],\n    [],\n    []\n];\nlet $35da740d59af89ba$var$notasSelecionadas = [\n    {},\n    {},\n    {},\n    {},\n    {},\n    {}\n];\nlet $35da740d59af89ba$var$cache;\nlet $35da740d59af89ba$var$btnAtual = $35da740d59af89ba$var$construtorBTN;\nlet $35da740d59af89ba$var$range = 1;\nfunction $35da740d59af89ba$var$defineNota(cordaAtual, casaAtual) {\n    let notaInicial = $35da740d59af89ba$var$afinacao[cordaAtual - 1];\n    if ($35da740d59af89ba$var$range > 1) {\n        let notaAfinacao = notaInicial;\n        notaInicial = $35da740d59af89ba$var$notas[$35da740d59af89ba$var$notas.findIndex((el)=>el == notaAfinacao) + $35da740d59af89ba$var$range - 1 < $35da740d59af89ba$var$notas.length ? $35da740d59af89ba$var$notas.findIndex((el)=>el == notaAfinacao) + $35da740d59af89ba$var$range - 1 : $35da740d59af89ba$var$notas.findIndex((el)=>el == notaAfinacao) + $35da740d59af89ba$var$range - 1 - $35da740d59af89ba$var$notas.length];\n    }\n    const nota = $35da740d59af89ba$var$notas[$35da740d59af89ba$var$notas.findIndex((el)=>el == notaInicial) + casaAtual < $35da740d59af89ba$var$notas.length ? $35da740d59af89ba$var$notas.findIndex((el)=>el == notaInicial) + casaAtual : $35da740d59af89ba$var$notas.findIndex((el)=>el == notaInicial) + casaAtual - $35da740d59af89ba$var$notas.length];\n    return nota;\n}\nfunction $35da740d59af89ba$var$atualizaNotas() {\n    for(let i = 1; i < 6; i++)for(let j = 1; j < 6; j++){\n        $35da740d59af89ba$var$arrayNotas[i - 1][j - 1].replaceChild(document.createTextNode($35da740d59af89ba$var$defineNota(i, j)), $35da740d59af89ba$var$arrayNotas[i - 1][j - 1].childNodes[0]);\n        if (i === 5) $35da740d59af89ba$var$arrayNotas[5][j - 1].replaceChild(document.createTextNode($35da740d59af89ba$var$defineNota(6, j)), $35da740d59af89ba$var$arrayNotas[5][j - 1].childNodes[0]);\n    }\n}\nfunction $35da740d59af89ba$var$atualizaCasas() {\n    [\n        ...document.querySelectorAll(\".numeroCasas-container > span\")\n    ].forEach((el, i)=>{\n        el.textContent = i + $35da740d59af89ba$var$range;\n    });\n}\nfunction $35da740d59af89ba$var$atualizaSelecao() {\n    $35da740d59af89ba$var$notasSelecionadas.forEach((el, i)=>{\n        if (el.nota != undefined && el.casa != 6) el.nota = el.elemento.textContent;\n    });\n    $35da740d59af89ba$var$displayNotasSelecionadas();\n}\nfunction $35da740d59af89ba$var$desativarNotaVelha(coluna) {\n    if ($35da740d59af89ba$var$notasSelecionadas[coluna].casa != 6) $35da740d59af89ba$var$notasSelecionadas[coluna].elemento.classList.toggle(\"hidden\");\n    else {\n        $35da740d59af89ba$var$notasSelecionadas[coluna].elemento.childNodes[1].classList.remove(\"dis-block\");\n        $35da740d59af89ba$var$notasSelecionadas[coluna].elemento.childNodes[1].classList.add(\"dis-none\");\n    }\n}\nfunction $35da740d59af89ba$var$displayNotasSelecionadas() {\n    let holder = document.querySelector(\".notasSelecionadas-holder\");\n    $35da740d59af89ba$var$notasSelecionadas.forEach((el, i)=>{\n        let span = holder.children.length < 6 ? document.createElement(\"span\") : holder.children[i];\n        let txt = `Corda ${i + 1}: ` + (el.nota != undefined ? el.nota : \"Sem nota\");\n        if (span.childNodes.length < 1) {\n            span.append(txt);\n            holder.append(span);\n        } else span.replaceChild(document.createTextNode(txt), span.childNodes[0]);\n    });\n}\nfunction $35da740d59af89ba$var$selecionaOpenNote(coluna, nota, elemento) {\n    if (elemento.childNodes[0].classList.contains(\"dis-none\") && elemento.childNodes[1].classList.contains(\"dis-none\") || elemento.childNodes[1].classList.contains(\"dis-none\")) {\n        if ($35da740d59af89ba$var$notasSelecionadas[coluna].nota != undefined) $35da740d59af89ba$var$desativarNotaVelha(coluna);\n        elemento.childNodes[0].classList.add(\"dis-none\");\n        elemento.childNodes[1].classList.add(\"dis-block\");\n        elemento.childNodes[1].classList.remove(\"dis-none\");\n        let obj = $35da740d59af89ba$var$notasSelecionadas[coluna];\n        obj[\"nota\"] = nota;\n        obj[\"casa\"] = 6;\n        obj[\"elemento\"] = elemento;\n    } else {\n        elemento.childNodes[0].classList.remove(\"dis-none\");\n        elemento.childNodes[1].classList.remove(\"dis-block\");\n        elemento.childNodes[1].classList.add(\"dis-none\");\n        $35da740d59af89ba$var$notasSelecionadas[coluna] = {};\n    }\n    $35da740d59af89ba$var$displayNotasSelecionadas();\n}\nfunction $35da740d59af89ba$var$selecionaNota(coluna, casa, elementoNovo) {\n    if (elementoNovo.classList.contains(\"hidden\")) {\n        elementoNovo.classList.toggle(\"hidden\");\n        if ($35da740d59af89ba$var$notasSelecionadas[coluna].nota != undefined) $35da740d59af89ba$var$desativarNotaVelha(coluna);\n        else document.querySelector(`.openNote-holder:nth-child(${coluna + 1}) .openNote-span`).classList.add(\"dis-none\");\n        let obj = $35da740d59af89ba$var$notasSelecionadas[coluna];\n        obj[\"nota\"] = elementoNovo.innerText;\n        obj[\"casa\"] = casa;\n        obj[\"elemento\"] = elementoNovo;\n    } else {\n        elementoNovo.classList.toggle(\"hidden\");\n        document.querySelector(`.openNote-holder:nth-child(${coluna + 1}) .openNote-span`).classList.remove(\"dis-none\");\n        $35da740d59af89ba$var$notasSelecionadas[coluna] = {};\n    }\n    $35da740d59af89ba$var$displayNotasSelecionadas();\n}\nfunction $35da740d59af89ba$var$displayOpenNotes() {\n    $35da740d59af89ba$var$afinacao.forEach((el, i)=>{\n        let div = document.createElement(\"div\");\n        let sp = document.createElement(\"span\");\n        let spBola = document.createElement(\"span\");\n        let hidden = document.createElement(\"p\");\n        hidden.append(el);\n        sp.append(\"X\");\n        sp.classList.add(\"openNote-span\");\n        hidden.classList.add(\"dis-none\");\n        sp.append(hidden);\n        div.append(sp);\n        div.classList.add(\"openNote-holder\");\n        spBola.classList.add(\"openNote-bola\");\n        spBola.classList.add(\"dis-none\");\n        div.append(spBola);\n        $35da740d59af89ba$var$openNoteContainer.append(div);\n        div.addEventListener(\"click\", ()=>{\n            $35da740d59af89ba$var$selecionaOpenNote(i, el, div);\n        });\n    });\n}\nfunction $35da740d59af89ba$export$3b0f3781aa3ef7a4(pai, ehVisualizador, notas) {\n    for(let i = 1; i < 6; i++){\n        let col = document.createElement(\"div\");\n        col.classList.add(\"coluna\");\n        for(let j = 1; j < 6; j++){\n            let casa = document.createElement(\"div\");\n            casa.classList.add(\"casa\");\n            let notaContainer = document.createElement(\"span\");\n            let nota = document.createElement(\"span\");\n            let notaTxt = $35da740d59af89ba$var$defineNota(i, j);\n            nota.append(notaTxt);\n            $35da740d59af89ba$var$arrayNotas[i - 1].push(nota);\n            notaContainer.appendChild(nota);\n            casa.appendChild(notaContainer);\n            if (!ehVisualizador) {\n                notaContainer.classList.add(\"nota-container\");\n                notaContainer.addEventListener(\"click\", ()=>{\n                    $35da740d59af89ba$var$selecionaNota(i - 1, j, nota);\n                });\n                nota.classList.add(\"nota\", \"hidden\");\n            } else {\n                notaContainer.classList.add(\"nota-container-B\");\n                if (notas[i - 1].casa != undefined && j === notas[i - 1].casa) nota.classList.add(\"nota\");\n                else nota.classList.add(\"nota\", \"hidden\");\n            }\n            if (i === 5) {\n                let notaContainerD = document.createElement(\"span\");\n                let notaD = document.createElement(\"span\");\n                let notaDTxt = $35da740d59af89ba$var$defineNota(6, j);\n                notaD.append(notaDTxt);\n                $35da740d59af89ba$var$arrayNotas[5].push(notaD);\n                notaContainerD.appendChild(notaD);\n                casa.appendChild(notaContainerD);\n                if (!ehVisualizador) {\n                    notaContainerD.classList.add(\"nota-container-direita\");\n                    notaD.classList.add(\"nota\", \"hidden\");\n                    notaContainerD.addEventListener(\"click\", ()=>{\n                        $35da740d59af89ba$var$selecionaNota(i, j, notaD);\n                    });\n                } else {\n                    notaContainerD.classList.add(\"nota-container-direita-B\");\n                    if (notas[5].casa != undefined && j === notas[5].casa) notaD.classList.add(\"nota\");\n                    else notaD.classList.add(\"nota\", \"hidden\");\n                }\n            }\n            col.appendChild(casa);\n        }\n        pai.appendChild(col);\n    }\n}\nfunction $35da740d59af89ba$var$achaAcorde() {\n    let notas = $35da740d59af89ba$var$notasSelecionadas.map((obj)=>{\n        if (obj.nota != undefined) return obj.nota;\n    });\n    let acordes = (0, $c8ac599462e7da5f$export$17b446b869dad473)(notas);\n    let txt;\n    if (acordes.length != 0) {\n        txt = \"Acordes detectados: \" + acordes.join(\", \");\n        $35da740d59af89ba$var$nomeInput.value = acordes[0];\n        if (document.querySelector(\".listaInput\") === null) {\n            let ul = document.createElement(\"ul\");\n            ul.classList.add(\"listaInput\", \"dis-none\");\n            let holder = document.querySelector(\".inputNome-holder\");\n            holder.append(ul);\n            acordes.forEach((el)=>{\n                let li = document.createElement(\"li\");\n                li.append(el);\n                ul.append(li);\n                li.addEventListener(\"click\", ()=>{\n                    $35da740d59af89ba$var$nomeInput.value = li.textContent;\n                });\n            });\n        } else {\n            let ul = document.querySelector(\".listaInput\");\n            ul.replaceChildren(...acordes.map((el)=>{\n                let li = document.createElement(\"li\");\n                li.append(el);\n                li.addEventListener(\"click\", ()=>{\n                    $35da740d59af89ba$var$nomeInput.value = li.textContent;\n                });\n                return li;\n            }));\n        }\n    } else txt = \"Nenhum acorde foi detectado\";\n    $35da740d59af89ba$var$acordeResultadoHTML.replaceChildren(txt);\n}\nfunction $35da740d59af89ba$var$salvaAcorde() {\n    let novoAcorde = {};\n    let p = document.querySelector(\".textoSave\");\n    if ($35da740d59af89ba$var$nomeInput.value.length <= 0) {\n        p.replaceChildren(\"O acorde precisa ter um nome de no m\\xednimo um caractere\");\n        return 0;\n    }\n    console.log($35da740d59af89ba$var$notasSelecionadas);\n    if ($35da740d59af89ba$var$notasSelecionadas.length < 2) {\n        p.replaceChildren(\"Forme um acorde com pelo menos duas notas\");\n        return 0;\n    }\n    novoAcorde[\"nome\"] = $35da740d59af89ba$var$nomeInput.value;\n    novoAcorde[\"notas\"] = $35da740d59af89ba$var$notasSelecionadas;\n    novoAcorde[\"range\"] = $35da740d59af89ba$var$range;\n    if (!localStorage.getItem(\"acordes\")) {\n        localStorage.setItem(\"acordes\", JSON.stringify([\n            novoAcorde\n        ]));\n        p.replaceChildren(\"O acorde \" + $35da740d59af89ba$var$nomeInput.value + \" foi salvo!\");\n    } else {\n        let arr = JSON.parse(localStorage.getItem(\"acordes\"));\n        if (!$35da740d59af89ba$var$achaDupli(novoAcorde.nome)) {\n            arr.push(novoAcorde);\n            localStorage.setItem(\"acordes\", JSON.stringify(arr));\n            p.replaceChildren(\"O acorde \" + $35da740d59af89ba$var$nomeInput.value + \" foi salvo!\");\n        } else p.replaceChildren(\"J\\xe1 existe um acorde com o mesmo nome.\");\n    }\n}\nfunction $35da740d59af89ba$var$achaDupli(nome) {\n    let arrayAcordes = JSON.parse(localStorage.getItem(\"acordes\"));\n    for(let i = 0; i < arrayAcordes.length; i++){\n        if (arrayAcordes[i].nome === nome) return true;\n    }\n    return false;\n}\nfunction $35da740d59af89ba$var$salvaCache() {\n    const ehPaginaConstrutor = document.querySelector(\".builder-container\").children[0].classList.contains(\"range-container\");\n    if (ehPaginaConstrutor) {\n        const c = document.querySelector(\".builder-container\").childNodes;\n        $35da740d59af89ba$var$cache = Array.from(c);\n    }\n}\nfunction $35da740d59af89ba$var$alteraAtual(targetBTN) {\n    if (targetBTN !== $35da740d59af89ba$var$btnAtual) {\n        $35da740d59af89ba$var$btnAtual.classList.toggle(\"atual\");\n        targetBTN.classList.toggle(\"atual\");\n        $35da740d59af89ba$var$btnAtual = targetBTN;\n    }\n}\nwindow.onload = ()=>{\n    $35da740d59af89ba$export$3b0f3781aa3ef7a4($35da740d59af89ba$var$braco);\n    $35da740d59af89ba$var$displayOpenNotes();\n    $35da740d59af89ba$var$displayNotasSelecionadas();\n    $35da740d59af89ba$var$rangeHTML.append($35da740d59af89ba$var$range);\n};\n$35da740d59af89ba$var$acordeBTN.addEventListener(\"click\", ()=>{\n    $35da740d59af89ba$var$achaAcorde();\n});\n$35da740d59af89ba$var$rangeDiminui.addEventListener(\"click\", (event)=>{\n    if ($35da740d59af89ba$var$range > 1) {\n        $35da740d59af89ba$var$range = $35da740d59af89ba$var$range - 1;\n        $35da740d59af89ba$var$rangeHTML.replaceChild(document.createTextNode($35da740d59af89ba$var$range), $35da740d59af89ba$var$rangeHTML.childNodes[0]);\n        $35da740d59af89ba$var$atualizaCasas();\n        $35da740d59af89ba$var$atualizaNotas();\n        $35da740d59af89ba$var$atualizaSelecao();\n    }\n});\n$35da740d59af89ba$var$rangeAumenta.addEventListener(\"click\", (event)=>{\n    if ($35da740d59af89ba$var$range < 20) {\n        $35da740d59af89ba$var$range = $35da740d59af89ba$var$range + 1;\n        $35da740d59af89ba$var$rangeHTML.replaceChild(document.createTextNode($35da740d59af89ba$var$range), $35da740d59af89ba$var$rangeHTML.childNodes[0]);\n        $35da740d59af89ba$var$atualizaCasas();\n        $35da740d59af89ba$var$atualizaNotas();\n        $35da740d59af89ba$var$atualizaSelecao();\n    }\n});\n$35da740d59af89ba$var$infoBTN.addEventListener(\"click\", (event)=>{\n    $35da740d59af89ba$var$salvaCache();\n    (0, $31fcbff186f504bd$export$7b1762f2253f172b)();\n    $35da740d59af89ba$var$alteraAtual(event.target);\n});\n$35da740d59af89ba$var$construtorBTN.addEventListener(\"click\", (event)=>{\n    if ($35da740d59af89ba$var$cache) {\n        let c = document.querySelector(\".builder-container\");\n        c.replaceChildren(...$35da740d59af89ba$var$cache);\n    }\n    $35da740d59af89ba$var$alteraAtual(event.target);\n});\n$35da740d59af89ba$var$acordesBTN.addEventListener(\"click\", (event)=>{\n    $35da740d59af89ba$var$salvaCache();\n    (0, $536c869b7829f0c2$export$11cdf119b9ba7752)();\n    $35da740d59af89ba$var$alteraAtual(event.target);\n});\n$35da740d59af89ba$var$btnInputNome.addEventListener(\"click\", ()=>{\n    let li = document.querySelector(\".listaInput\");\n    if (document.querySelector(\".listaInput\") != null) {\n        li.classList.toggle(\"dis-block\");\n        li.classList.toggle(\"dis-none\");\n    }\n});\n$35da740d59af89ba$var$btnSalva.addEventListener(\"click\", ()=>{\n    $35da740d59af89ba$var$salvaAcorde();\n});\n\n\n//# sourceMappingURL=index.44ea49fd.js.map\n","    import { displayInfo } from './info.js'\r\n    import { displayAcordes } from './acordes.js'\r\n    import { detect } from \"@tonaljs/chord\";\r\n    export {displayTrastes};\r\n\r\n    const notas = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"]\r\n    const afinacao = [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"];\r\n    const braco = document.querySelector(\".braco\");\r\n    const openNoteContainer = document.querySelector(\".openNote-container\")\r\n    const rangeHTML = document.querySelectorAll(\".range-container > span\")[1]\r\n    const rangeDiminui = document.querySelectorAll(\".range-container > span\")[0]\r\n    const rangeAumenta = document.querySelectorAll(\".range-container > span\")[2]\r\n    const acordeResultadoHTML = document.querySelector(\".acordeResultado\");\r\n    const acordeBTN = document.querySelector(\".acordeBTN\");\r\n    const infoBTN = document.querySelector(\".btn-info\")\r\n    const construtorBTN = document.querySelector(\".btn-construtor\")\r\n    const acordesBTN = document.querySelector(\".btn-acordes\")\r\n    const nomeInput = document.getElementsByName(\"nomeAcorde\")[0]\r\n    const btnInputNome = document.querySelector(\".btn-inputNome\")\r\n    const btnSalva = document.querySelector(\".btn-salvaAcorde\")\r\n\r\n    let arrayNotas = [[], [], [], [], [], []];\r\n    let notasSelecionadas = [{}, {}, {}, {}, {}, {}];\r\n    let cache;\r\n    let btnAtual = construtorBTN;\r\n    let range = 1;\r\n\r\n\r\n\r\nfunction defineNota(cordaAtual, casaAtual) {\r\n    let notaInicial = afinacao[cordaAtual - 1];\r\n\r\n    if (range > 1) {\r\n        let notaAfinacao = notaInicial;\r\n        notaInicial = notas[notas.findIndex(el => el == notaAfinacao) + range - 1 < notas.length ? notas.findIndex(el => el == notaAfinacao) + range - 1 :\r\n            notas.findIndex(el => el == notaAfinacao) + range - 1 - notas.length]\r\n    }\r\n    const nota = notas[notas.findIndex(el => el == notaInicial) + casaAtual < notas.length ? notas.findIndex(el => el == notaInicial) + casaAtual :\r\n        notas.findIndex(el => el == notaInicial) + casaAtual - notas.length];\r\n\r\n    return nota;\r\n}\r\n\r\n\r\nfunction atualizaNotas() {\r\n    for (let i = 1; i < 6; i++) {\r\n        for (let j = 1; j < 6; j++) {\r\n            arrayNotas[i - 1][j - 1].replaceChild(document.createTextNode(defineNota(i, j)), arrayNotas[i - 1][j - 1].childNodes[0]);\r\n            if (i === 5) {\r\n                arrayNotas[5][j - 1].replaceChild(document.createTextNode(defineNota(6, j)), arrayNotas[5][j - 1].childNodes[0]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction atualizaCasas() {\r\n    [...document.querySelectorAll(\".numeroCasas-container > span\")].forEach((el, i) => {\r\n        el.textContent = i + range\r\n    })\r\n\r\n}\r\n\r\nfunction atualizaSelecao() {\r\n    notasSelecionadas.forEach((el, i) => {\r\n        if (el.nota != undefined && el.casa != 6) {\r\n            el.nota = el.elemento.textContent;\r\n        }\r\n    })\r\n    displayNotasSelecionadas()\r\n}\r\n\r\nfunction desativarNotaVelha(coluna) {\r\n    if (notasSelecionadas[coluna].casa != 6) {\r\n        notasSelecionadas[coluna].elemento.classList.toggle(\"hidden\");\r\n    } else {\r\n        notasSelecionadas[coluna].elemento.childNodes[1].classList.remove(\"dis-block\");\r\n        notasSelecionadas[coluna].elemento.childNodes[1].classList.add(\"dis-none\");\r\n\r\n    }\r\n}\r\n\r\nfunction displayNotasSelecionadas() {\r\n    let holder = document.querySelector(\".notasSelecionadas-holder\")\r\n\r\n    notasSelecionadas.forEach((el, i) => {\r\n        let span = holder.children.length < 6 ? document.createElement(\"span\") : holder.children[i];\r\n        let txt = `Corda ${i + 1}: ` + (el.nota != undefined ? el.nota : \"Sem nota\");\r\n        if (span.childNodes.length < 1) {\r\n            span.append(txt);\r\n            holder.append(span)\r\n        } else {\r\n            span.replaceChild(document.createTextNode(txt), span.childNodes[0]);\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction selecionaOpenNote(coluna, nota, elemento) {\r\n\r\n    if (elemento.childNodes[0].classList.contains(\"dis-none\") && elemento.childNodes[1].classList.contains(\"dis-none\")\r\n        || elemento.childNodes[1].classList.contains(\"dis-none\")) {\r\n        if (notasSelecionadas[coluna].nota != undefined) {\r\n            desativarNotaVelha(coluna);\r\n        }\r\n\r\n        elemento.childNodes[0].classList.add(\"dis-none\")\r\n        elemento.childNodes[1].classList.add(\"dis-block\")\r\n        elemento.childNodes[1].classList.remove(\"dis-none\")\r\n        let obj = notasSelecionadas[coluna];\r\n        obj[\"nota\"] = nota;\r\n        obj[\"casa\"] = 6;\r\n        obj[\"elemento\"] = elemento;\r\n    } else {\r\n        elemento.childNodes[0].classList.remove(\"dis-none\")\r\n        elemento.childNodes[1].classList.remove(\"dis-block\")\r\n        elemento.childNodes[1].classList.add(\"dis-none\")\r\n        notasSelecionadas[coluna] = {};\r\n    }\r\n\r\n    displayNotasSelecionadas();\r\n}\r\n\r\nfunction selecionaNota(coluna, casa, elementoNovo) {\r\n    if (elementoNovo.classList.contains(\"hidden\")) {\r\n        elementoNovo.classList.toggle(\"hidden\")\r\n\r\n        if (notasSelecionadas[coluna].nota != undefined) {\r\n            desativarNotaVelha(coluna);\r\n        } else {\r\n            document.querySelector(`.openNote-holder:nth-child(${coluna + 1}) .openNote-span`).classList.add(\"dis-none\")\r\n        }\r\n\r\n        let obj = notasSelecionadas[coluna];\r\n        obj[\"nota\"] = elementoNovo.innerText;\r\n        obj[\"casa\"] = casa;\r\n        obj[\"elemento\"] = elementoNovo;\r\n\r\n\r\n\r\n    } else {\r\n        elementoNovo.classList.toggle(\"hidden\");\r\n        document.querySelector(`.openNote-holder:nth-child(${coluna + 1}) .openNote-span`).classList.remove(\"dis-none\")\r\n        notasSelecionadas[coluna] = {};\r\n    }\r\n\r\n    displayNotasSelecionadas();\r\n}\r\n\r\n\r\n\r\n\r\nfunction displayOpenNotes() {\r\n    afinacao.forEach((el, i) => {\r\n        let div = document.createElement(\"div\")\r\n        let sp = document.createElement(\"span\")\r\n        let spBola = document.createElement(\"span\")\r\n        let hidden = document.createElement(\"p\")\r\n        hidden.append(el);\r\n        sp.append(\"X\")\r\n        sp.classList.add(\"openNote-span\")\r\n        hidden.classList.add(\"dis-none\")\r\n        sp.append(hidden)\r\n        div.append(sp)\r\n        div.classList.add(\"openNote-holder\")\r\n        spBola.classList.add(\"openNote-bola\")\r\n        spBola.classList.add(\"dis-none\");\r\n        div.append(spBola)\r\n        openNoteContainer.append(div);\r\n\r\n\r\n\r\n        div.addEventListener(\"click\", () => {\r\n            selecionaOpenNote(i, el, div);\r\n        })\r\n\r\n\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction displayTrastes(pai,ehVisualizador,notas) {\r\n    for (let i = 1; i < 6; i++) {\r\n        let col = document.createElement(\"div\")\r\n        col.classList.add(\"coluna\");\r\n\r\n        for (let j = 1; j < 6; j++) {\r\n\r\n            let casa = document.createElement(\"div\");\r\n            casa.classList.add(\"casa\");\r\n\r\n            let notaContainer = document.createElement(\"span\");\r\n\r\n            let nota = document.createElement(\"span\");\r\n\r\n            let notaTxt = defineNota(i, j);\r\n            nota.append(notaTxt)\r\n\r\n            arrayNotas[i - 1].push(nota);\r\n\r\n            notaContainer.appendChild(nota);\r\n            casa.appendChild(notaContainer);\r\n\r\n            if(!ehVisualizador){\r\n                notaContainer.classList.add(\"nota-container\")\r\n                notaContainer.addEventListener(\"click\", () => {\r\n                    selecionaNota(i - 1, j, nota)\r\n                })\r\n                nota.classList.add(\"nota\", \"hidden\");\r\n            }else{\r\n                notaContainer.classList.add(\"nota-container-B\")\r\n\r\n                if(notas[i-1].casa != undefined && j === notas[i-1].casa){\r\n                    nota.classList.add(\"nota\");\r\n                }else{\r\n                    nota.classList.add(\"nota\", \"hidden\");\r\n                }\r\n            }\r\n\r\n\r\n            if (i === 5) {\r\n                let notaContainerD = document.createElement(\"span\");\r\n                \r\n                let notaD = document.createElement(\"span\");\r\n                let notaDTxt = defineNota(6, j);\r\n                notaD.append(notaDTxt)\r\n                \r\n                arrayNotas[5].push(notaD);\r\n                \r\n                \r\n                notaContainerD.appendChild(notaD);\r\n                casa.appendChild(notaContainerD);\r\n                \r\n                if(!ehVisualizador){\r\n                    notaContainerD.classList.add(\"nota-container-direita\");\r\n                    notaD.classList.add(\"nota\", \"hidden\");\r\n                    notaContainerD.addEventListener(\"click\", () => {\r\n                        selecionaNota(i, j, notaD)\r\n                    })\r\n                }else{\r\n                    notaContainerD.classList.add(\"nota-container-direita-B\")\r\n    \r\n                    if(notas[5].casa != undefined && j === notas[5].casa){\r\n                        notaD.classList.add(\"nota\");\r\n                    }else{\r\n                        notaD.classList.add(\"nota\", \"hidden\");\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            col.appendChild(casa);\r\n        }\r\n\r\n\r\n        pai.appendChild(col);\r\n    }\r\n}\r\n\r\n\r\nfunction achaAcorde() {\r\n    let notas = notasSelecionadas.map((obj) => {\r\n        if (obj.nota != undefined) {\r\n            return obj.nota\r\n        }\r\n    });\r\n\r\n    let acordes = detect(notas)\r\n    let txt;\r\n    if (acordes.length != 0) {\r\n        txt = \"Acordes detectados: \" + acordes.join(\", \")\r\n        nomeInput.value = acordes[0]\r\n\r\n        if (document.querySelector(\".listaInput\") === null) {\r\n            let ul = document.createElement(\"ul\")\r\n            ul.classList.add(\"listaInput\", \"dis-none\")\r\n            let holder = document.querySelector(\".inputNome-holder\")\r\n            holder.append(ul)\r\n            acordes.forEach((el) => {\r\n                let li = document.createElement(\"li\")\r\n                li.append(el)\r\n                ul.append(li)\r\n\r\n                li.addEventListener(\"click\", () => {\r\n                    nomeInput.value = li.textContent\r\n                })\r\n\r\n\r\n            })\r\n        }else{\r\n            let ul = document.querySelector(\".listaInput\");\r\n            ul.replaceChildren(...acordes.map((el)=>{\r\n                let li = document.createElement(\"li\")\r\n                li.append(el)\r\n\r\n                li.addEventListener(\"click\", () => {\r\n                    nomeInput.value = li.textContent\r\n                })\r\n\r\n                return li;\r\n            }))\r\n        }\r\n\r\n\r\n    } else {\r\n        txt = \"Nenhum acorde foi detectado\"\r\n    }\r\n    acordeResultadoHTML.replaceChildren(txt)\r\n\r\n\r\n}\r\n\r\nfunction salvaAcorde(){\r\n\r\n    let novoAcorde = {};\r\n    let p = document.querySelector(\".textoSave\")\r\n    \r\n    if(nomeInput.value.length <= 0){\r\n        p.replaceChildren(\"O acorde precisa ter um nome de no mínimo um caractere\")\r\n        return 0;\r\n    }\r\n\r\n    console.log(notasSelecionadas)\r\n\r\n    if(notasSelecionadas.length < 2){\r\n        p.replaceChildren('Forme um acorde com pelo menos duas notas')\r\n        return 0;\r\n    }\r\n\r\n\r\n    novoAcorde[\"nome\"] = nomeInput.value;\r\n    novoAcorde[\"notas\"] = notasSelecionadas;\r\n    novoAcorde[\"range\"] = range;\r\n\r\n\r\n    if(!localStorage.getItem(\"acordes\")){\r\n        localStorage.setItem(\"acordes\",JSON.stringify([novoAcorde]))\r\n        p.replaceChildren(\"O acorde \"+nomeInput.value+\" foi salvo!\")\r\n    }else{\r\n        let arr = JSON.parse(localStorage.getItem(\"acordes\"));\r\n        if(!achaDupli(novoAcorde.nome)){\r\n            arr.push(novoAcorde);\r\n            localStorage.setItem(\"acordes\",JSON.stringify(arr));\r\n            p.replaceChildren(\"O acorde \"+nomeInput.value+\" foi salvo!\")\r\n        }else{\r\n            p.replaceChildren(\"Já existe um acorde com o mesmo nome.\")\r\n        \r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction achaDupli(nome){\r\n    let arrayAcordes = JSON.parse(localStorage.getItem(\"acordes\"));\r\n    for(let i = 0; i < arrayAcordes.length; i++){\r\n        if(arrayAcordes[i].nome === nome)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction salvaCache(){\r\n    const ehPaginaConstrutor = document.querySelector((\".builder-container\")).children[0].classList.contains(\"range-container\");\r\n\r\n    if(ehPaginaConstrutor){\r\n        const c = document.querySelector(\".builder-container\").childNodes\r\n        cache = Array.from(c);\r\n    }\r\n\r\n}\r\n\r\nfunction alteraAtual(targetBTN){\r\n    if(targetBTN !== btnAtual){\r\n        btnAtual.classList.toggle(\"atual\");\r\n        targetBTN.classList.toggle(\"atual\");\r\n        btnAtual = targetBTN;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nwindow.onload = () => {\r\n    displayTrastes(braco);\r\n    displayOpenNotes();\r\n    displayNotasSelecionadas();\r\n    rangeHTML.append(range)\r\n\r\n}\r\n\r\n\r\nacordeBTN.addEventListener(\"click\", () => {\r\n    achaAcorde();\r\n})\r\n\r\nrangeDiminui.addEventListener(\"click\", (event) => {\r\n    if (range > 1) {\r\n        range = range - 1;\r\n        rangeHTML.replaceChild(document.createTextNode(range), rangeHTML.childNodes[0]);\r\n        atualizaCasas();\r\n        atualizaNotas();\r\n        atualizaSelecao();\r\n    }\r\n})\r\n\r\nrangeAumenta.addEventListener(\"click\", (event) => {\r\n    if (range < 20) {\r\n        range = range + 1;\r\n        rangeHTML.replaceChild(document.createTextNode(range), rangeHTML.childNodes[0]);\r\n        atualizaCasas();\r\n        atualizaNotas();\r\n        atualizaSelecao();\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\ninfoBTN.addEventListener(\"click\", (event) => {\r\n    salvaCache();\r\n    displayInfo();\r\n    alteraAtual(event.target)\r\n})\r\n\r\nconstrutorBTN.addEventListener(\"click\", (event) => {\r\n    if(cache){\r\n        let c = document.querySelector(\".builder-container\")\r\n        c.replaceChildren(...cache)\r\n    }\r\n    alteraAtual(event.target)\r\n})\r\n\r\nacordesBTN.addEventListener(\"click\",(event)=>{\r\n    salvaCache();\r\n    displayAcordes();\r\n    alteraAtual(event.target)\r\n})\r\n\r\n\r\n\r\nbtnInputNome.addEventListener(\"click\", () => {\r\n    let li = document.querySelector(\".listaInput\")\r\n    if(document.querySelector(\".listaInput\") != null){\r\n        li.classList.toggle(\"dis-block\")\r\n        li.classList.toggle(\"dis-none\")\r\n    }\r\n})\r\n\r\nbtnSalva.addEventListener(\"click\",()=>{\r\n    salvaAcorde();\r\n});","\r\nexport {displayInfo};\r\n\r\n\r\nfunction displayInfo(){\r\n    let p = document.createElement(\"p\");\r\n    let p2 = document.createElement(\"p\");\r\n    let h2 = document.createElement('h2');\r\n    let h2_contato = document.createElement('h2');\r\n    let sec = document.createElement('section');\r\n    let linkedin = document.createElement('a');\r\n    let git = document.createElement('a')\r\n    let email = document.createElement('a')\r\n    let linkholder = document.createElement('div')\r\n    linkholder.classList.add('link-holder')\r\n    sec.classList.add('sec-info')\r\n    h2_contato.append('Informações de contato');\r\n    h2.append('Sobre o site')\r\n    p.append(\"Nesse projeto pessoal de minha autoria você pode escolher as posições das notas no braço do violão, em formato de cifra, e então achar o nome do acorde digitado.\")\r\n    p2.append(\"Foi utilizado o empacotador web Parcel junto com Javascript, CSS, HTML e a biblioteca javascript de teoria musical 'tonal'.\")\r\n    linkedin.append(\"Linkedin\")\r\n    git.append(\"Github\")\r\n    email.append(\"arthurlacerda206@gmail.com\")\r\n\r\n    linkedin.href = \"https://www.linkedin.com/in/arthurfl0\"\r\n    git.href = \"https://github.com/arthurFL0\"\r\n    email.href = \"mailto:arthurlacerda206@gmail.com\"\r\n    linkholder.append(linkedin,git,email)\r\n    sec.append(h2,p,p2,h2_contato,linkholder)\r\n        \r\n\r\n    document.querySelector(\".builder-container\").replaceChildren(sec)\r\n}","\r\nexport{displayAcordes};\r\nimport {displayTrastes} from './index.js';\r\n\r\n\r\n\r\nfunction displayAcordes(){\r\n    let divContainer = document.createElement(\"div\");\r\n    divContainer.classList.add(\"container-acordes\");\r\n    document.querySelector(\".builder-container\").replaceChildren(divContainer);\r\n\r\n    let arrAcordes = localStorage.getItem(\"acordes\") ? JSON.parse(localStorage.getItem(\"acordes\")) : [] ;\r\n\r\n\r\n    if(arrAcordes.length > 0 ){\r\n        arrAcordes.forEach((acorde,index)=>{\r\n        let div = document.createElement(\"div\");\r\n        let btn = document.createElement(\"button\");\r\n        btn.append(acorde.nome);\r\n        btn.classList.add(\"btn-acorde\",\"pointer\");\r\n        div.classList.add(\"div-acorde\");\r\n        div.append(btn)\r\n        divContainer.append(div)\r\n        btn.addEventListener('click',()=>{\r\n            renderAcorde(acorde,index)\r\n        })\r\n    })\r\n\r\n    }else{\r\n        let div = document.createElement(\"div\");\r\n        div.classList.add('acordes-placeholder','c-default')\r\n        let span  = document.createElement(\"span\");\r\n        span.append('Crie acordes na tela do construtor e eles aparecerão aqui!');\r\n        div.append(span)\r\n        divContainer.append(div)\r\n    }\r\n}\r\n\r\n\r\nfunction renderAcorde(acorde,index){\r\n    let divAcorde = document.createElement(\"div\")\r\n    divAcorde.classList.add(\"acorde-container\");\r\n    let divInformation = document.createElement(\"div\")\r\n    divInformation.classList.add(\"div-info\")\r\n    let divDisplay = document.createElement(\"div\")\r\n    divDisplay.classList.add(\"div-display\")\r\n    let divInferior = document.createElement(\"div\")\r\n    divInferior.classList.add(\"infoAcorde-container\",\"c-default\")\r\n    divInferior.append(divInformation,divDisplay)\r\n\r\n    let divSuperior = document.createElement(\"div\");\r\n    divSuperior.classList.add(\"btnAcorde-container\")\r\n    let btnVoltar = document.createElement(\"button\")\r\n    btnVoltar.append(\"Voltar\")\r\n    \r\n    let btnRemover = document.createElement(\"button\")\r\n    btnRemover.append(\"Remover Acorde\")\r\n    btnRemover.classList.add('btnRemover')\r\n    btnRemover.addEventListener('click',()=>{\r\n        removerAcorde(index);\r\n        displayAcordes();\r\n    })\r\n\r\n    let divVoltar = document.createElement(\"div\")\r\n    let tagI = document.createElement(\"i\")\r\n    divVoltar.classList.add(\"voltar-container\",\"pointer\")\r\n    tagI.classList.add(\"fa-solid\",\"fa-right-long\",\"fa-rotate-180\")\r\n    divVoltar.append(tagI,btnVoltar)\r\n    divVoltar.addEventListener('click',()=>{\r\n        displayAcordes();\r\n    })\r\n\r\n\r\n    divSuperior.append(divVoltar,btnRemover)\r\n\r\n    divAcorde.append(divSuperior)\r\n    divAcorde.append(divInferior)\r\n\r\n    let nomeAcorde = document.createElement(\"h2\")\r\n    nomeAcorde.append(acorde.nome)\r\n    nomeAcorde.classList.add(\"white\")\r\n    divInformation.append(nomeAcorde)\r\n\r\n    let h3 = document.createElement(\"h3\")\r\n    h3.append(\"Notas:\")\r\n    h3.classList.add(\"white\")\r\n    divInformation.append(h3)\r\n\r\n    acorde.notas.forEach((el,i)=>{\r\n        let p = document.createElement(\"p\")\r\n        let txt = `Corda ${i + 1}: ` + (el.nota != undefined ? el.nota : \"Sem nota\");\r\n        p.classList.add(\"white\")\r\n        p.append(txt);\r\n        divInformation.append(p)\r\n    })\r\n\r\n    construirAcorde(divDisplay,acorde)\r\n\r\n\r\n    document.querySelector(\".builder-container\").replaceChildren(divAcorde)\r\n\r\n\r\n}\r\n\r\nfunction construirAcorde(pai,acorde){\r\n    let divCasas = document.createElement(\"div\")\r\n    divCasas.classList.add(\"numeroCasas-container\",\"c-default\",\"padding-t\")\r\n\r\n    let i = 0;\r\n    while(i < 5){\r\n        let span = document.createElement(\"span\")\r\n        span.append(acorde.range+i)\r\n        divCasas.append(span)\r\n        i = i + 1;\r\n    }\r\n\r\n    let div = document.createElement(\"div\")\r\n    let openNoteContainer = document.createElement(\"div\")\r\n    openNoteContainer.classList.add(\"openNote-container\")\r\n\r\n    let braco = document.createElement(\"div\")\r\n    braco.classList.add(\"braco\")\r\n\r\n    acorde.notas.forEach((nota,i)=>{\r\n        let divOpen = document.createElement(\"div\")\r\n        divOpen.classList.add(\"openNote-holder\")\r\n        let span = document.createElement(\"span\")\r\n\r\n        if(nota.casa === 6){\r\n            span.classList.add(\"openNote-bola\",\"dis-block\")\r\n        }else if (nota.casa === undefined){\r\n            span.classList.add(\"openNote-span\")\r\n            span.append(\"X\")\r\n        }\r\n\r\n        divOpen.append(span)\r\n        openNoteContainer.append(divOpen)\r\n    })\r\n\r\n    displayTrastes(braco,true,acorde.notas)\r\n    div.append(braco)\r\n    div.append(openNoteContainer)\r\n    pai.append(divCasas,div);\r\n    \r\n\r\n}\r\n\r\nfunction removerAcorde(index){\r\n    let arrNovo = JSON.parse(localStorage.getItem(\"acordes\"))\r\n    arrNovo.splice(index,1)\r\n    console.log(arrNovo,\" \",index)\r\n    localStorage.setItem(\"acordes\",JSON.stringify(arrNovo))\r\n}","// index.ts\nimport { detect } from \"@tonaljs/chord-detect\";\nimport {\n  all as chordTypes,\n  get as getChordType\n} from \"@tonaljs/chord-type\";\nimport { isSubsetOf, isSupersetOf } from \"@tonaljs/pcset\";\nimport {\n  distance,\n  tonicIntervalsTransposer,\n  transpose as transposeNote\n} from \"@tonaljs/pitch-distance\";\nimport { note, tokenizeNote } from \"@tonaljs/pitch-note\";\nimport { all as scaleTypes } from \"@tonaljs/scale-type\";\nimport { detect as detect2 } from \"@tonaljs/chord-detect\";\nfunction deprecate(original, alternative, fn) {\n  return function(...args) {\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\nvar NoChord = {\n  empty: true,\n  name: \"\",\n  symbol: \"\",\n  root: \"\",\n  rootDegree: 0,\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  quality: \"Unknown\",\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nfunction tokenize(name) {\n  const [letter, acc, oct, type] = tokenizeNote(name);\n  if (letter === \"\") {\n    return [\"\", name];\n  }\n  if (letter === \"A\" && type === \"ug\") {\n    return [\"\", \"aug\"];\n  }\n  return [letter + acc, oct + type];\n}\nfunction get(src) {\n  if (src === \"\") {\n    return NoChord;\n  }\n  if (Array.isArray(src) && src.length === 2) {\n    return getChord(src[1], src[0]);\n  } else {\n    const [tonic, type] = tokenize(src);\n    const chord2 = getChord(type, tonic);\n    return chord2.empty ? getChord(src) : chord2;\n  }\n}\nfunction getChord(typeName, optionalTonic, optionalRoot) {\n  const type = getChordType(typeName);\n  const tonic = note(optionalTonic || \"\");\n  const root = note(optionalRoot || \"\");\n  if (type.empty || optionalTonic && tonic.empty || optionalRoot && root.empty) {\n    return NoChord;\n  }\n  const rootInterval = distance(tonic.pc, root.pc);\n  const rootDegree = type.intervals.indexOf(rootInterval) + 1;\n  if (!root.empty && !rootDegree) {\n    return NoChord;\n  }\n  const intervals = Array.from(type.intervals);\n  for (let i = 1; i < rootDegree; i++) {\n    const num = intervals[0][0];\n    const quality = intervals[0][1];\n    const newNum = parseInt(num, 10) + 7;\n    intervals.push(`${newNum}${quality}`);\n    intervals.shift();\n  }\n  const notes = tonic.empty ? [] : intervals.map((i) => transposeNote(tonic, i));\n  typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n  const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc}`;\n  const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"}`;\n  return {\n    ...type,\n    name,\n    symbol,\n    type: type.name,\n    root: root.name,\n    intervals,\n    rootDegree,\n    tonic: tonic.name,\n    notes\n  };\n}\nvar chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\nfunction transpose(chordName, interval) {\n  const [tonic, type] = tokenize(chordName);\n  if (!tonic) {\n    return chordName;\n  }\n  return transposeNote(tonic, interval) + type;\n}\nfunction chordScales(name) {\n  const s = get(name);\n  const isChordIncluded = isSupersetOf(s.chroma);\n  return scaleTypes().filter((scale) => isChordIncluded(scale.chroma)).map((scale) => scale.name);\n}\nfunction extended(chordName) {\n  const s = get(chordName);\n  const isSuperset = isSupersetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSuperset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction reduced(chordName) {\n  const s = get(chordName);\n  const isSubset = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSubset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction degrees(chordName) {\n  const { intervals, tonic } = get(chordName);\n  const transpose2 = tonicIntervalsTransposer(intervals, tonic);\n  return (degree) => degree ? transpose2(degree > 0 ? degree - 1 : degree) : \"\";\n}\nfunction steps(chordName) {\n  const { intervals, tonic } = get(chordName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\nvar chord_default = {\n  getChord,\n  get,\n  detect,\n  chordScales,\n  extended,\n  reduced,\n  tokenize,\n  transpose,\n  degrees,\n  steps,\n  // deprecate\n  chord\n};\nexport {\n  chord,\n  chordScales,\n  chord_default as default,\n  degrees,\n  deprecate,\n  detect2 as detect,\n  extended,\n  get,\n  getChord,\n  reduced,\n  steps,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","import { detect } from \"@tonaljs/chord-detect\";\nimport {\n  ChordType,\n  all as chordTypes,\n  get as getChordType,\n} from \"@tonaljs/chord-type\";\nimport { isSubsetOf, isSupersetOf } from \"@tonaljs/pcset\";\nimport {\n  distance,\n  tonicIntervalsTransposer,\n  transpose as transposeNote,\n} from \"@tonaljs/pitch-distance\";\nimport { NoteName, note, tokenizeNote } from \"@tonaljs/pitch-note\";\nimport { all as scaleTypes } from \"@tonaljs/scale-type\";\n\nexport { detect } from \"@tonaljs/chord-detect\";\n\nexport function deprecate<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>,\n>(original: string, alternative: string, fn: ResultFn) {\n  return function (this: unknown, ...args: unknown[]): ReturnType<ResultFn> {\n    // tslint:disable-next-line\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\n\ntype ChordName = string;\ntype ChordNameTokens = [string, string]; // [TONIC, SCALE TYPE]\n\nexport interface Chord extends ChordType {\n  tonic: string | null;\n  type: string;\n  root: string;\n  rootDegree: number;\n  symbol: string;\n  notes: NoteName[];\n}\n\nconst NoChord: Chord = {\n  empty: true,\n  name: \"\",\n  symbol: \"\",\n  root: \"\",\n  rootDegree: 0,\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  quality: \"Unknown\",\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: [],\n};\n\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\n// (see https://github.com/danigb/tonal/issues/55)\n//const NUM_TYPES = /^(6|64|7|9|11|13)$/;\n/**\n * Tokenize a chord name. It returns an array with the tonic and chord type\n * If not tonic is found, all the name is considered the chord name.\n *\n * This function does NOT check if the chord type exists or not. It only tries\n * to split the tonic and chord type.\n *\n * @function\n * @param {string} name - the chord name\n * @return {Array} an array with [tonic, type]\n * @example\n * tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\n * tokenize(\"C7\") // => [ \"C\", \"7\" ]\n * tokenize(\"mMaj7\") // => [ null, \"mMaj7\" ]\n * tokenize(\"Cnonsense\") // => [ null, \"nonsense\" ]\n */\nexport function tokenize(name: string): ChordNameTokens {\n  const [letter, acc, oct, type] = tokenizeNote(name);\n  if (letter === \"\") {\n    return [\"\", name];\n  }\n  // aug is augmented (see https://github.com/danigb/tonal/issues/55)\n  if (letter === \"A\" && type === \"ug\") {\n    return [\"\", \"aug\"];\n  }\n  return [letter + acc, oct + type];\n}\n\n/**\n * Get a Chord from a chord name.\n */\nexport function get(src: ChordName | ChordNameTokens): Chord {\n  if (src === \"\") {\n    return NoChord;\n  }\n  if (Array.isArray(src) && src.length === 2) {\n    return getChord(src[1], src[0]);\n  } else {\n    const [tonic, type] = tokenize(src);\n    const chord = getChord(type, tonic);\n    return chord.empty ? getChord(src) : chord;\n  }\n}\n\n/**\n * Get chord properties\n *\n * @param typeName - the chord type name\n * @param [tonic] - Optional tonic\n * @param [root]  - Optional root (requires a tonic)\n */\nexport function getChord(\n  typeName: string,\n  optionalTonic?: string,\n  optionalRoot?: string,\n): Chord {\n  const type = getChordType(typeName);\n  const tonic = note(optionalTonic || \"\");\n  const root = note(optionalRoot || \"\");\n\n  if (\n    type.empty ||\n    (optionalTonic && tonic.empty) ||\n    (optionalRoot && root.empty)\n  ) {\n    return NoChord;\n  }\n\n  const rootInterval = distance(tonic.pc, root.pc);\n  const rootDegree = type.intervals.indexOf(rootInterval) + 1;\n  if (!root.empty && !rootDegree) {\n    return NoChord;\n  }\n\n  const intervals = Array.from(type.intervals);\n\n  for (let i = 1; i < rootDegree; i++) {\n    const num = intervals[0][0];\n    const quality = intervals[0][1];\n    const newNum = parseInt(num, 10) + 7;\n    intervals.push(`${newNum}${quality}`);\n    intervals.shift();\n  }\n\n  const notes = tonic.empty\n    ? []\n    : intervals.map((i) => transposeNote(tonic, i));\n\n  typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n  const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${\n    root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc\n  }`;\n  const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${\n    rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"\n  }`;\n  return {\n    ...type,\n    name,\n    symbol,\n    type: type.name,\n    root: root.name,\n    intervals,\n    rootDegree,\n    tonic: tonic.name,\n    notes,\n  };\n}\n\nexport const chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\n\n/**\n * Transpose a chord name\n *\n * @param {string} chordName - the chord name\n * @return {string} the transposed chord\n *\n * @example\n * transpose('Dm7', 'P4') // => 'Gm7\n */\nexport function transpose(chordName: string, interval: string): string {\n  const [tonic, type] = tokenize(chordName);\n  if (!tonic) {\n    return chordName;\n  }\n  return transposeNote(tonic, interval) + type;\n}\n\n/**\n * Get all scales where the given chord fits\n *\n * @example\n * chordScales('C7b9')\n * // => [\"phrygian dominant\", \"flamenco\", \"spanish heptatonic\", \"half-whole diminished\", \"chromatic\"]\n */\nexport function chordScales(name: string): string[] {\n  const s = get(name);\n  const isChordIncluded = isSupersetOf(s.chroma);\n  return scaleTypes()\n    .filter((scale) => isChordIncluded(scale.chroma))\n    .map((scale) => scale.name);\n}\n/**\n * Get all chords names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @example\n * extended(\"CMaj7\")\n * // => [ 'Cmaj#4', 'Cmaj7#9#11', 'Cmaj9', 'CM7add13', 'Cmaj13', 'Cmaj9#11', 'CM13#11', 'CM7b9' ]\n */\nexport function extended(chordName: string): string[] {\n  const s = get(chordName);\n  const isSuperset = isSupersetOf(s.chroma);\n  return chordTypes()\n    .filter((chord) => isSuperset(chord.chroma))\n    .map((chord) => s.tonic + chord.aliases[0]);\n}\n\n/**\n * Find all chords names that are a subset of the given one\n * (has less notes but all from the given chord)\n *\n * @example\n */\nexport function reduced(chordName: string): string[] {\n  const s = get(chordName);\n  const isSubset = isSubsetOf(s.chroma);\n  return chordTypes()\n    .filter((chord) => isSubset(chord.chroma))\n    .map((chord) => s.tonic + chord.aliases[0]);\n}\n\n/**\n * Returns a function to get a note name from the scale degree.\n *\n * @example\n * [1, 2, 3, 4].map(Chord.degrees(\"C\")) => [\"C\", \"E\", \"G\", \"C\"]\n * [1, 2, 3, 4].map(Chord.degrees(\"C4\")) => [\"C4\", \"E4\", \"G4\", \"C5\"]\n */\nexport function degrees(chordName: string | ChordNameTokens) {\n  const { intervals, tonic } = get(chordName);\n  const transpose = tonicIntervalsTransposer(intervals, tonic);\n  return (degree: number) =>\n    degree ? transpose(degree > 0 ? degree - 1 : degree) : \"\";\n}\n\n/**\n * Sames as `degree` but with 0-based index\n */\nexport function steps(chordName: string | ChordNameTokens) {\n  const { intervals, tonic } = get(chordName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\n\nexport default {\n  getChord,\n  get,\n  detect,\n  chordScales,\n  extended,\n  reduced,\n  tokenize,\n  transpose,\n  degrees,\n  steps,\n\n  // deprecate\n  chord,\n};\n","// index.ts\nimport { all } from \"@tonaljs/chord-type\";\nimport { note } from \"@tonaljs/core\";\nimport { modes } from \"@tonaljs/pcset\";\nvar namedSet = (notes) => {\n  const pcToName = notes.reduce((record, n) => {\n    const chroma = note(n).chroma;\n    if (chroma !== void 0) {\n      record[chroma] = record[chroma] || note(n).name;\n    }\n    return record;\n  }, {});\n  return (chroma) => pcToName[chroma];\n};\nfunction detect(source, options = {}) {\n  const notes = source.map((n) => note(n).pc).filter((x) => x);\n  if (note.length === 0) {\n    return [];\n  }\n  const found = findMatches(notes, 1, options);\n  return found.filter((chord) => chord.weight).sort((a, b) => b.weight - a.weight).map((chord) => chord.name);\n}\nvar BITMASK = {\n  // 3m 000100000000\n  // 3M 000010000000\n  anyThirds: 384,\n  // 5P 000000010000\n  perfectFifth: 16,\n  // 5d 000000100000\n  // 5A 000000001000\n  nonPerfectFifths: 40,\n  anySeventh: 3\n};\nvar testChromaNumber = (bitmask) => (chromaNumber) => Boolean(chromaNumber & bitmask);\nvar hasAnyThird = testChromaNumber(BITMASK.anyThirds);\nvar hasPerfectFifth = testChromaNumber(BITMASK.perfectFifth);\nvar hasAnySeventh = testChromaNumber(BITMASK.anySeventh);\nvar hasNonPerfectFifth = testChromaNumber(BITMASK.nonPerfectFifths);\nfunction hasAnyThirdAndPerfectFifthAndAnySeventh(chordType) {\n  const chromaNumber = parseInt(chordType.chroma, 2);\n  return hasAnyThird(chromaNumber) && hasPerfectFifth(chromaNumber) && hasAnySeventh(chromaNumber);\n}\nfunction withPerfectFifth(chroma) {\n  const chromaNumber = parseInt(chroma, 2);\n  return hasNonPerfectFifth(chromaNumber) ? chroma : (chromaNumber | 16).toString(2);\n}\nfunction findMatches(notes, weight, options) {\n  const tonic = notes[0];\n  const tonicChroma = note(tonic).chroma;\n  const noteName = namedSet(notes);\n  const allModes = modes(notes, false);\n  const found = [];\n  allModes.forEach((mode, index) => {\n    const modeWithPerfectFifth = options.assumePerfectFifth && withPerfectFifth(mode);\n    const chordTypes = all().filter((chordType) => {\n      if (options.assumePerfectFifth && hasAnyThirdAndPerfectFifthAndAnySeventh(chordType)) {\n        return chordType.chroma === modeWithPerfectFifth;\n      }\n      return chordType.chroma === mode;\n    });\n    chordTypes.forEach((chordType) => {\n      const chordName = chordType.aliases[0];\n      const baseNote = noteName(index);\n      const isInversion = index !== tonicChroma;\n      if (isInversion) {\n        found.push({\n          weight: 0.5 * weight,\n          name: `${baseNote}${chordName}/${tonic}`\n        });\n      } else {\n        found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\n      }\n    });\n  });\n  return found;\n}\nvar chord_detect_default = { detect };\nexport {\n  chord_detect_default as default,\n  detect\n};\n//# sourceMappingURL=index.mjs.map","import { all, ChordType } from \"@tonaljs/chord-type\";\nimport { note } from \"@tonaljs/core\";\nimport { modes } from \"@tonaljs/pcset\";\n\ninterface FoundChord {\n  readonly weight: number;\n  readonly name: string;\n}\n\nconst namedSet = (notes: string[]) => {\n  const pcToName = notes.reduce<Record<number, string>>((record, n) => {\n    const chroma = note(n).chroma;\n    if (chroma !== undefined) {\n      record[chroma] = record[chroma] || note(n).name;\n    }\n    return record;\n  }, {});\n\n  return (chroma: number) => pcToName[chroma];\n};\n\ntype DetectOptions = {\n  assumePerfectFifth: boolean;\n};\nexport function detect(\n  source: string[],\n  options: Partial<DetectOptions> = {},\n): string[] {\n  const notes = source.map((n) => note(n).pc).filter((x) => x);\n  if (note.length === 0) {\n    return [];\n  }\n\n  const found: FoundChord[] = findMatches(notes, 1, options);\n\n  return found\n    .filter((chord) => chord.weight)\n    .sort((a, b) => b.weight - a.weight)\n    .map((chord) => chord.name);\n}\n\n/* tslint:disable:no-bitwise */\nconst BITMASK = {\n  // 3m 000100000000\n  // 3M 000010000000\n  anyThirds: 384,\n  // 5P 000000010000\n  perfectFifth: 16,\n  // 5d 000000100000\n  // 5A 000000001000\n  nonPerfectFifths: 40,\n  anySeventh: 3,\n};\n\nconst testChromaNumber = (bitmask: number) => (chromaNumber: number) =>\n  Boolean(chromaNumber & bitmask);\nconst hasAnyThird = testChromaNumber(BITMASK.anyThirds);\nconst hasPerfectFifth = testChromaNumber(BITMASK.perfectFifth);\nconst hasAnySeventh = testChromaNumber(BITMASK.anySeventh);\nconst hasNonPerfectFifth = testChromaNumber(BITMASK.nonPerfectFifths);\n\nfunction hasAnyThirdAndPerfectFifthAndAnySeventh(chordType: ChordType) {\n  const chromaNumber = parseInt(chordType.chroma, 2);\n  return (\n    hasAnyThird(chromaNumber) &&\n    hasPerfectFifth(chromaNumber) &&\n    hasAnySeventh(chromaNumber)\n  );\n}\n\nfunction withPerfectFifth(chroma: string): string {\n  const chromaNumber = parseInt(chroma, 2);\n  return hasNonPerfectFifth(chromaNumber)\n    ? chroma\n    : (chromaNumber | 16).toString(2);\n}\n\n/* tslint:enable:no-bitwise */\n\ntype FindMatchesOptions = {\n  assumePerfectFifth: boolean;\n};\nfunction findMatches(\n  notes: string[],\n  weight: number,\n  options: Partial<FindMatchesOptions>,\n): FoundChord[] {\n  const tonic = notes[0];\n  const tonicChroma = note(tonic).chroma;\n  const noteName = namedSet(notes);\n  // we need to test all chromas to get the correct baseNote\n  const allModes = modes(notes, false);\n\n  const found: FoundChord[] = [];\n  allModes.forEach((mode, index) => {\n    const modeWithPerfectFifth =\n      options.assumePerfectFifth && withPerfectFifth(mode);\n    // some chords could have the same chroma but different interval spelling\n    const chordTypes = all().filter((chordType) => {\n      if (\n        options.assumePerfectFifth &&\n        hasAnyThirdAndPerfectFifthAndAnySeventh(chordType)\n      ) {\n        return chordType.chroma === modeWithPerfectFifth;\n      }\n      return chordType.chroma === mode;\n    });\n\n    chordTypes.forEach((chordType) => {\n      const chordName = chordType.aliases[0];\n      const baseNote = noteName(index);\n      const isInversion = index !== tonicChroma;\n      if (isInversion) {\n        found.push({\n          weight: 0.5 * weight,\n          name: `${baseNote}${chordName}/${tonic}`,\n        });\n      } else {\n        found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\n      }\n    });\n  });\n\n  return found;\n}\n\nexport default { detect };\n","// index.ts\nimport { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar CHORDS = [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 \\u0394 ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 \\u03949 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth added ninth\", \"6add9 6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 \\u0394#4 \\u0394#11 M7#11 ^7#11 maj7#11\"\n  ],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\\u03947 m\\u0394 -^7 -maj7\"\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim \\xB0 o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 \\xB07 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 \\xF8 -7b5 h7 h\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\"\n  ],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 \\u03949#11 ^9#11\"\n  ],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"]\n];\nvar data_default = CHORDS;\n\n// index.ts\nvar NoChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction get(type) {\n  return index[type] || NoChordType;\n}\nvar chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\nfunction names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\nfunction symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\nfunction keys() {\n  return Object.keys(index);\n}\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, aliases, fullName) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\nfunction addAlias(chord, alias) {\n  index[alias] = chord;\n}\nfunction getQuality(intervals) {\n  const has = (interval) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\") ? \"Augmented\" : has(\"3M\") ? \"Major\" : has(\"5d\") ? \"Diminished\" : has(\"3m\") ? \"Minor\" : \"Unknown\";\n}\ndata_default.forEach(\n  ([ivls, fullName, names2]) => add(ivls.split(\" \"), names2.split(\" \"), fullName)\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\nvar chord_type_default = {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  chordType\n};\nexport {\n  add,\n  addAlias,\n  all,\n  chordType,\n  chord_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  symbols\n};\n//# sourceMappingURL=index.mjs.map","import { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset,\n  Pcset,\n  PcsetChroma,\n  PcsetNum,\n} from \"@tonaljs/pcset\";\nimport data from \"./data\";\n\nexport type ChordQuality =\n  | \"Major\"\n  | \"Minor\"\n  | \"Augmented\"\n  | \"Diminished\"\n  | \"Unknown\";\n\nexport interface ChordType extends Pcset {\n  name: string;\n  quality: ChordQuality;\n  aliases: string[];\n}\nconst NoChordType: ChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: [],\n};\n\ntype ChordTypeName = string | PcsetChroma | PcsetNum;\n\nlet dictionary: ChordType[] = [];\nlet index: Record<ChordTypeName, ChordType> = {};\n\n/**\n * Given a chord name or chroma, return the chord properties\n * @param {string} source - chord name or pitch class set chroma\n * @example\n * import { get } from 'tonaljs/chord-type'\n * get('major') // => { name: 'major', ... }\n */\nexport function get(type: ChordTypeName): ChordType {\n  return index[type] || NoChordType;\n}\n\nexport const chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\n\n/**\n * Get all chord (long) names\n */\nexport function names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\n\n/**\n * Get all chord symbols\n */\nexport function symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\n\n/**\n * Keys used to reference chord types\n */\nexport function keys() {\n  return Object.keys(index);\n}\n\n/**\n * Return a list of all chord types\n */\nexport function all(): ChordType[] {\n  return dictionary.slice();\n}\n\nexport const entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\n\n/**\n * Clear the dictionary\n */\nexport function removeAll() {\n  dictionary = [];\n  index = {};\n}\n\n/**\n * Add a chord to the dictionary.\n * @param intervals\n * @param aliases\n * @param [fullName]\n */\nexport function add(intervals: string[], aliases: string[], fullName?: string) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases,\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\n\nexport function addAlias(chord: ChordType, alias: string) {\n  index[alias] = chord;\n}\n\nfunction getQuality(intervals: string[]): ChordQuality {\n  const has = (interval: string) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\")\n    ? \"Augmented\"\n    : has(\"3M\")\n      ? \"Major\"\n      : has(\"5d\")\n        ? \"Diminished\"\n        : has(\"3m\")\n          ? \"Minor\"\n          : \"Unknown\";\n}\n\ndata.forEach(([ivls, fullName, names]: string[]) =>\n  add(ivls.split(\" \"), names.split(\" \"), fullName),\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\n\nexport default {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  chordType,\n};\n","/**\n * @private\n * Chord List\n * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\n * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\n */\nconst CHORDS: string[][] = [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth added ninth\", \"6add9 6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11\",\n  ],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7 -maj7\",\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø -7b5 h7 h\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\",\n  ],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 Δ9#11 ^9#11\",\n  ],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\n];\n\nexport default CHORDS;\n","// index.ts\nimport { isNamedPitch } from \"@tonaljs/pitch\";\nexport * from \"@tonaljs/pitch\";\nexport * from \"@tonaljs/pitch-distance\";\nexport * from \"@tonaljs/pitch-interval\";\nexport * from \"@tonaljs/pitch-note\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nfunction deprecate(original, alternative, fn) {\n  return function(...args) {\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\nvar isNamed = deprecate(\"isNamed\", \"isNamedPitch\", isNamedPitch);\nexport {\n  deprecate,\n  fillStr,\n  isNamed\n};\n//# sourceMappingURL=index.mjs.map","import { isNamedPitch } from \"@tonaljs/pitch\";\n\nexport * from \"@tonaljs/pitch\";\nexport * from \"@tonaljs/pitch-distance\";\nexport * from \"@tonaljs/pitch-interval\";\nexport * from \"@tonaljs/pitch-note\";\n\nexport const fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport function deprecate<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>,\n>(original: string, alternative: string, fn: ResultFn) {\n  return function (this: unknown, ...args: unknown[]): ReturnType<ResultFn> {\n    // tslint:disable-next-line\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\n\nexport const isNamed = deprecate(\"isNamed\", \"isNamedPitch\", isNamedPitch);\n","// index.ts\nfunction isNamedPitch(src) {\n  return src !== null && typeof src === \"object\" && \"name\" in src && typeof src.name === \"string\" ? true : false;\n}\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar chroma = ({ step, alt }) => (SIZES[step] + alt + 120) % 12;\nvar height = ({ step, alt, oct, dir = 1 }) => dir * (SIZES[step] + alt + 12 * (oct === void 0 ? -100 : oct));\nvar midi = (pitch2) => {\n  const h = height(pitch2);\n  return pitch2.oct !== void 0 && h >= -12 && h <= 115 ? h + 12 : null;\n};\nfunction isPitch(pitch2) {\n  return pitch2 !== null && typeof pitch2 === \"object\" && \"step\" in pitch2 && typeof pitch2.step === \"number\" && \"alt\" in pitch2 && typeof pitch2.alt === \"number\" ? true : false;\n}\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\nvar STEPS_TO_OCTS = FIFTHS.map(\n  (fifths) => Math.floor(fifths * 7 / 12)\n);\nfunction coordinates(pitch2) {\n  const { step, alt, oct, dir = 1 } = pitch2;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === void 0) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\nvar FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\nfunction pitch(coord) {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === void 0) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\nfunction unaltered(f) {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\nexport {\n  chroma,\n  coordinates,\n  height,\n  isNamedPitch,\n  isPitch,\n  midi,\n  pitch\n};\n//# sourceMappingURL=index.mjs.map","export interface NamedPitch {\n  readonly name: string;\n}\n\n/*** @deprecated use NamedPitch */\nexport interface Named {\n  readonly name: string;\n}\n\nexport interface NotFound extends NamedPitch {\n  readonly empty: true;\n  readonly name: \"\";\n}\n\nexport function isNamedPitch(src: unknown): src is NamedPitch {\n  return src !== null &&\n    typeof src === \"object\" &&\n    \"name\" in src &&\n    typeof src.name === \"string\"\n    ? true\n    : false;\n}\n\ntype Fifths = number;\ntype Octaves = number;\nexport type Direction = 1 | -1;\n\nexport type PitchClassCoordinates = [Fifths];\nexport type NoteCoordinates = [Fifths, Octaves];\nexport type IntervalCoordinates = [Fifths, Octaves, Direction];\nexport type PitchCoordinates =\n  | PitchClassCoordinates\n  | NoteCoordinates\n  | IntervalCoordinates;\n\n/**\n * Pitch properties\n *\n * - {number} step - The step number: 0 = C, 1 = D, ... 6 = B\n * - {number} alt - Number of alterations: -2 = 'bb', -1 = 'b', 0 = '', 1 = '#', ...\n * - {number} [oct] = The octave (undefined when is a coord class)\n * - {number} [dir] = Interval direction (undefined when is not an interval)\n */\nexport interface Pitch {\n  readonly step: number;\n  readonly alt: number;\n  readonly oct?: number; // undefined for pitch classes\n  readonly dir?: Direction; // undefined for notes\n}\n\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\nexport const chroma = ({ step, alt }: Pitch) => (SIZES[step] + alt + 120) % 12;\n\nexport const height = ({ step, alt, oct, dir = 1 }: Pitch) =>\n  dir * (SIZES[step] + alt + 12 * (oct === undefined ? -100 : oct));\n\nexport const midi = (pitch: Pitch) => {\n  const h = height(pitch);\n  return pitch.oct !== undefined && h >= -12 && h <= 115 ? h + 12 : null;\n};\n\nexport function isPitch(pitch: unknown): pitch is Pitch {\n  return pitch !== null &&\n    typeof pitch === \"object\" &&\n    \"step\" in pitch &&\n    typeof pitch.step === \"number\" &&\n    \"alt\" in pitch &&\n    typeof pitch.alt === \"number\"\n    ? true\n    : false;\n}\n\n// The number of fifths of [C, D, E, F, G, A, B]\nconst FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n// The number of octaves it span each step\nconst STEPS_TO_OCTS = FIFTHS.map((fifths: number) =>\n  Math.floor((fifths * 7) / 12),\n);\n\n/**\n * Get coordinates from pitch object\n */\nexport function coordinates(pitch: Pitch): PitchCoordinates {\n  const { step, alt, oct, dir = 1 } = pitch;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === undefined) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nconst FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\n\n/**\n * Get pitch from coordinate objects\n */\nexport function pitch(coord: PitchCoordinates): Pitch {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === undefined) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f: number): number {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n","// index.ts\nimport {\n  interval as asInterval,\n  coordToInterval\n} from \"@tonaljs/pitch-interval\";\nimport {\n  note as asNote,\n  coordToNote\n} from \"@tonaljs/pitch-note\";\nfunction transpose(noteName, intervalName) {\n  const note = asNote(noteName);\n  const intervalCoord = Array.isArray(intervalName) ? intervalName : asInterval(intervalName).coord;\n  if (note.empty || !intervalCoord || intervalCoord.length < 2) {\n    return \"\";\n  }\n  const noteCoord = note.coord;\n  const tr = noteCoord.length === 1 ? [noteCoord[0] + intervalCoord[0]] : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\nfunction tonicIntervalsTransposer(intervals, tonic) {\n  const len = intervals.length;\n  return (normalized) => {\n    if (!tonic)\n      return \"\";\n    const index = normalized < 0 ? (len - -normalized % len) % len : normalized % len;\n    const octaves = Math.floor(normalized / len);\n    const root = transpose(tonic, [0, octaves]);\n    return transpose(root, intervals[index]);\n  };\n}\nfunction distance(fromNote, toNote) {\n  const from = asNote(fromNote);\n  const to = asNote(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs = fcoord.length === 2 && tcoord.length === 2 ? tcoord[1] - fcoord[1] : -Math.floor(fifths * 7 / 12);\n  const forceDescending = to.height === from.height && to.midi !== null && from.midi !== null && from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\nexport {\n  distance,\n  tonicIntervalsTransposer,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","import { PitchCoordinates } from \"@tonaljs/pitch\";\nimport {\n  IntervalLiteral,\n  IntervalName,\n  interval as asInterval,\n  coordToInterval,\n} from \"@tonaljs/pitch-interval\";\nimport {\n  NoteLiteral,\n  NoteName,\n  note as asNote,\n  coordToNote,\n} from \"@tonaljs/pitch-note\";\n\n/**\n * Transpose a note by an interval.\n *\n * @param {string} note - the note or note name\n * @param {string} interval - the interval or interval name\n * @return {string} the transposed note name or empty string if not valid notes\n * @example\n * import { transpose } from \"@tonaljs/core\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * transpose(\"D\", \"3M\") // => \"F#\"\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(pc => transpose(pc, \"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nexport function transpose(\n  noteName: NoteLiteral,\n  intervalName: IntervalLiteral | [number, number],\n): NoteName {\n  const note = asNote(noteName);\n  const intervalCoord = Array.isArray(intervalName)\n    ? intervalName\n    : asInterval(intervalName).coord;\n  if (note.empty || !intervalCoord || intervalCoord.length < 2) {\n    return \"\";\n  }\n  const noteCoord = note.coord;\n  const tr: PitchCoordinates =\n    noteCoord.length === 1\n      ? [noteCoord[0] + intervalCoord[0]]\n      : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\n\n// Private\nexport function tonicIntervalsTransposer(\n  intervals: string[],\n  tonic: string | undefined | null,\n) {\n  const len = intervals.length;\n  return (normalized: number) => {\n    if (!tonic) return \"\";\n    const index =\n      normalized < 0 ? (len - (-normalized % len)) % len : normalized % len;\n    const octaves = Math.floor(normalized / len);\n    const root = transpose(tonic, [0, octaves]);\n    return transpose(root, intervals[index]);\n  };\n}\n\n/**\n * Find the interval distance between two notes or coord classes.\n *\n * To find distance between coord classes, both notes must be coord classes and\n * the interval is always ascending\n *\n * @param {Note|string} from - the note or note name to calculate distance from\n * @param {Note|string} to - the note or note name to calculate distance to\n * @return {string} the interval name or empty string if not valid notes\n *\n */\nexport function distance(\n  fromNote: NoteLiteral,\n  toNote: NoteLiteral,\n): IntervalName {\n  const from = asNote(fromNote);\n  const to = asNote(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs =\n    fcoord.length === 2 && tcoord.length === 2\n      ? tcoord[1] - fcoord[1]\n      : -Math.floor((fifths * 7) / 12);\n\n  // If it's unison and not pitch class, it can be descending interval (#243)\n  const forceDescending =\n    to.height === from.height &&\n    to.midi !== null &&\n    from.midi !== null &&\n    from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\n","// index.ts\nimport {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  pitch\n} from \"@tonaljs/pitch\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nvar NoInterval = { empty: true, name: \"\", acc: \"\" };\nvar INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\nvar INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar REGEX = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\"\n);\nfunction tokenizeInterval(str) {\n  const m = REGEX.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\nvar cache = {};\nfunction interval(src) {\n  return typeof src === \"string\" ? cache[src] || (cache[src] = parse(src)) : isPitch(src) ? interval(pitchName(src)) : isNamedPitch(src) ? interval(src.name) : NoInterval;\n}\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar TYPES = \"PMMPPMM\";\nfunction parse(str) {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1];\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (dir * (SIZES[step] + alt) % 12 + 12) % 12;\n  const coord = coordinates({ step, alt, oct, dir });\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct\n  };\n}\nfunction coordToInterval(coord, forceDescending) {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl = forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(pitch(ivl));\n}\nfunction qToAlt(type, q) {\n  return q === \"M\" && type === \"majorable\" || q === \"P\" && type === \"perfectable\" ? 0 : q === \"m\" && type === \"majorable\" ? -1 : /^A+$/.test(q) ? q.length : /^d+$/.test(q) ? -1 * (type === \"perfectable\" ? q.length : q.length + 1) : 0;\n}\nfunction pitchName(props) {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\nfunction altToQ(type, alt) {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt);\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\n  }\n}\nexport {\n  coordToInterval,\n  interval,\n  tokenizeInterval\n};\n//# sourceMappingURL=index.mjs.map","import {\n  coordinates,\n  Direction,\n  IntervalCoordinates,\n  isNamedPitch,\n  isPitch,\n  NamedPitch,\n  Pitch,\n  pitch,\n  PitchCoordinates,\n} from \"@tonaljs/pitch\";\n\nconst fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport type IntervalName = string;\nexport type IntervalLiteral = IntervalName | Pitch | NamedPitch;\n\ntype Quality =\n  | \"dddd\"\n  | \"ddd\"\n  | \"dd\"\n  | \"d\"\n  | \"m\"\n  | \"M\"\n  | \"P\"\n  | \"A\"\n  | \"AA\"\n  | \"AAA\"\n  | \"AAAA\";\ntype Type = \"perfectable\" | \"majorable\";\n\nexport interface Interval extends Pitch, NamedPitch {\n  readonly empty: boolean;\n  readonly name: IntervalName;\n  readonly num: number;\n  readonly q: Quality;\n  readonly type: Type;\n  readonly step: number;\n  readonly alt: number;\n  readonly dir: Direction;\n  readonly simple: number;\n  readonly semitones: number;\n  readonly chroma: number;\n  readonly coord: IntervalCoordinates;\n  readonly oct: number;\n}\n\nexport interface NoInterval extends Partial<Interval> {\n  readonly empty: true;\n  readonly name: \"\";\n  readonly acc: \"\";\n}\n\nconst NoInterval: NoInterval = { empty: true, name: \"\", acc: \"\" };\n\n// shorthand tonal notation (with quality after number)\nconst INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\n// standard shorthand notation (with quality before number)\nconst INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nconst REGEX = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\",\n);\n\ntype IntervalTokens = [string, string];\n\n/**\n * @private\n */\nexport function tokenizeInterval(str?: IntervalName): IntervalTokens {\n  const m = REGEX.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\n\nconst cache: { [key in string]: Interval | NoInterval } = {};\n\n/**\n * Get interval properties. It returns an object with:\n *\n * - name: the interval name\n * - num: the interval number\n * - type: 'perfectable' or 'majorable'\n * - q: the interval quality (d, m, M, A)\n * - dir: interval direction (1 ascending, -1 descending)\n * - simple: the simplified number\n * - semitones: the size in semitones\n * - chroma: the interval chroma\n *\n * @param {string} interval - the interval name\n * @return {Object} the interval properties\n *\n * @example\n * import { interval } from '@tonaljs/core'\n * interval('P5').semitones // => 7\n * interval('m3').type // => 'majorable'\n */\nexport function interval(src: IntervalLiteral): Interval | NoInterval {\n  return typeof src === \"string\"\n    ? cache[src] || (cache[src] = parse(src))\n    : isPitch(src)\n      ? interval(pitchName(src))\n      : isNamedPitch(src)\n        ? interval(src.name)\n        : NoInterval;\n}\n\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\nconst TYPES = \"PMMPPMM\";\nfunction parse(str?: string): Interval | NoInterval {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1] as Quality;\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (((dir * (SIZES[step] + alt)) % 12) + 12) % 12;\n  const coord = coordinates({ step, alt, oct, dir }) as IntervalCoordinates;\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct,\n  };\n}\n\n/**\n * @private\n *\n * forceDescending is used in the case of unison (#243)\n */\nexport function coordToInterval(\n  coord: PitchCoordinates,\n  forceDescending?: boolean,\n): Interval {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl: IntervalCoordinates =\n    forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(pitch(ivl)) as Interval;\n}\n\nfunction qToAlt(type: Type, q: string): number {\n  return (q === \"M\" && type === \"majorable\") ||\n    (q === \"P\" && type === \"perfectable\")\n    ? 0\n    : q === \"m\" && type === \"majorable\"\n      ? -1\n      : /^A+$/.test(q)\n        ? q.length\n        : /^d+$/.test(q)\n          ? -1 * (type === \"perfectable\" ? q.length : q.length + 1)\n          : 0;\n}\n\n// return the interval name of a pitch\nfunction pitchName(props: Pitch): string {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  // this is an edge case: descending pitch class unison (see #243)\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\n\nfunction altToQ(type: Type, alt: number): Quality {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt) as Quality;\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1) as Quality;\n  }\n}\n","// index.ts\nimport {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  pitch\n} from \"@tonaljs/pitch\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nvar NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\nvar cache = /* @__PURE__ */ new Map();\nvar stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nvar altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nvar accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const stringSrc = JSON.stringify(src);\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse(src) : isPitch(src) ? note(pitchName(src)) : isNamedPitch(src) ? note(src.name) : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m = REGEX.exec(str);\n  return m ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]] : [\"\", \"\", \"\", \"\"];\n}\nfunction coordToNote(noteCoord) {\n  return note(pitch(noteCoord));\n}\nvar mod = (n, m) => (n % m + m) % m;\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = coordinates({ step, alt, oct });\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\nexport {\n  accToAlt,\n  altToAcc,\n  coordToNote,\n  note,\n  stepToLetter,\n  tokenizeNote\n};\n//# sourceMappingURL=index.mjs.map","import {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  NamedPitch,\n  Pitch,\n  pitch,\n  PitchCoordinates,\n} from \"@tonaljs/pitch\";\n\nconst fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport type NoteWithOctave = string;\nexport type PcName = string;\nexport type NoteName = NoteWithOctave | PcName;\nexport type NoteLiteral = NoteName | Pitch | NamedPitch;\n\nexport interface Note extends Pitch, NamedPitch {\n  readonly empty: boolean;\n  readonly name: NoteName;\n  readonly letter: string;\n  readonly acc: string;\n  readonly pc: PcName;\n  readonly chroma: number;\n  readonly height: number;\n  readonly coord: PitchCoordinates;\n  readonly midi: number | null;\n  readonly freq: number | null;\n}\n\nexport interface NoNote extends Partial<Note> {\n  empty: true;\n  name: \"\";\n  pc: \"\";\n  acc: \"\";\n}\nconst NoNote: NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\n\nconst cache: Map<NoteLiteral | undefined, Note | NoNote> = new Map();\n\nexport const stepToLetter = (step: number) => \"CDEFGAB\".charAt(step);\nexport const altToAcc = (alt: number): string =>\n  alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nexport const accToAlt = (acc: string): number =>\n  acc[0] === \"b\" ? -acc.length : acc.length;\n\n/**\n * Given a note literal (a note name or a note object), returns the Note object\n * @example\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\n */\nexport function note(src: NoteLiteral): Note | NoNote {\n  const stringSrc = JSON.stringify(src);\n\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n\n  const value =\n    typeof src === \"string\"\n      ? parse(src)\n      : isPitch(src)\n        ? note(pitchName(src))\n        : isNamedPitch(src)\n          ? note(src.name)\n          : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\n\ntype NoteTokens = [string, string, string, string];\n\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * @private\n */\nexport function tokenizeNote(str: string): NoteTokens {\n  const m = REGEX.exec(str) as string[];\n  return m\n    ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]]\n    : [\"\", \"\", \"\", \"\"];\n}\n\n/**\n * @private\n */\nexport function coordToNote(noteCoord: PitchCoordinates): Note {\n  return note(pitch(noteCoord)) as Note;\n}\n\nconst mod = (n: number, m: number) => ((n % m) + m) % m;\n\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName: NoteName): Note | NoNote {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : undefined;\n  const coord = coordinates({ step, alt, oct });\n\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height =\n    oct === undefined\n      ? mod(SEMI[step] + alt, 12) - 12 * 99\n      : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\n\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step,\n  };\n}\n\nfunction pitchName(props: Pitch): NoteName {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n","// index.ts\nimport {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  pitch\n} from \"@tonaljs/pitch\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nvar NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\nvar cache = /* @__PURE__ */ new Map();\nvar stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nvar altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nvar accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const stringSrc = JSON.stringify(src);\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse(src) : isPitch(src) ? note(pitchName(src)) : isNamedPitch(src) ? note(src.name) : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m = REGEX.exec(str);\n  return m ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]] : [\"\", \"\", \"\", \"\"];\n}\nfunction coordToNote(noteCoord) {\n  return note(pitch(noteCoord));\n}\nvar mod = (n, m) => (n % m + m) % m;\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = coordinates({ step, alt, oct });\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\nexport {\n  accToAlt,\n  altToAcc,\n  coordToNote,\n  note,\n  stepToLetter,\n  tokenizeNote\n};\n//# sourceMappingURL=index.mjs.map","import {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  NamedPitch,\n  Pitch,\n  pitch,\n  PitchCoordinates,\n} from \"@tonaljs/pitch\";\n\nconst fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport type NoteWithOctave = string;\nexport type PcName = string;\nexport type NoteName = NoteWithOctave | PcName;\nexport type NoteLiteral = NoteName | Pitch | NamedPitch;\n\nexport interface Note extends Pitch, NamedPitch {\n  readonly empty: boolean;\n  readonly name: NoteName;\n  readonly letter: string;\n  readonly acc: string;\n  readonly pc: PcName;\n  readonly chroma: number;\n  readonly height: number;\n  readonly coord: PitchCoordinates;\n  readonly midi: number | null;\n  readonly freq: number | null;\n}\n\nexport interface NoNote extends Partial<Note> {\n  empty: true;\n  name: \"\";\n  pc: \"\";\n  acc: \"\";\n}\nconst NoNote: NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\n\nconst cache: Map<NoteLiteral | undefined, Note | NoNote> = new Map();\n\nexport const stepToLetter = (step: number) => \"CDEFGAB\".charAt(step);\nexport const altToAcc = (alt: number): string =>\n  alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nexport const accToAlt = (acc: string): number =>\n  acc[0] === \"b\" ? -acc.length : acc.length;\n\n/**\n * Given a note literal (a note name or a note object), returns the Note object\n * @example\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\n */\nexport function note(src: NoteLiteral): Note | NoNote {\n  const stringSrc = JSON.stringify(src);\n\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n\n  const value =\n    typeof src === \"string\"\n      ? parse(src)\n      : isPitch(src)\n        ? note(pitchName(src))\n        : isNamedPitch(src)\n          ? note(src.name)\n          : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\n\ntype NoteTokens = [string, string, string, string];\n\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * @private\n */\nexport function tokenizeNote(str: string): NoteTokens {\n  const m = REGEX.exec(str) as string[];\n  return m\n    ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]]\n    : [\"\", \"\", \"\", \"\"];\n}\n\n/**\n * @private\n */\nexport function coordToNote(noteCoord: PitchCoordinates): Note {\n  return note(pitch(noteCoord)) as Note;\n}\n\nconst mod = (n: number, m: number) => ((n % m) + m) % m;\n\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName: NoteName): Note | NoNote {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : undefined;\n  const coord = coordinates({ step, alt, oct });\n\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height =\n    oct === undefined\n      ? mod(SEMI[step] + alt, 12) - 12 * 99\n      : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\n\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step,\n  };\n}\n\nfunction pitchName(props: Pitch): NoteName {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n","// index.ts\nimport { compact, range, rotate } from \"@tonaljs/collection\";\nimport {\n  deprecate,\n  interval,\n  note,\n  transpose\n} from \"@tonaljs/core\";\nvar EmptyPcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: []\n};\nvar setNumToChroma = (num2) => Number(num2).toString(2).padStart(12, \"0\");\nvar chromaToNumber = (chroma2) => parseInt(chroma2, 2);\nvar REGEX = /^[01]{12}$/;\nfunction isChroma(set) {\n  return REGEX.test(set);\n}\nvar isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\nvar isPcset = (set) => set && isChroma(set.chroma);\nvar cache = { [EmptyPcset.chroma]: EmptyPcset };\nfunction get(src) {\n  const chroma2 = isChroma(src) ? src : isPcsetNum(src) ? setNumToChroma(src) : Array.isArray(src) ? listToChroma(src) : isPcset(src) ? src.chroma : EmptyPcset.chroma;\n  return cache[chroma2] = cache[chroma2] || chromaToPcset(chroma2);\n}\nvar pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\nvar chroma = (set) => get(set).chroma;\nvar intervals = (set) => get(set).intervals;\nvar num = (set) => get(set).setNum;\nvar IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\"\n];\nfunction chromaToIntervals(chroma2) {\n  const intervals2 = [];\n  for (let i = 0; i < 12; i++) {\n    if (chroma2.charAt(i) === \"1\")\n      intervals2.push(IVLS[i]);\n  }\n  return intervals2;\n}\nfunction notes(set) {\n  return get(set).intervals.map((ivl) => transpose(\"C\", ivl));\n}\nfunction chromas() {\n  return range(2048, 4095).map(setNumToChroma);\n}\nfunction modes(set, normalize = true) {\n  const pcs = get(set);\n  const binary = pcs.chroma.split(\"\");\n  return compact(\n    binary.map((_, i) => {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\nfunction isEqual(s1, s2) {\n  return get(s1).setNum === get(s2).setNum;\n}\nfunction isSubsetOf(set) {\n  const s = get(set).setNum;\n  return (notes2) => {\n    const o = get(notes2).setNum;\n    return s && s !== o && (o & s) === o;\n  };\n}\nfunction isSupersetOf(set) {\n  const s = get(set).setNum;\n  return (notes2) => {\n    const o = get(notes2).setNum;\n    return s && s !== o && (o | s) === o;\n  };\n}\nfunction isNoteIncludedIn(set) {\n  const s = get(set);\n  return (noteName) => {\n    const n = note(noteName);\n    return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n  };\n}\nvar includes = isNoteIncludedIn;\nfunction filter(set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes2) => {\n    return notes2.filter(isIncluded);\n  };\n}\nvar pcset_default = {\n  get,\n  chroma,\n  num,\n  intervals,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes,\n  notes,\n  // deprecated\n  pcset\n};\nfunction chromaRotations(chroma2) {\n  const binary = chroma2.split(\"\");\n  return binary.map((_, i) => rotate(i, binary).join(\"\"));\n}\nfunction chromaToPcset(chroma2) {\n  const setNum = chromaToNumber(chroma2);\n  const normalizedNum = chromaRotations(chroma2).map(chromaToNumber).filter((n) => n >= 2048).sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n  const intervals2 = chromaToIntervals(chroma2);\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma: chroma2,\n    normalized,\n    intervals: intervals2\n  };\n}\nfunction listToChroma(set) {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n  let pitch;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (let i = 0; i < set.length; i++) {\n    pitch = note(set[i]);\n    if (pitch.empty)\n      pitch = interval(set[i]);\n    if (!pitch.empty)\n      binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\nexport {\n  EmptyPcset,\n  chroma,\n  chromaToIntervals,\n  chromas,\n  pcset_default as default,\n  filter,\n  get,\n  includes,\n  isChroma,\n  isEqual,\n  isNoteIncludedIn,\n  isSubsetOf,\n  isSupersetOf,\n  modes,\n  notes,\n  pcset\n};\n//# sourceMappingURL=index.mjs.map","import { compact, range, rotate } from \"@tonaljs/collection\";\nimport {\n  Interval,\n  IntervalName,\n  NotFound,\n  Note,\n  NoteName,\n  deprecate,\n  interval,\n  note,\n  transpose,\n} from \"@tonaljs/core\";\n\n/**\n * The properties of a pitch class set\n * @param {number} num - a number between 1 and 4095 (both included) that\n * uniquely identifies the set. It's the decimal number of the chrom.\n * @param {string} chroma - a string representation of the set: a 12-char string\n * with either \"1\" or \"0\" as characters, representing a pitch class or not\n * for the given position in the octave. For example, a \"1\" at index 0 means 'C',\n * a \"1\" at index 2 means 'D', and so on...\n * @param {string} normalized - the chroma but shifted to the first 1\n * @param {number} length - the number of notes of the pitch class set\n * @param {IntervalName[]} intervals - the intervals of the pitch class set\n * *starting from C*\n */\nexport interface Pcset {\n  readonly name: string;\n  readonly empty: boolean;\n  readonly setNum: number;\n  readonly chroma: PcsetChroma;\n  readonly normalized: PcsetChroma;\n  readonly intervals: IntervalName[];\n}\n\nexport const EmptyPcset: Pcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: [],\n};\n\nexport type PcsetChroma = string;\nexport type PcsetNum = number;\n\n// UTILITIES\nconst setNumToChroma = (num: number): string =>\n  Number(num).toString(2).padStart(12, \"0\");\nconst chromaToNumber = (chroma: string): number => parseInt(chroma, 2);\nconst REGEX = /^[01]{12}$/;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isChroma(set: any): set is PcsetChroma {\n  return REGEX.test(set);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPcsetNum = (set: any): set is PcsetNum =>\n  typeof set === \"number\" && set >= 0 && set <= 4095;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPcset = (set: any): set is Pcset => set && isChroma(set.chroma);\n\nconst cache: { [key in string]: Pcset } = { [EmptyPcset.chroma]: EmptyPcset };\n\n/**\n * A definition of a pitch class set. It could be:\n * - The pitch class set chroma (a 12-length string with only 1s or 0s)\n * - The pitch class set number (an integer between 1 and 4095)\n * - An array of note names\n * - An array of interval names\n */\nexport type Set =\n  | Partial<Pcset>\n  | PcsetChroma\n  | PcsetNum\n  | NoteName[]\n  | IntervalName[];\n\n/**\n * Get the pitch class set of a collection of notes or set number or chroma\n */\nexport function get(src: Set): Pcset {\n  const chroma: PcsetChroma = isChroma(src)\n    ? src\n    : isPcsetNum(src)\n      ? setNumToChroma(src)\n      : Array.isArray(src)\n        ? listToChroma(src)\n        : isPcset(src)\n          ? src.chroma\n          : EmptyPcset.chroma;\n\n  return (cache[chroma] = cache[chroma] || chromaToPcset(chroma));\n}\n\n/**\n * Use Pcset.properties\n * @function\n * @deprecated\n */\nexport const pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\n\n/**\n * Get pitch class set chroma\n * @function\n * @example\n * Pcset.chroma([\"c\", \"d\", \"e\"]); //=> \"101010000000\"\n */\nexport const chroma = (set: Set) => get(set).chroma;\n\n/**\n * Get intervals (from C) of a set\n * @function\n * @example\n * Pcset.intervals([\"c\", \"d\", \"e\"]); //=>\n */\nconst intervals = (set: Set) => get(set).intervals;\n\n/**\n * Get pitch class set number\n * @function\n * @example\n * Pcset.num([\"c\", \"d\", \"e\"]); //=> 2192\n */\nconst num = (set: Set) => get(set).setNum;\n\nconst IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\",\n];\n\n/**\n * @private\n * Get the intervals of a pcset *starting from C*\n * @param {Set} set - the pitch class set\n * @return {IntervalName[]} an array of interval names or an empty array\n * if not a valid pitch class set\n */\nexport function chromaToIntervals(chroma: PcsetChroma): IntervalName[] {\n  const intervals = [];\n  for (let i = 0; i < 12; i++) {\n    // tslint:disable-next-line:curly\n    if (chroma.charAt(i) === \"1\") intervals.push(IVLS[i]);\n  }\n  return intervals;\n}\n\nexport function notes(set: Set): NoteName[] {\n  return get(set).intervals.map((ivl) => transpose(\"C\", ivl));\n}\n\n/**\n * Get a list of all possible pitch class sets (all possible chromas) *having\n * C as root*. There are 2048 different chromas. If you want them with another\n * note you have to transpose it\n *\n * @see http://allthescales.org/\n * @return {Array<PcsetChroma>} an array of possible chromas from '10000000000' to '11111111111'\n */\nexport function chromas(): PcsetChroma[] {\n  return range(2048, 4095).map(setNumToChroma);\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|string} set - the list of notes or pitchChr of the set\n * @param {boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<string>} an array with all the modes of the chroma\n *\n * @example\n * Pcset.modes([\"C\", \"D\", \"E\"]).map(Pcset.intervals)\n */\nexport function modes(set: Set, normalize = true): PcsetChroma[] {\n  const pcs = get(set);\n\n  const binary = pcs.chroma.split(\"\");\n  return compact(\n    binary.map((_, i) => {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    }),\n  );\n}\n\n/**\n * Test if two pitch class sets are numentical\n *\n * @param {Array|string} set1 - one of the pitch class sets\n * @param {Array|string} set2 - the other pitch class set\n * @return {boolean} true if they are equal\n * @example\n * Pcset.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1: Set, s2: Set) {\n  return get(s1).setNum === get(s2).setNum;\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function is curryfied.\n *\n * @param {PcsetChroma|NoteName[]} set - the superset to test against (chroma or\n * list of notes)\n * @return{function(PcsetChroma|NoteNames[]): boolean} a function accepting a set\n * to test against (chroma or list of notes)\n * @example\n * const inCMajor = Pcset.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set: Set) {\n  const s = get(set).setNum;\n\n  return (notes: Set | Pcset) => {\n    const o = get(notes).setNum;\n    // tslint:disable-next-line: no-bitwise\n    return s && s !== o && (o & s) === o;\n  };\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Set} set - an array of notes or a chroma set string to test against\n * @return {(subset: Set): boolean} a function that given a set\n * returns true if is a subset of the first one\n * @example\n * const extendsCMajor = Pcset.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set: Set) {\n  const s = get(set).setNum;\n  return (notes: Set) => {\n    const o = get(notes).setNum;\n    // tslint:disable-next-line: no-bitwise\n    return s && s !== o && (o | s) === o;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n *\n * @param {Array<string>} set - the base set to test against\n * @param {string} note - the note to test\n * @return {boolean} true if the note is included in the pcset\n *\n * Can be partially applied\n *\n * @example\n * const isNoteInCMajor = isNoteIncludedIn(['C', 'E', 'G'])\n * isNoteInCMajor('C4') // => true\n * isNoteInCMajor('C#4') // => false\n */\nexport function isNoteIncludedIn(set: Set) {\n  const s = get(set);\n\n  return (noteName: NoteName): boolean => {\n    const n = note(noteName);\n    return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n  };\n}\n\n/** @deprecated use: isNoteIncludedIn */\nexport const includes = isNoteIncludedIn;\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|string} set - the pitch class set notes\n * @param {Array|string} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * Pcset.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * Pcset.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set: Set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes: NoteName[]) => {\n    return notes.filter(isIncluded);\n  };\n}\n\nexport default {\n  get,\n  chroma,\n  num,\n  intervals,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes,\n  notes,\n  // deprecated\n  pcset,\n};\n\n//// PRIVATE ////\n\nfunction chromaRotations(chroma: string): string[] {\n  const binary = chroma.split(\"\");\n  return binary.map((_, i) => rotate(i, binary).join(\"\"));\n}\n\nfunction chromaToPcset(chroma: PcsetChroma): Pcset {\n  const setNum = chromaToNumber(chroma);\n  const normalizedNum = chromaRotations(chroma)\n    .map(chromaToNumber)\n    .filter((n) => n >= 2048)\n    .sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n\n  const intervals = chromaToIntervals(chroma);\n\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma,\n    normalized,\n    intervals,\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction listToChroma(set: any[]): PcsetChroma {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n\n  let pitch: Note | Interval | NotFound;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < set.length; i++) {\n    pitch = note(set[i]);\n    // tslint:disable-next-line: curly\n    if (pitch.empty) pitch = interval(set[i]);\n    // tslint:disable-next-line: curly\n    if (!pitch.empty) binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\n","// index.ts\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b)\n    ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n)\n    ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nvar collection_default = {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\nexport {\n  compact,\n  collection_default as default,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\n//# sourceMappingURL=index.mjs.map","/* eslint-disable @typescript-eslint/no-explicit-any */\n// ascending range\nfunction ascR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = n + b);\n  return a;\n}\n// descending range\nfunction descR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = b - n);\n  return a;\n}\n\n/**\n * Creates a numeric range\n *\n * @param {number} from\n * @param {number} to\n * @return {Array<number>}\n *\n * @example\n * range(-2, 2) // => [-2, -1, 0, 1, 2]\n * range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(from: number, to: number): number[] {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\n\n/**\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} collection\n * @return {Array} the rotated collection\n *\n * @example\n * rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate<T>(times: number, arr: T[]): T[] {\n  const len = arr.length;\n  const n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the collection with the null values removed\n * @function\n * @param {Array} collection\n * @return {Array}\n *\n * @example\n * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport function compact(arr: any[]): any[] {\n  return arr.filter((n) => n === 0 || n);\n}\n\n/**\n * Randomizes the order of the specified collection in-place, using the Fisher–Yates shuffle.\n *\n * @function\n * @param {Array} collection\n * @return {Array} the collection shuffled\n *\n * @example\n * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\n */\nexport function shuffle(arr: any[], rnd = Math.random): any[] {\n  let i: number;\n  let t: any;\n  let m: number = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\n\n/**\n * Get all permutations of an collection\n *\n * @param {Array} collection - the collection\n * @return {Array<Array>} an collection with all the permutations\n * @example\n * permutations([\"a\", \"b\", \"c\"])) // =>\n * [\n *   [\"a\", \"b\", \"c\"],\n *   [\"b\", \"a\", \"c\"],\n *   [\"b\", \"c\", \"a\"],\n *   [\"a\", \"c\", \"b\"],\n *   [\"c\", \"a\", \"b\"],\n *   [\"c\", \"b\", \"a\"]\n * ]\n */\nexport function permutations(arr: any[]): any[] {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      }),\n    );\n  }, []);\n}\n\nexport default {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle,\n};\n","// index.ts\nimport {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  pitch\n} from \"@tonaljs/pitch\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nvar NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\nvar cache = /* @__PURE__ */ new Map();\nvar stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nvar altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nvar accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const stringSrc = JSON.stringify(src);\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse(src) : isPitch(src) ? note(pitchName(src)) : isNamedPitch(src) ? note(src.name) : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m = REGEX.exec(str);\n  return m ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]] : [\"\", \"\", \"\", \"\"];\n}\nfunction coordToNote(noteCoord) {\n  return note(pitch(noteCoord));\n}\nvar mod = (n, m) => (n % m + m) % m;\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = coordinates({ step, alt, oct });\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\nexport {\n  accToAlt,\n  altToAcc,\n  coordToNote,\n  note,\n  stepToLetter,\n  tokenizeNote\n};\n//# sourceMappingURL=index.mjs.map","import {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  NamedPitch,\n  Pitch,\n  pitch,\n  PitchCoordinates,\n} from \"@tonaljs/pitch\";\n\nconst fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport type NoteWithOctave = string;\nexport type PcName = string;\nexport type NoteName = NoteWithOctave | PcName;\nexport type NoteLiteral = NoteName | Pitch | NamedPitch;\n\nexport interface Note extends Pitch, NamedPitch {\n  readonly empty: boolean;\n  readonly name: NoteName;\n  readonly letter: string;\n  readonly acc: string;\n  readonly pc: PcName;\n  readonly chroma: number;\n  readonly height: number;\n  readonly coord: PitchCoordinates;\n  readonly midi: number | null;\n  readonly freq: number | null;\n}\n\nexport interface NoNote extends Partial<Note> {\n  empty: true;\n  name: \"\";\n  pc: \"\";\n  acc: \"\";\n}\nconst NoNote: NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\n\nconst cache: Map<NoteLiteral | undefined, Note | NoNote> = new Map();\n\nexport const stepToLetter = (step: number) => \"CDEFGAB\".charAt(step);\nexport const altToAcc = (alt: number): string =>\n  alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nexport const accToAlt = (acc: string): number =>\n  acc[0] === \"b\" ? -acc.length : acc.length;\n\n/**\n * Given a note literal (a note name or a note object), returns the Note object\n * @example\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\n */\nexport function note(src: NoteLiteral): Note | NoNote {\n  const stringSrc = JSON.stringify(src);\n\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n\n  const value =\n    typeof src === \"string\"\n      ? parse(src)\n      : isPitch(src)\n        ? note(pitchName(src))\n        : isNamedPitch(src)\n          ? note(src.name)\n          : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\n\ntype NoteTokens = [string, string, string, string];\n\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * @private\n */\nexport function tokenizeNote(str: string): NoteTokens {\n  const m = REGEX.exec(str) as string[];\n  return m\n    ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]]\n    : [\"\", \"\", \"\", \"\"];\n}\n\n/**\n * @private\n */\nexport function coordToNote(noteCoord: PitchCoordinates): Note {\n  return note(pitch(noteCoord)) as Note;\n}\n\nconst mod = (n: number, m: number) => ((n % m) + m) % m;\n\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName: NoteName): Note | NoNote {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : undefined;\n  const coord = coordinates({ step, alt, oct });\n\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height =\n    oct === undefined\n      ? mod(SEMI[step] + alt, 12) - 12 * 99\n      : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\n\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step,\n  };\n}\n\nfunction pitchName(props: Pitch): NoteName {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n","// index.ts\nimport { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar SCALES = [\n  // Basic scales\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"minor\", \"aeolian\"],\n  // Jazz common scales\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n  // Modes\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n  // 5-note scales\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n  // 6-note scales\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 6A\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n  // 7-note scales\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\"\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\"\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\"\n  ],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\"\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  // Source https://en.wikipedia.org/wiki/Ukrainian_Dorian_scale\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\"\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\"\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n  // 8-note scales\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\"\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n  // 9-note scales\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n  // 10-note scales\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n  // 12-note scales\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"]\n];\nvar data_default = SCALES;\n\n// index.ts\nvar NoScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction names() {\n  return dictionary.map((scale) => scale.name);\n}\nfunction get(type) {\n  return index[type] || NoScaleType;\n}\nvar scaleType = deprecate(\n  \"ScaleDictionary.scaleType\",\n  \"ScaleType.get\",\n  get\n);\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = deprecate(\n  \"ScaleDictionary.entries\",\n  \"ScaleType.all\",\n  all\n);\nfunction keys() {\n  return Object.keys(index);\n}\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, name, aliases = []) {\n  const scale = { ...pcset(intervals), name, intervals, aliases };\n  dictionary.push(scale);\n  index[scale.name] = scale;\n  index[scale.setNum] = scale;\n  index[scale.chroma] = scale;\n  scale.aliases.forEach((alias) => addAlias(scale, alias));\n  return scale;\n}\nfunction addAlias(scale, alias) {\n  index[alias] = scale;\n}\ndata_default.forEach(\n  ([ivls, name, ...aliases]) => add(ivls.split(\" \"), name, aliases)\n);\nvar scale_type_default = {\n  names,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  scaleType\n};\nexport {\n  NoScaleType,\n  add,\n  addAlias,\n  all,\n  scale_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  scaleType\n};\n//# sourceMappingURL=index.mjs.map","import { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset,\n  Pcset,\n  PcsetChroma,\n  PcsetNum,\n} from \"@tonaljs/pcset\";\nimport data from \"./data\";\n\n/**\n * Properties for a scale in the scale dictionary. It's a pitch class set\n * properties with the following additional information:\n * - name: the scale name\n * - aliases: alternative list of names\n * - intervals: an array of interval names\n */\nexport interface ScaleType extends Pcset {\n  readonly name: string;\n  readonly aliases: string[];\n}\n\nexport const NoScaleType: ScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: [],\n};\n\ntype ScaleTypeName = string | PcsetChroma | PcsetNum;\n\nlet dictionary: ScaleType[] = [];\nlet index: Record<ScaleTypeName, ScaleType> = {};\n\nexport function names() {\n  return dictionary.map((scale) => scale.name);\n}\n\n/**\n * Given a scale name or chroma, return the scale properties\n *\n * @param {string} type - scale name or pitch class set chroma\n * @example\n * import { get } from 'tonaljs/scale-type'\n * get('major') // => { name: 'major', ... }\n */\nexport function get(type: ScaleTypeName): ScaleType {\n  return index[type] || NoScaleType;\n}\n\nexport const scaleType = deprecate(\n  \"ScaleDictionary.scaleType\",\n  \"ScaleType.get\",\n  get,\n);\n\n/**\n * Return a list of all scale types\n */\nexport function all() {\n  return dictionary.slice();\n}\n\nexport const entries = deprecate(\n  \"ScaleDictionary.entries\",\n  \"ScaleType.all\",\n  all,\n);\n\n/**\n * Keys used to reference scale types\n */\nexport function keys() {\n  return Object.keys(index);\n}\n\n/**\n * Clear the dictionary\n */\nexport function removeAll() {\n  dictionary = [];\n  index = {};\n}\n\n/**\n * Add a scale into dictionary\n * @param intervals\n * @param name\n * @param aliases\n */\nexport function add(\n  intervals: string[],\n  name: string,\n  aliases: string[] = [],\n): ScaleType {\n  const scale = { ...pcset(intervals), name, intervals, aliases };\n  dictionary.push(scale);\n  index[scale.name] = scale;\n  index[scale.setNum] = scale;\n  index[scale.chroma] = scale;\n  scale.aliases.forEach((alias) => addAlias(scale, alias));\n  return scale;\n}\n\nexport function addAlias(scale: ScaleType, alias: string) {\n  index[alias] = scale;\n}\n\ndata.forEach(([ivls, name, ...aliases]: string[]) =>\n  add(ivls.split(\" \"), name, aliases),\n);\n\nexport default {\n  names,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n\n  // deprecated\n  entries,\n  scaleType,\n};\n","// SCALES\n// Format: [\"intervals\", \"name\", \"alias1\", \"alias2\", ...]\nconst SCALES: string[][] = [\n  // Basic scales\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"minor\", \"aeolian\"],\n\n  // Jazz common scales\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n\n  // Modes\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n\n  // 5-note scales\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n\n  // 6-note scales\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 6A\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n\n  // 7-note scales\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\",\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\",\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\",\n  ],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\",\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  // Source https://en.wikipedia.org/wiki/Ukrainian_Dorian_scale\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\",\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\",\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n\n  // 8-note scales\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\",\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n\n  // 9-note scales\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n\n  // 10-note scales\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n\n  // 12-note scales\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"],\n];\n\nexport default SCALES;\n"],"names":["$35da740d59af89ba$var$cache","$c1fc50133d2a8115$export$70ce4c42ed4560f3","src","name","$c1fc50133d2a8115$export$3a746b746d570840","pitch2","step","alt","$c1fc50133d2a8115$var$FIFTHS","$c1fc50133d2a8115$var$STEPS_TO_OCTS","map","fifths","Math","floor","$c1fc50133d2a8115$export$741858880c96b18c","oct","dir","f","$c1fc50133d2a8115$var$FIFTHS_TO_STEPS","$c1fc50133d2a8115$export$6c9e2d66dea2a302","coord","o","$c1fc50133d2a8115$var$unaltered","i","$4e01aabfc377cdb3$var$fillStr","s","n","Array","abs","join","$4e01aabfc377cdb3$var$NoInterval","empty","acc","$4e01aabfc377cdb3$var$REGEX","RegExp","$4e01aabfc377cdb3$var$cache","$4e01aabfc377cdb3$export$3174cdbf0a0cbc84","$4e01aabfc377cdb3$var$parse","str","tokens","$4e01aabfc377cdb3$export$4eeb042b94fbf5c0","m","exec","num","q","t","$4e01aabfc377cdb3$var$TYPES","type","simple","test","length","semitones","$4e01aabfc377cdb3$var$SIZES","chroma","$4e01aabfc377cdb3$var$pitchName","props","calcNum","d","$202e805395000e0c$var$fillStr","$202e805395000e0c$var$NoNote","pc","$202e805395000e0c$var$cache","Map","$202e805395000e0c$export$4fed1eaee6342c12","charAt","$202e805395000e0c$export$fe2c2edbd7417985","$202e805395000e0c$export$8f7077a2780017bf","$202e805395000e0c$export$a92e4c44d367d0af","stringSrc","JSON","stringify","cached","get","value","$202e805395000e0c$var$parse","noteName","$202e805395000e0c$export$e13422ef2dcdcd5d","$202e805395000e0c$var$REGEX","toUpperCase","replace","letter","octStr","charCodeAt","$202e805395000e0c$var$SEMI","height","$202e805395000e0c$var$mod","freq","pow","midi","$202e805395000e0c$var$pitchName","set","$641169bf7b3af196$var$fillStr","$641169bf7b3af196$var$NoNote","$641169bf7b3af196$var$cache","$641169bf7b3af196$export$4fed1eaee6342c12","$641169bf7b3af196$export$fe2c2edbd7417985","$641169bf7b3af196$export$8f7077a2780017bf","$641169bf7b3af196$export$a92e4c44d367d0af","$641169bf7b3af196$var$parse","$641169bf7b3af196$export$e13422ef2dcdcd5d","$641169bf7b3af196$var$REGEX","$641169bf7b3af196$var$SEMI","$641169bf7b3af196$var$mod","$641169bf7b3af196$var$pitchName","$6afb6a04609a1abf$export$b680e6b2c82f8c2f","original","alternative","fn","args","console","warn","apply","$0d7cd0cdab616457$export$bb628a54ab399bc9","times","arr","len","slice","concat","$37ea67a5744539d1$export$b31835771c1cc4b0","setNum","normalized","intervals","$37ea67a5744539d1$var$setNumToChroma","num2","Number","toString","padStart","$37ea67a5744539d1$var$chromaToNumber","chroma2","parseInt","$37ea67a5744539d1$var$REGEX","$37ea67a5744539d1$var$isPcsetNum","$37ea67a5744539d1$var$isPcset","$37ea67a5744539d1$var$cache","$37ea67a5744539d1$export$3988ae62b71be9a3","$37ea67a5744539d1$export$607555f22891e149","isArray","$37ea67a5744539d1$var$listToChroma","pitch","binary","$37ea67a5744539d1$var$chromaToPcset","$37ea67a5744539d1$var$chromaRotations","split","_","filter","sort","intervals2","$37ea67a5744539d1$export$d2c8ed5314ca8436","push","$37ea67a5744539d1$var$IVLS","$5facd99e7fcea85e$var$NoChordType","quality","aliases","$5facd99e7fcea85e$var$dictionary","$5facd99e7fcea85e$var$index","$5facd99e7fcea85e$export$3988ae62b71be9a3","$5facd99e7fcea85e$export$84bf76cd7afc7469","$5facd99e7fcea85e$var$data_default","forEach","ivls","fullName","names2","$5facd99e7fcea85e$export$e16d8520af44a096","$5facd99e7fcea85e$var$getQuality","has","interval","indexOf","chord","alias","a","b","$c8ac599462e7da5f$var$namedSet","notes","pcToName","reduce","record","$c8ac599462e7da5f$var$testChromaNumber","bitmask","chromaNumber","Boolean","$c8ac599462e7da5f$var$hasAnyThird","$c8ac599462e7da5f$var$hasPerfectFifth","$c8ac599462e7da5f$var$hasAnySeventh","$c8ac599462e7da5f$var$hasNonPerfectFifth","$79b02d31442dcba5$var$fillStr","$79b02d31442dcba5$var$NoNote","$79b02d31442dcba5$var$cache","$79b02d31442dcba5$export$4fed1eaee6342c12","$79b02d31442dcba5$export$fe2c2edbd7417985","$79b02d31442dcba5$export$8f7077a2780017bf","$79b02d31442dcba5$export$a92e4c44d367d0af","$79b02d31442dcba5$var$parse","$79b02d31442dcba5$export$e13422ef2dcdcd5d","$79b02d31442dcba5$var$REGEX","$79b02d31442dcba5$var$SEMI","$79b02d31442dcba5$var$mod","$79b02d31442dcba5$var$pitchName","$98c1e925844fb606$export$799dbe5d40c297df","$98c1e925844fb606$var$dictionary","$98c1e925844fb606$var$index","$98c1e925844fb606$var$data_default","$98c1e925844fb606$export$e16d8520af44a096","scale","$f81c1a5b3e66f6db$var$NoChord","symbol","root","rootDegree","tonic","NaN","$35da740d59af89ba$var$notas","$35da740d59af89ba$var$afinacao","$35da740d59af89ba$var$braco","document","querySelector","$35da740d59af89ba$var$openNoteContainer","$35da740d59af89ba$var$rangeHTML","querySelectorAll","$35da740d59af89ba$var$rangeDiminui","$35da740d59af89ba$var$rangeAumenta","$35da740d59af89ba$var$acordeResultadoHTML","$35da740d59af89ba$var$acordeBTN","$35da740d59af89ba$var$infoBTN","$35da740d59af89ba$var$construtorBTN","$35da740d59af89ba$var$acordesBTN","$35da740d59af89ba$var$nomeInput","getElementsByName","$35da740d59af89ba$var$btnInputNome","$35da740d59af89ba$var$btnSalva","$35da740d59af89ba$var$arrayNotas","$35da740d59af89ba$var$notasSelecionadas","$35da740d59af89ba$var$btnAtual","$35da740d59af89ba$var$range","$35da740d59af89ba$var$defineNota","cordaAtual","casaAtual","notaInicial","notaAfinacao","findIndex","el","$35da740d59af89ba$var$atualizaNotas","j","replaceChild","createTextNode","childNodes","$35da740d59af89ba$var$atualizaCasas","textContent","$35da740d59af89ba$var$atualizaSelecao","undefined","nota","casa","elemento","$35da740d59af89ba$var$displayNotasSelecionadas","$35da740d59af89ba$var$desativarNotaVelha","coluna","classList","toggle","remove","add","holder","span","children","createElement","txt","append","$35da740d59af89ba$var$selecionaNota","elementoNovo","contains","obj","innerText","$35da740d59af89ba$export$3b0f3781aa3ef7a4","pai","ehVisualizador","notas","col","notaContainer","notaTxt","appendChild","addEventListener","notaContainerD","notaD","notaDTxt","$35da740d59af89ba$var$salvaCache","from","$35da740d59af89ba$var$alteraAtual","targetBTN","window","onload","div","sp","spBola","hidden","$35da740d59af89ba$var$selecionaOpenNote","$35da740d59af89ba$var$achaAcorde","acordes","source","options","x","found","$c8ac599462e7da5f$var$findMatches","weight","tonicChroma","allModes","normalize","pcs","r","mode","index","modeWithPerfectFifth","assumePerfectFifth","$c8ac599462e7da5f$var$withPerfectFifth","chordTypes","chordType","$c8ac599462e7da5f$var$hasAnyThirdAndPerfectFifthAndAnySeventh","chordName","baseNote","ul","li","replaceChildren","event","p","p2","h2","h2_contato","sec","linkedin","git","email","linkholder","href","target","c","$536c869b7829f0c2$export$11cdf119b9ba7752","divContainer","arrAcordes","localStorage","getItem","parse","acorde","btn","nome","divAcorde","divInformation","divDisplay","divInferior","divSuperior","btnVoltar","btnRemover","divVoltar","tagI","nomeAcorde","h3","arrNovo","splice","log","setItem","$536c869b7829f0c2$var$construirAcorde","divCasas","range","openNoteContainer","braco","divOpen","$35da740d59af89ba$var$salvaAcorde","novoAcorde","$35da740d59af89ba$var$achaDupli","arrayAcordes","detect","transpose","names"],"version":3,"file":"index.44ea49fd.js.map"}